// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CreateQuiz é renderizado  1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <ToastProvider
    autoDismiss={false}
    autoDismissTimeout={5000}
    components={
      Object {
        "Toast": [Function],
        "ToastContainer": [Function],
      }
    }
    placement="bottom-right"
    transitionDuration={220}
  >
    <CreateQuiz>
      <form
        onSubmit={[Function]}
      >
        <AlertDialogSlide
          error={false}
          handleError={[Function]}
          text="Título ou descrição não preenchidos. O questionário deve conter pelo menos uma questão."
        >
          <div>
            <WithStyles(ForwardRef(Dialog))
              TransitionComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "render": [Function],
                }
              }
              aria-describedby="alert-dialog-slide-description"
              aria-labelledby="alert-dialog-slide-title"
              keepMounted={true}
              onClose={[Function]}
              open={false}
            >
              <ForwardRef(Dialog)
                TransitionComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "render": [Function],
                  }
                }
                aria-describedby="alert-dialog-slide-description"
                aria-labelledby="alert-dialog-slide-title"
                classes={
                  Object {
                    "container": "MuiDialog-container",
                    "paper": "MuiDialog-paper",
                    "paperFullScreen": "MuiDialog-paperFullScreen",
                    "paperFullWidth": "MuiDialog-paperFullWidth",
                    "paperScrollBody": "MuiDialog-paperScrollBody",
                    "paperScrollPaper": "MuiDialog-paperScrollPaper",
                    "paperWidthFalse": "MuiDialog-paperWidthFalse",
                    "paperWidthLg": "MuiDialog-paperWidthLg",
                    "paperWidthMd": "MuiDialog-paperWidthMd",
                    "paperWidthSm": "MuiDialog-paperWidthSm",
                    "paperWidthXl": "MuiDialog-paperWidthXl",
                    "paperWidthXs": "MuiDialog-paperWidthXs",
                    "root": "MuiDialog-root",
                    "scrollBody": "MuiDialog-scrollBody",
                    "scrollPaper": "MuiDialog-scrollPaper",
                  }
                }
                keepMounted={true}
                onClose={[Function]}
                open={false}
              >
                <ForwardRef(Modal)
                  BackdropComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "Naked": Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "propTypes": Object {
                          "children": [Function],
                          "className": [Function],
                          "classes": [Function],
                          "invisible": [Function],
                          "open": [Function],
                          "transitionDuration": [Function],
                        },
                        "render": [Function],
                      },
                      "options": Object {
                        "defaultTheme": Object {
                          "breakpoints": Object {
                            "between": [Function],
                            "down": [Function],
                            "keys": Array [
                              "xs",
                              "sm",
                              "md",
                              "lg",
                              "xl",
                            ],
                            "only": [Function],
                            "up": [Function],
                            "values": Object {
                              "lg": 1280,
                              "md": 960,
                              "sm": 600,
                              "xl": 1920,
                              "xs": 0,
                            },
                            "width": [Function],
                          },
                          "direction": "ltr",
                          "mixins": Object {
                            "gutters": [Function],
                            "toolbar": Object {
                              "@media (min-width:0px) and (orientation: landscape)": Object {
                                "minHeight": 48,
                              },
                              "@media (min-width:600px)": Object {
                                "minHeight": 64,
                              },
                              "minHeight": 56,
                            },
                          },
                          "overrides": Object {},
                          "palette": Object {
                            "action": Object {
                              "activatedOpacity": 0.12,
                              "active": "rgba(0, 0, 0, 0.54)",
                              "disabled": "rgba(0, 0, 0, 0.26)",
                              "disabledBackground": "rgba(0, 0, 0, 0.12)",
                              "disabledOpacity": 0.38,
                              "focus": "rgba(0, 0, 0, 0.12)",
                              "focusOpacity": 0.12,
                              "hover": "rgba(0, 0, 0, 0.04)",
                              "hoverOpacity": 0.04,
                              "selected": "rgba(0, 0, 0, 0.08)",
                              "selectedOpacity": 0.08,
                            },
                            "augmentColor": [Function],
                            "background": Object {
                              "default": "#fafafa",
                              "paper": "#fff",
                            },
                            "common": Object {
                              "black": "#000",
                              "white": "#fff",
                            },
                            "contrastThreshold": 3,
                            "divider": "rgba(0, 0, 0, 0.12)",
                            "error": Object {
                              "contrastText": "#fff",
                              "dark": "#d32f2f",
                              "light": "#e57373",
                              "main": "#f44336",
                            },
                            "getContrastText": [Function],
                            "grey": Object {
                              "100": "#f5f5f5",
                              "200": "#eeeeee",
                              "300": "#e0e0e0",
                              "400": "#bdbdbd",
                              "50": "#fafafa",
                              "500": "#9e9e9e",
                              "600": "#757575",
                              "700": "#616161",
                              "800": "#424242",
                              "900": "#212121",
                              "A100": "#d5d5d5",
                              "A200": "#aaaaaa",
                              "A400": "#303030",
                              "A700": "#616161",
                            },
                            "info": Object {
                              "contrastText": "#fff",
                              "dark": "#1976d2",
                              "light": "#64b5f6",
                              "main": "#2196f3",
                            },
                            "primary": Object {
                              "contrastText": "#fff",
                              "dark": "#303f9f",
                              "light": "#7986cb",
                              "main": "#3f51b5",
                            },
                            "secondary": Object {
                              "contrastText": "#fff",
                              "dark": "#c51162",
                              "light": "#ff4081",
                              "main": "#f50057",
                            },
                            "success": Object {
                              "contrastText": "rgba(0, 0, 0, 0.87)",
                              "dark": "#388e3c",
                              "light": "#81c784",
                              "main": "#4caf50",
                            },
                            "text": Object {
                              "disabled": "rgba(0, 0, 0, 0.38)",
                              "hint": "rgba(0, 0, 0, 0.38)",
                              "primary": "rgba(0, 0, 0, 0.87)",
                              "secondary": "rgba(0, 0, 0, 0.54)",
                            },
                            "tonalOffset": 0.2,
                            "type": "light",
                            "warning": Object {
                              "contrastText": "rgba(0, 0, 0, 0.87)",
                              "dark": "#f57c00",
                              "light": "#ffb74d",
                              "main": "#ff9800",
                            },
                          },
                          "props": Object {},
                          "shadows": Array [
                            "none",
                            "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                            "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                            "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                            "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                            "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                            "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                            "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                            "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                            "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                            "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                            "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                            "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                            "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                            "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                            "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                            "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                            "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                            "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                          ],
                          "shape": Object {
                            "borderRadius": 4,
                          },
                          "spacing": [Function],
                          "transitions": Object {
                            "create": [Function],
                            "duration": Object {
                              "complex": 375,
                              "enteringScreen": 225,
                              "leavingScreen": 195,
                              "short": 250,
                              "shorter": 200,
                              "shortest": 150,
                              "standard": 300,
                            },
                            "easing": Object {
                              "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                              "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                              "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                              "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                            },
                            "getAutoHeightDuration": [Function],
                          },
                          "typography": Object {
                            "body1": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "1rem",
                              "fontWeight": 400,
                              "letterSpacing": "0.00938em",
                              "lineHeight": 1.5,
                            },
                            "body2": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "0.875rem",
                              "fontWeight": 400,
                              "letterSpacing": "0.01071em",
                              "lineHeight": 1.43,
                            },
                            "button": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "0.875rem",
                              "fontWeight": 500,
                              "letterSpacing": "0.02857em",
                              "lineHeight": 1.75,
                              "textTransform": "uppercase",
                            },
                            "caption": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "0.75rem",
                              "fontWeight": 400,
                              "letterSpacing": "0.03333em",
                              "lineHeight": 1.66,
                            },
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": 14,
                            "fontWeightBold": 700,
                            "fontWeightLight": 300,
                            "fontWeightMedium": 500,
                            "fontWeightRegular": 400,
                            "h1": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "6rem",
                              "fontWeight": 300,
                              "letterSpacing": "-0.01562em",
                              "lineHeight": 1.167,
                            },
                            "h2": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "3.75rem",
                              "fontWeight": 300,
                              "letterSpacing": "-0.00833em",
                              "lineHeight": 1.2,
                            },
                            "h3": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "3rem",
                              "fontWeight": 400,
                              "letterSpacing": "0em",
                              "lineHeight": 1.167,
                            },
                            "h4": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "2.125rem",
                              "fontWeight": 400,
                              "letterSpacing": "0.00735em",
                              "lineHeight": 1.235,
                            },
                            "h5": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "1.5rem",
                              "fontWeight": 400,
                              "letterSpacing": "0em",
                              "lineHeight": 1.334,
                            },
                            "h6": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "1.25rem",
                              "fontWeight": 500,
                              "letterSpacing": "0.0075em",
                              "lineHeight": 1.6,
                            },
                            "htmlFontSize": 16,
                            "overline": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "0.75rem",
                              "fontWeight": 400,
                              "letterSpacing": "0.08333em",
                              "lineHeight": 2.66,
                              "textTransform": "uppercase",
                            },
                            "pxToRem": [Function],
                            "round": [Function],
                            "subtitle1": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "1rem",
                              "fontWeight": 400,
                              "letterSpacing": "0.00938em",
                              "lineHeight": 1.75,
                            },
                            "subtitle2": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "0.875rem",
                              "fontWeight": 500,
                              "letterSpacing": "0.00714em",
                              "lineHeight": 1.57,
                            },
                          },
                          "zIndex": Object {
                            "appBar": 1100,
                            "drawer": 1200,
                            "mobileStepper": 1000,
                            "modal": 1300,
                            "snackbar": 1400,
                            "speedDial": 1050,
                            "tooltip": 1500,
                          },
                        },
                        "name": "MuiBackdrop",
                      },
                      "propTypes": Object {
                        "classes": [Function],
                        "innerRef": [Function],
                      },
                      "render": [Function],
                      "useStyles": [Function],
                    }
                  }
                  BackdropProps={
                    Object {
                      "transitionDuration": Object {
                        "enter": 225,
                        "exit": 195,
                      },
                    }
                  }
                  className="MuiDialog-root"
                  closeAfterTransition={true}
                  disableBackdropClick={false}
                  disableEscapeKeyDown={false}
                  keepMounted={true}
                  onClose={[Function]}
                  open={false}
                >
                  <ForwardRef(Portal)
                    disablePortal={false}
                  >
                    <Portal
                      containerInfo={
                        <body>
                          <div
                            class="react-toast-notifications__container css-omekjv-ToastContainer"
                          />
                          <div
                            aria-hidden="true"
                            class="MuiDialog-root"
                            role="presentation"
                            style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px; visibility: hidden;"
                          >
                            <div
                              aria-hidden="true"
                              class="MuiBackdrop-root"
                              style="opacity: 0; visibility: hidden;"
                            />
                            <div
                              data-test="sentinelStart"
                              tabindex="0"
                            />
                            <div
                              class="MuiDialog-container MuiDialog-scrollPaper"
                              role="none presentation"
                              style="visibility: hidden; webkit-transform: translateY(768px) translateY(0px); transform: translateY(768px) translateY(0px);"
                              tabindex="-1"
                            >
                              <div
                                aria-describedby="alert-dialog-slide-description"
                                aria-labelledby="alert-dialog-slide-title"
                                class="MuiPaper-root MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm MuiPaper-elevation24 MuiPaper-rounded"
                                role="dialog"
                              >
                                <div
                                  class="MuiDialogTitle-root"
                                  id="alert-dialog-slide-title"
                                >
                                  <h2
                                    class="MuiTypography-root MuiTypography-h6"
                                  >
                                    Atenção
                                  </h2>
                                </div>
                                <div
                                  class="MuiDialogContent-root"
                                >
                                  <p
                                    class="MuiTypography-root MuiDialogContentText-root MuiTypography-body1 MuiTypography-colorTextSecondary"
                                    id="alert-dialog-slide-description"
                                  >
                                    Título ou descrição não preenchidos. O questionário deve conter pelo menos uma questão.
                                  </p>
                                </div>
                                <div
                                  class="MuiDialogActions-root MuiDialogActions-spacing"
                                >
                                  <button
                                    class="MuiButtonBase-root MuiButton-root MuiButton-text MuiButton-textPrimary"
                                    tabindex="0"
                                    type="button"
                                  >
                                    <span
                                      class="MuiButton-label"
                                    >
                                      OK
                                    </span>
                                    <span
                                      class="MuiTouchRipple-root"
                                    />
                                  </button>
                                </div>
                              </div>
                            </div>
                            <div
                              data-test="sentinelEnd"
                              tabindex="0"
                            />
                          </div>
                          <div
                            aria-hidden="true"
                            class="MuiDialog-root"
                            role="presentation"
                            style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px; visibility: hidden;"
                          >
                            <div
                              aria-hidden="true"
                              class="MuiBackdrop-root"
                              style="opacity: 0; visibility: hidden;"
                            />
                            <div
                              data-test="sentinelStart"
                              tabindex="0"
                            />
                            <div
                              class="MuiDialog-container MuiDialog-scrollPaper"
                              role="none presentation"
                              style="visibility: hidden; webkit-transform: translateY(768px) translateY(0px); transform: translateY(768px) translateY(0px);"
                              tabindex="-1"
                            >
                              <div
                                aria-describedby="alert-dialog-slide-description"
                                aria-labelledby="alert-dialog-slide-title"
                                class="MuiPaper-root MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm MuiPaper-elevation24 MuiPaper-rounded"
                                role="dialog"
                              >
                                <div
                                  class="MuiDialogTitle-root"
                                  id="alert-dialog-slide-title"
                                >
                                  <h2
                                    class="MuiTypography-root MuiTypography-h6"
                                  >
                                    Atenção
                                  </h2>
                                </div>
                                <div
                                  class="MuiDialogContent-root"
                                >
                                  <p
                                    class="MuiTypography-root MuiDialogContentText-root MuiTypography-body1 MuiTypography-colorTextSecondary"
                                    id="alert-dialog-slide-description"
                                  >
                                    Preencha o título e pelo menos uma opção em questões que contenham opções.
                                  </p>
                                </div>
                                <div
                                  class="MuiDialogActions-root MuiDialogActions-spacing"
                                >
                                  <button
                                    class="MuiButtonBase-root MuiButton-root MuiButton-text MuiButton-textPrimary"
                                    tabindex="0"
                                    type="button"
                                  >
                                    <span
                                      class="MuiButton-label"
                                    >
                                      OK
                                    </span>
                                    <span
                                      class="MuiTouchRipple-root"
                                    />
                                  </button>
                                </div>
                              </div>
                            </div>
                            <div
                              data-test="sentinelEnd"
                              tabindex="0"
                            />
                          </div>
                        </body>
                      }
                    >
                      <div
                        className="MuiDialog-root"
                        onKeyDown={[Function]}
                        role="presentation"
                        style={
                          Object {
                            "bottom": 0,
                            "left": 0,
                            "position": "fixed",
                            "right": 0,
                            "top": 0,
                            "visibility": "hidden",
                            "zIndex": 1300,
                          }
                        }
                      >
                        <WithStyles(ForwardRef(Backdrop))
                          onClick={[Function]}
                          open={false}
                          transitionDuration={
                            Object {
                              "enter": 225,
                              "exit": 195,
                            }
                          }
                        >
                          <ForwardRef(Backdrop)
                            classes={
                              Object {
                                "invisible": "MuiBackdrop-invisible",
                                "root": "MuiBackdrop-root",
                              }
                            }
                            onClick={[Function]}
                            open={false}
                            transitionDuration={
                              Object {
                                "enter": 225,
                                "exit": 195,
                              }
                            }
                          >
                            <ForwardRef(Fade)
                              in={false}
                              onClick={[Function]}
                              timeout={
                                Object {
                                  "enter": 225,
                                  "exit": 195,
                                }
                              }
                            >
                              <Transition
                                appear={true}
                                enter={true}
                                exit={true}
                                in={false}
                                mountOnEnter={false}
                                onClick={[Function]}
                                onEnter={[Function]}
                                onEntered={[Function]}
                                onEntering={[Function]}
                                onExit={[Function]}
                                onExited={[Function]}
                                onExiting={[Function]}
                                timeout={
                                  Object {
                                    "enter": 225,
                                    "exit": 195,
                                  }
                                }
                                unmountOnExit={false}
                              >
                                <div
                                  aria-hidden={true}
                                  className="MuiBackdrop-root"
                                  onClick={[Function]}
                                  style={
                                    Object {
                                      "opacity": 0,
                                      "visibility": "hidden",
                                    }
                                  }
                                />
                              </Transition>
                            </ForwardRef(Fade)>
                          </ForwardRef(Backdrop)>
                        </WithStyles(ForwardRef(Backdrop))>
                        <Unstable_TrapFocus
                          disableAutoFocus={false}
                          disableEnforceFocus={false}
                          disableRestoreFocus={false}
                          getDoc={[Function]}
                          isEnabled={[Function]}
                          open={false}
                        >
                          <div
                            data-test="sentinelStart"
                            tabIndex={0}
                          />
                          <ForwardRef(Transition)
                            appear={true}
                            in={false}
                            onEnter={[Function]}
                            onExited={[Function]}
                            role="none presentation"
                            tabIndex="-1"
                            timeout={
                              Object {
                                "enter": 225,
                                "exit": 195,
                              }
                            }
                          >
                            <ForwardRef(Slide)
                              appear={true}
                              direction="up"
                              in={false}
                              onEnter={[Function]}
                              onExited={[Function]}
                              role="none presentation"
                              tabIndex="-1"
                              timeout={
                                Object {
                                  "enter": 225,
                                  "exit": 195,
                                }
                              }
                            >
                              <Transition
                                appear={true}
                                enter={true}
                                exit={true}
                                in={false}
                                mountOnEnter={false}
                                nodeRef={
                                  Object {
                                    "current": <div
                                      class="MuiDialog-container MuiDialog-scrollPaper"
                                      role="none presentation"
                                      style="visibility: hidden; webkit-transform: translateY(768px) translateY(0px); transform: translateY(768px) translateY(0px);"
                                      tabindex="-1"
                                    >
                                      <div
                                        aria-describedby="alert-dialog-slide-description"
                                        aria-labelledby="alert-dialog-slide-title"
                                        class="MuiPaper-root MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm MuiPaper-elevation24 MuiPaper-rounded"
                                        role="dialog"
                                      >
                                        <div
                                          class="MuiDialogTitle-root"
                                          id="alert-dialog-slide-title"
                                        >
                                          <h2
                                            class="MuiTypography-root MuiTypography-h6"
                                          >
                                            Atenção
                                          </h2>
                                        </div>
                                        <div
                                          class="MuiDialogContent-root"
                                        >
                                          <p
                                            class="MuiTypography-root MuiDialogContentText-root MuiTypography-body1 MuiTypography-colorTextSecondary"
                                            id="alert-dialog-slide-description"
                                          >
                                            Título ou descrição não preenchidos. O questionário deve conter pelo menos uma questão.
                                          </p>
                                        </div>
                                        <div
                                          class="MuiDialogActions-root MuiDialogActions-spacing"
                                        >
                                          <button
                                            class="MuiButtonBase-root MuiButton-root MuiButton-text MuiButton-textPrimary"
                                            tabindex="0"
                                            type="button"
                                          >
                                            <span
                                              class="MuiButton-label"
                                            >
                                              OK
                                            </span>
                                            <span
                                              class="MuiTouchRipple-root"
                                            />
                                          </button>
                                        </div>
                                      </div>
                                    </div>,
                                  }
                                }
                                onEnter={[Function]}
                                onEntered={[Function]}
                                onEntering={[Function]}
                                onExit={[Function]}
                                onExited={[Function]}
                                onExiting={[Function]}
                                role="none presentation"
                                tabIndex="-1"
                                timeout={
                                  Object {
                                    "enter": 225,
                                    "exit": 195,
                                  }
                                }
                                unmountOnExit={false}
                              >
                                <div
                                  className="MuiDialog-container MuiDialog-scrollPaper"
                                  onMouseDown={[Function]}
                                  onMouseUp={[Function]}
                                  role="none presentation"
                                  style={
                                    Object {
                                      "visibility": "hidden",
                                    }
                                  }
                                  tabIndex="-1"
                                >
                                  <WithStyles(ForwardRef(Paper))
                                    aria-describedby="alert-dialog-slide-description"
                                    aria-labelledby="alert-dialog-slide-title"
                                    className="MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm"
                                    elevation={24}
                                    role="dialog"
                                  >
                                    <ForwardRef(Paper)
                                      aria-describedby="alert-dialog-slide-description"
                                      aria-labelledby="alert-dialog-slide-title"
                                      className="MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm"
                                      classes={
                                        Object {
                                          "elevation0": "MuiPaper-elevation0",
                                          "elevation1": "MuiPaper-elevation1",
                                          "elevation10": "MuiPaper-elevation10",
                                          "elevation11": "MuiPaper-elevation11",
                                          "elevation12": "MuiPaper-elevation12",
                                          "elevation13": "MuiPaper-elevation13",
                                          "elevation14": "MuiPaper-elevation14",
                                          "elevation15": "MuiPaper-elevation15",
                                          "elevation16": "MuiPaper-elevation16",
                                          "elevation17": "MuiPaper-elevation17",
                                          "elevation18": "MuiPaper-elevation18",
                                          "elevation19": "MuiPaper-elevation19",
                                          "elevation2": "MuiPaper-elevation2",
                                          "elevation20": "MuiPaper-elevation20",
                                          "elevation21": "MuiPaper-elevation21",
                                          "elevation22": "MuiPaper-elevation22",
                                          "elevation23": "MuiPaper-elevation23",
                                          "elevation24": "MuiPaper-elevation24",
                                          "elevation3": "MuiPaper-elevation3",
                                          "elevation4": "MuiPaper-elevation4",
                                          "elevation5": "MuiPaper-elevation5",
                                          "elevation6": "MuiPaper-elevation6",
                                          "elevation7": "MuiPaper-elevation7",
                                          "elevation8": "MuiPaper-elevation8",
                                          "elevation9": "MuiPaper-elevation9",
                                          "outlined": "MuiPaper-outlined",
                                          "root": "MuiPaper-root",
                                          "rounded": "MuiPaper-rounded",
                                        }
                                      }
                                      elevation={24}
                                      role="dialog"
                                    >
                                      <div
                                        aria-describedby="alert-dialog-slide-description"
                                        aria-labelledby="alert-dialog-slide-title"
                                        className="MuiPaper-root MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm MuiPaper-elevation24 MuiPaper-rounded"
                                        role="dialog"
                                      >
                                        <WithStyles(ForwardRef(DialogTitle))
                                          id="alert-dialog-slide-title"
                                        >
                                          <ForwardRef(DialogTitle)
                                            classes={
                                              Object {
                                                "root": "MuiDialogTitle-root",
                                              }
                                            }
                                            id="alert-dialog-slide-title"
                                          >
                                            <div
                                              className="MuiDialogTitle-root"
                                              id="alert-dialog-slide-title"
                                            >
                                              <WithStyles(ForwardRef(Typography))
                                                component="h2"
                                                variant="h6"
                                              >
                                                <ForwardRef(Typography)
                                                  classes={
                                                    Object {
                                                      "alignCenter": "MuiTypography-alignCenter",
                                                      "alignJustify": "MuiTypography-alignJustify",
                                                      "alignLeft": "MuiTypography-alignLeft",
                                                      "alignRight": "MuiTypography-alignRight",
                                                      "body1": "MuiTypography-body1",
                                                      "body2": "MuiTypography-body2",
                                                      "button": "MuiTypography-button",
                                                      "caption": "MuiTypography-caption",
                                                      "colorError": "MuiTypography-colorError",
                                                      "colorInherit": "MuiTypography-colorInherit",
                                                      "colorPrimary": "MuiTypography-colorPrimary",
                                                      "colorSecondary": "MuiTypography-colorSecondary",
                                                      "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                      "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                      "displayBlock": "MuiTypography-displayBlock",
                                                      "displayInline": "MuiTypography-displayInline",
                                                      "gutterBottom": "MuiTypography-gutterBottom",
                                                      "h1": "MuiTypography-h1",
                                                      "h2": "MuiTypography-h2",
                                                      "h3": "MuiTypography-h3",
                                                      "h4": "MuiTypography-h4",
                                                      "h5": "MuiTypography-h5",
                                                      "h6": "MuiTypography-h6",
                                                      "noWrap": "MuiTypography-noWrap",
                                                      "overline": "MuiTypography-overline",
                                                      "paragraph": "MuiTypography-paragraph",
                                                      "root": "MuiTypography-root",
                                                      "srOnly": "MuiTypography-srOnly",
                                                      "subtitle1": "MuiTypography-subtitle1",
                                                      "subtitle2": "MuiTypography-subtitle2",
                                                    }
                                                  }
                                                  component="h2"
                                                  variant="h6"
                                                >
                                                  <h2
                                                    className="MuiTypography-root MuiTypography-h6"
                                                  >
                                                    Atenção
                                                  </h2>
                                                </ForwardRef(Typography)>
                                              </WithStyles(ForwardRef(Typography))>
                                            </div>
                                          </ForwardRef(DialogTitle)>
                                        </WithStyles(ForwardRef(DialogTitle))>
                                        <WithStyles(ForwardRef(DialogContent))>
                                          <ForwardRef(DialogContent)
                                            classes={
                                              Object {
                                                "dividers": "MuiDialogContent-dividers",
                                                "root": "MuiDialogContent-root",
                                              }
                                            }
                                          >
                                            <div
                                              className="MuiDialogContent-root"
                                            >
                                              <WithStyles(ForwardRef(DialogContentText))
                                                id="alert-dialog-slide-description"
                                              >
                                                <ForwardRef(DialogContentText)
                                                  classes={
                                                    Object {
                                                      "root": "MuiDialogContentText-root",
                                                    }
                                                  }
                                                  id="alert-dialog-slide-description"
                                                >
                                                  <WithStyles(ForwardRef(Typography))
                                                    classes={
                                                      Object {
                                                        "root": "MuiDialogContentText-root",
                                                      }
                                                    }
                                                    color="textSecondary"
                                                    component="p"
                                                    id="alert-dialog-slide-description"
                                                    variant="body1"
                                                  >
                                                    <ForwardRef(Typography)
                                                      classes={
                                                        Object {
                                                          "alignCenter": "MuiTypography-alignCenter",
                                                          "alignJustify": "MuiTypography-alignJustify",
                                                          "alignLeft": "MuiTypography-alignLeft",
                                                          "alignRight": "MuiTypography-alignRight",
                                                          "body1": "MuiTypography-body1",
                                                          "body2": "MuiTypography-body2",
                                                          "button": "MuiTypography-button",
                                                          "caption": "MuiTypography-caption",
                                                          "colorError": "MuiTypography-colorError",
                                                          "colorInherit": "MuiTypography-colorInherit",
                                                          "colorPrimary": "MuiTypography-colorPrimary",
                                                          "colorSecondary": "MuiTypography-colorSecondary",
                                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                          "displayBlock": "MuiTypography-displayBlock",
                                                          "displayInline": "MuiTypography-displayInline",
                                                          "gutterBottom": "MuiTypography-gutterBottom",
                                                          "h1": "MuiTypography-h1",
                                                          "h2": "MuiTypography-h2",
                                                          "h3": "MuiTypography-h3",
                                                          "h4": "MuiTypography-h4",
                                                          "h5": "MuiTypography-h5",
                                                          "h6": "MuiTypography-h6",
                                                          "noWrap": "MuiTypography-noWrap",
                                                          "overline": "MuiTypography-overline",
                                                          "paragraph": "MuiTypography-paragraph",
                                                          "root": "MuiTypography-root MuiDialogContentText-root",
                                                          "srOnly": "MuiTypography-srOnly",
                                                          "subtitle1": "MuiTypography-subtitle1",
                                                          "subtitle2": "MuiTypography-subtitle2",
                                                        }
                                                      }
                                                      color="textSecondary"
                                                      component="p"
                                                      id="alert-dialog-slide-description"
                                                      variant="body1"
                                                    >
                                                      <p
                                                        className="MuiTypography-root MuiDialogContentText-root MuiTypography-body1 MuiTypography-colorTextSecondary"
                                                        id="alert-dialog-slide-description"
                                                      >
                                                        Título ou descrição não preenchidos. O questionário deve conter pelo menos uma questão.
                                                      </p>
                                                    </ForwardRef(Typography)>
                                                  </WithStyles(ForwardRef(Typography))>
                                                </ForwardRef(DialogContentText)>
                                              </WithStyles(ForwardRef(DialogContentText))>
                                            </div>
                                          </ForwardRef(DialogContent)>
                                        </WithStyles(ForwardRef(DialogContent))>
                                        <WithStyles(ForwardRef(DialogActions))>
                                          <ForwardRef(DialogActions)
                                            classes={
                                              Object {
                                                "root": "MuiDialogActions-root",
                                                "spacing": "MuiDialogActions-spacing",
                                              }
                                            }
                                          >
                                            <div
                                              className="MuiDialogActions-root MuiDialogActions-spacing"
                                            >
                                              <WithStyles(ForwardRef(Button))
                                                color="primary"
                                                onClick={[Function]}
                                              >
                                                <ForwardRef(Button)
                                                  classes={
                                                    Object {
                                                      "colorInherit": "MuiButton-colorInherit",
                                                      "contained": "MuiButton-contained",
                                                      "containedPrimary": "MuiButton-containedPrimary",
                                                      "containedSecondary": "MuiButton-containedSecondary",
                                                      "containedSizeLarge": "MuiButton-containedSizeLarge",
                                                      "containedSizeSmall": "MuiButton-containedSizeSmall",
                                                      "disableElevation": "MuiButton-disableElevation",
                                                      "disabled": "Mui-disabled",
                                                      "endIcon": "MuiButton-endIcon",
                                                      "focusVisible": "Mui-focusVisible",
                                                      "fullWidth": "MuiButton-fullWidth",
                                                      "iconSizeLarge": "MuiButton-iconSizeLarge",
                                                      "iconSizeMedium": "MuiButton-iconSizeMedium",
                                                      "iconSizeSmall": "MuiButton-iconSizeSmall",
                                                      "label": "MuiButton-label",
                                                      "outlined": "MuiButton-outlined",
                                                      "outlinedPrimary": "MuiButton-outlinedPrimary",
                                                      "outlinedSecondary": "MuiButton-outlinedSecondary",
                                                      "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                                                      "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                                                      "root": "MuiButton-root",
                                                      "sizeLarge": "MuiButton-sizeLarge",
                                                      "sizeSmall": "MuiButton-sizeSmall",
                                                      "startIcon": "MuiButton-startIcon",
                                                      "text": "MuiButton-text",
                                                      "textPrimary": "MuiButton-textPrimary",
                                                      "textSecondary": "MuiButton-textSecondary",
                                                      "textSizeLarge": "MuiButton-textSizeLarge",
                                                      "textSizeSmall": "MuiButton-textSizeSmall",
                                                    }
                                                  }
                                                  color="primary"
                                                  onClick={[Function]}
                                                >
                                                  <WithStyles(ForwardRef(ButtonBase))
                                                    className="MuiButton-root MuiButton-text MuiButton-textPrimary"
                                                    component="button"
                                                    disabled={false}
                                                    focusRipple={true}
                                                    focusVisibleClassName="Mui-focusVisible"
                                                    onClick={[Function]}
                                                    type="button"
                                                  >
                                                    <ForwardRef(ButtonBase)
                                                      className="MuiButton-root MuiButton-text MuiButton-textPrimary"
                                                      classes={
                                                        Object {
                                                          "disabled": "Mui-disabled",
                                                          "focusVisible": "Mui-focusVisible",
                                                          "root": "MuiButtonBase-root",
                                                        }
                                                      }
                                                      component="button"
                                                      disabled={false}
                                                      focusRipple={true}
                                                      focusVisibleClassName="Mui-focusVisible"
                                                      onClick={[Function]}
                                                      type="button"
                                                    >
                                                      <button
                                                        className="MuiButtonBase-root MuiButton-root MuiButton-text MuiButton-textPrimary"
                                                        disabled={false}
                                                        onBlur={[Function]}
                                                        onClick={[Function]}
                                                        onDragLeave={[Function]}
                                                        onFocus={[Function]}
                                                        onKeyDown={[Function]}
                                                        onKeyUp={[Function]}
                                                        onMouseDown={[Function]}
                                                        onMouseLeave={[Function]}
                                                        onMouseUp={[Function]}
                                                        onTouchEnd={[Function]}
                                                        onTouchMove={[Function]}
                                                        onTouchStart={[Function]}
                                                        tabIndex={0}
                                                        type="button"
                                                      >
                                                        <span
                                                          className="MuiButton-label"
                                                        >
                                                          OK
                                                        </span>
                                                        <WithStyles(memo)
                                                          center={false}
                                                        >
                                                          <ForwardRef(TouchRipple)
                                                            center={false}
                                                            classes={
                                                              Object {
                                                                "child": "MuiTouchRipple-child",
                                                                "childLeaving": "MuiTouchRipple-childLeaving",
                                                                "childPulsate": "MuiTouchRipple-childPulsate",
                                                                "ripple": "MuiTouchRipple-ripple",
                                                                "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                "root": "MuiTouchRipple-root",
                                                              }
                                                            }
                                                          >
                                                            <span
                                                              className="MuiTouchRipple-root"
                                                            >
                                                              <TransitionGroup
                                                                childFactory={[Function]}
                                                                component={null}
                                                                exit={true}
                                                              />
                                                            </span>
                                                          </ForwardRef(TouchRipple)>
                                                        </WithStyles(memo)>
                                                      </button>
                                                    </ForwardRef(ButtonBase)>
                                                  </WithStyles(ForwardRef(ButtonBase))>
                                                </ForwardRef(Button)>
                                              </WithStyles(ForwardRef(Button))>
                                            </div>
                                          </ForwardRef(DialogActions)>
                                        </WithStyles(ForwardRef(DialogActions))>
                                      </div>
                                    </ForwardRef(Paper)>
                                  </WithStyles(ForwardRef(Paper))>
                                </div>
                              </Transition>
                            </ForwardRef(Slide)>
                          </ForwardRef(Transition)>
                          <div
                            data-test="sentinelEnd"
                            tabIndex={0}
                          />
                        </Unstable_TrapFocus>
                      </div>
                    </Portal>
                  </ForwardRef(Portal)>
                </ForwardRef(Modal)>
              </ForwardRef(Dialog)>
            </WithStyles(ForwardRef(Dialog))>
          </div>
        </AlertDialogSlide>
        <WithStyles(ForwardRef(Container))
          component="main"
          maxWidth="md"
        >
          <ForwardRef(Container)
            classes={
              Object {
                "disableGutters": "MuiContainer-disableGutters",
                "fixed": "MuiContainer-fixed",
                "maxWidthLg": "MuiContainer-maxWidthLg",
                "maxWidthMd": "MuiContainer-maxWidthMd",
                "maxWidthSm": "MuiContainer-maxWidthSm",
                "maxWidthXl": "MuiContainer-maxWidthXl",
                "maxWidthXs": "MuiContainer-maxWidthXs",
                "root": "MuiContainer-root",
              }
            }
            component="main"
            maxWidth="md"
          >
            <main
              className="MuiContainer-root MuiContainer-maxWidthMd"
            >
              <WithStyles(ForwardRef(Paper))
                className="makeStyles-paper-1 makeStyles-form-2"
              >
                <ForwardRef(Paper)
                  className="makeStyles-paper-1 makeStyles-form-2"
                  classes={
                    Object {
                      "elevation0": "MuiPaper-elevation0",
                      "elevation1": "MuiPaper-elevation1",
                      "elevation10": "MuiPaper-elevation10",
                      "elevation11": "MuiPaper-elevation11",
                      "elevation12": "MuiPaper-elevation12",
                      "elevation13": "MuiPaper-elevation13",
                      "elevation14": "MuiPaper-elevation14",
                      "elevation15": "MuiPaper-elevation15",
                      "elevation16": "MuiPaper-elevation16",
                      "elevation17": "MuiPaper-elevation17",
                      "elevation18": "MuiPaper-elevation18",
                      "elevation19": "MuiPaper-elevation19",
                      "elevation2": "MuiPaper-elevation2",
                      "elevation20": "MuiPaper-elevation20",
                      "elevation21": "MuiPaper-elevation21",
                      "elevation22": "MuiPaper-elevation22",
                      "elevation23": "MuiPaper-elevation23",
                      "elevation24": "MuiPaper-elevation24",
                      "elevation3": "MuiPaper-elevation3",
                      "elevation4": "MuiPaper-elevation4",
                      "elevation5": "MuiPaper-elevation5",
                      "elevation6": "MuiPaper-elevation6",
                      "elevation7": "MuiPaper-elevation7",
                      "elevation8": "MuiPaper-elevation8",
                      "elevation9": "MuiPaper-elevation9",
                      "outlined": "MuiPaper-outlined",
                      "root": "MuiPaper-root",
                      "rounded": "MuiPaper-rounded",
                    }
                  }
                >
                  <div
                    className="MuiPaper-root makeStyles-paper-1 makeStyles-form-2 MuiPaper-elevation1 MuiPaper-rounded"
                  >
                    <WithStyles(ForwardRef(Grid))
                      container={true}
                      spacing={2}
                    >
                      <ForwardRef(Grid)
                        classes={
                          Object {
                            "align-content-xs-center": "MuiGrid-align-content-xs-center",
                            "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                            "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                            "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                            "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                            "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                            "align-items-xs-center": "MuiGrid-align-items-xs-center",
                            "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                            "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                            "container": "MuiGrid-container",
                            "direction-xs-column": "MuiGrid-direction-xs-column",
                            "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                            "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                            "grid-lg-1": "MuiGrid-grid-lg-1",
                            "grid-lg-10": "MuiGrid-grid-lg-10",
                            "grid-lg-11": "MuiGrid-grid-lg-11",
                            "grid-lg-12": "MuiGrid-grid-lg-12",
                            "grid-lg-2": "MuiGrid-grid-lg-2",
                            "grid-lg-3": "MuiGrid-grid-lg-3",
                            "grid-lg-4": "MuiGrid-grid-lg-4",
                            "grid-lg-5": "MuiGrid-grid-lg-5",
                            "grid-lg-6": "MuiGrid-grid-lg-6",
                            "grid-lg-7": "MuiGrid-grid-lg-7",
                            "grid-lg-8": "MuiGrid-grid-lg-8",
                            "grid-lg-9": "MuiGrid-grid-lg-9",
                            "grid-lg-auto": "MuiGrid-grid-lg-auto",
                            "grid-lg-true": "MuiGrid-grid-lg-true",
                            "grid-md-1": "MuiGrid-grid-md-1",
                            "grid-md-10": "MuiGrid-grid-md-10",
                            "grid-md-11": "MuiGrid-grid-md-11",
                            "grid-md-12": "MuiGrid-grid-md-12",
                            "grid-md-2": "MuiGrid-grid-md-2",
                            "grid-md-3": "MuiGrid-grid-md-3",
                            "grid-md-4": "MuiGrid-grid-md-4",
                            "grid-md-5": "MuiGrid-grid-md-5",
                            "grid-md-6": "MuiGrid-grid-md-6",
                            "grid-md-7": "MuiGrid-grid-md-7",
                            "grid-md-8": "MuiGrid-grid-md-8",
                            "grid-md-9": "MuiGrid-grid-md-9",
                            "grid-md-auto": "MuiGrid-grid-md-auto",
                            "grid-md-true": "MuiGrid-grid-md-true",
                            "grid-sm-1": "MuiGrid-grid-sm-1",
                            "grid-sm-10": "MuiGrid-grid-sm-10",
                            "grid-sm-11": "MuiGrid-grid-sm-11",
                            "grid-sm-12": "MuiGrid-grid-sm-12",
                            "grid-sm-2": "MuiGrid-grid-sm-2",
                            "grid-sm-3": "MuiGrid-grid-sm-3",
                            "grid-sm-4": "MuiGrid-grid-sm-4",
                            "grid-sm-5": "MuiGrid-grid-sm-5",
                            "grid-sm-6": "MuiGrid-grid-sm-6",
                            "grid-sm-7": "MuiGrid-grid-sm-7",
                            "grid-sm-8": "MuiGrid-grid-sm-8",
                            "grid-sm-9": "MuiGrid-grid-sm-9",
                            "grid-sm-auto": "MuiGrid-grid-sm-auto",
                            "grid-sm-true": "MuiGrid-grid-sm-true",
                            "grid-xl-1": "MuiGrid-grid-xl-1",
                            "grid-xl-10": "MuiGrid-grid-xl-10",
                            "grid-xl-11": "MuiGrid-grid-xl-11",
                            "grid-xl-12": "MuiGrid-grid-xl-12",
                            "grid-xl-2": "MuiGrid-grid-xl-2",
                            "grid-xl-3": "MuiGrid-grid-xl-3",
                            "grid-xl-4": "MuiGrid-grid-xl-4",
                            "grid-xl-5": "MuiGrid-grid-xl-5",
                            "grid-xl-6": "MuiGrid-grid-xl-6",
                            "grid-xl-7": "MuiGrid-grid-xl-7",
                            "grid-xl-8": "MuiGrid-grid-xl-8",
                            "grid-xl-9": "MuiGrid-grid-xl-9",
                            "grid-xl-auto": "MuiGrid-grid-xl-auto",
                            "grid-xl-true": "MuiGrid-grid-xl-true",
                            "grid-xs-1": "MuiGrid-grid-xs-1",
                            "grid-xs-10": "MuiGrid-grid-xs-10",
                            "grid-xs-11": "MuiGrid-grid-xs-11",
                            "grid-xs-12": "MuiGrid-grid-xs-12",
                            "grid-xs-2": "MuiGrid-grid-xs-2",
                            "grid-xs-3": "MuiGrid-grid-xs-3",
                            "grid-xs-4": "MuiGrid-grid-xs-4",
                            "grid-xs-5": "MuiGrid-grid-xs-5",
                            "grid-xs-6": "MuiGrid-grid-xs-6",
                            "grid-xs-7": "MuiGrid-grid-xs-7",
                            "grid-xs-8": "MuiGrid-grid-xs-8",
                            "grid-xs-9": "MuiGrid-grid-xs-9",
                            "grid-xs-auto": "MuiGrid-grid-xs-auto",
                            "grid-xs-true": "MuiGrid-grid-xs-true",
                            "item": "MuiGrid-item",
                            "justify-xs-center": "MuiGrid-justify-xs-center",
                            "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                            "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                            "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                            "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                            "root": "MuiGrid-root",
                            "spacing-xs-1": "MuiGrid-spacing-xs-1",
                            "spacing-xs-10": "MuiGrid-spacing-xs-10",
                            "spacing-xs-2": "MuiGrid-spacing-xs-2",
                            "spacing-xs-3": "MuiGrid-spacing-xs-3",
                            "spacing-xs-4": "MuiGrid-spacing-xs-4",
                            "spacing-xs-5": "MuiGrid-spacing-xs-5",
                            "spacing-xs-6": "MuiGrid-spacing-xs-6",
                            "spacing-xs-7": "MuiGrid-spacing-xs-7",
                            "spacing-xs-8": "MuiGrid-spacing-xs-8",
                            "spacing-xs-9": "MuiGrid-spacing-xs-9",
                            "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                            "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                            "zeroMinWidth": "MuiGrid-zeroMinWidth",
                          }
                        }
                        container={true}
                        spacing={2}
                      >
                        <div
                          className="MuiGrid-root MuiGrid-container MuiGrid-spacing-xs-2"
                        >
                          <WithStyles(ForwardRef(Grid))
                            item={true}
                            xs={12}
                          >
                            <ForwardRef(Grid)
                              classes={
                                Object {
                                  "align-content-xs-center": "MuiGrid-align-content-xs-center",
                                  "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                                  "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                                  "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                                  "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                                  "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                                  "align-items-xs-center": "MuiGrid-align-items-xs-center",
                                  "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                                  "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                                  "container": "MuiGrid-container",
                                  "direction-xs-column": "MuiGrid-direction-xs-column",
                                  "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                                  "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                                  "grid-lg-1": "MuiGrid-grid-lg-1",
                                  "grid-lg-10": "MuiGrid-grid-lg-10",
                                  "grid-lg-11": "MuiGrid-grid-lg-11",
                                  "grid-lg-12": "MuiGrid-grid-lg-12",
                                  "grid-lg-2": "MuiGrid-grid-lg-2",
                                  "grid-lg-3": "MuiGrid-grid-lg-3",
                                  "grid-lg-4": "MuiGrid-grid-lg-4",
                                  "grid-lg-5": "MuiGrid-grid-lg-5",
                                  "grid-lg-6": "MuiGrid-grid-lg-6",
                                  "grid-lg-7": "MuiGrid-grid-lg-7",
                                  "grid-lg-8": "MuiGrid-grid-lg-8",
                                  "grid-lg-9": "MuiGrid-grid-lg-9",
                                  "grid-lg-auto": "MuiGrid-grid-lg-auto",
                                  "grid-lg-true": "MuiGrid-grid-lg-true",
                                  "grid-md-1": "MuiGrid-grid-md-1",
                                  "grid-md-10": "MuiGrid-grid-md-10",
                                  "grid-md-11": "MuiGrid-grid-md-11",
                                  "grid-md-12": "MuiGrid-grid-md-12",
                                  "grid-md-2": "MuiGrid-grid-md-2",
                                  "grid-md-3": "MuiGrid-grid-md-3",
                                  "grid-md-4": "MuiGrid-grid-md-4",
                                  "grid-md-5": "MuiGrid-grid-md-5",
                                  "grid-md-6": "MuiGrid-grid-md-6",
                                  "grid-md-7": "MuiGrid-grid-md-7",
                                  "grid-md-8": "MuiGrid-grid-md-8",
                                  "grid-md-9": "MuiGrid-grid-md-9",
                                  "grid-md-auto": "MuiGrid-grid-md-auto",
                                  "grid-md-true": "MuiGrid-grid-md-true",
                                  "grid-sm-1": "MuiGrid-grid-sm-1",
                                  "grid-sm-10": "MuiGrid-grid-sm-10",
                                  "grid-sm-11": "MuiGrid-grid-sm-11",
                                  "grid-sm-12": "MuiGrid-grid-sm-12",
                                  "grid-sm-2": "MuiGrid-grid-sm-2",
                                  "grid-sm-3": "MuiGrid-grid-sm-3",
                                  "grid-sm-4": "MuiGrid-grid-sm-4",
                                  "grid-sm-5": "MuiGrid-grid-sm-5",
                                  "grid-sm-6": "MuiGrid-grid-sm-6",
                                  "grid-sm-7": "MuiGrid-grid-sm-7",
                                  "grid-sm-8": "MuiGrid-grid-sm-8",
                                  "grid-sm-9": "MuiGrid-grid-sm-9",
                                  "grid-sm-auto": "MuiGrid-grid-sm-auto",
                                  "grid-sm-true": "MuiGrid-grid-sm-true",
                                  "grid-xl-1": "MuiGrid-grid-xl-1",
                                  "grid-xl-10": "MuiGrid-grid-xl-10",
                                  "grid-xl-11": "MuiGrid-grid-xl-11",
                                  "grid-xl-12": "MuiGrid-grid-xl-12",
                                  "grid-xl-2": "MuiGrid-grid-xl-2",
                                  "grid-xl-3": "MuiGrid-grid-xl-3",
                                  "grid-xl-4": "MuiGrid-grid-xl-4",
                                  "grid-xl-5": "MuiGrid-grid-xl-5",
                                  "grid-xl-6": "MuiGrid-grid-xl-6",
                                  "grid-xl-7": "MuiGrid-grid-xl-7",
                                  "grid-xl-8": "MuiGrid-grid-xl-8",
                                  "grid-xl-9": "MuiGrid-grid-xl-9",
                                  "grid-xl-auto": "MuiGrid-grid-xl-auto",
                                  "grid-xl-true": "MuiGrid-grid-xl-true",
                                  "grid-xs-1": "MuiGrid-grid-xs-1",
                                  "grid-xs-10": "MuiGrid-grid-xs-10",
                                  "grid-xs-11": "MuiGrid-grid-xs-11",
                                  "grid-xs-12": "MuiGrid-grid-xs-12",
                                  "grid-xs-2": "MuiGrid-grid-xs-2",
                                  "grid-xs-3": "MuiGrid-grid-xs-3",
                                  "grid-xs-4": "MuiGrid-grid-xs-4",
                                  "grid-xs-5": "MuiGrid-grid-xs-5",
                                  "grid-xs-6": "MuiGrid-grid-xs-6",
                                  "grid-xs-7": "MuiGrid-grid-xs-7",
                                  "grid-xs-8": "MuiGrid-grid-xs-8",
                                  "grid-xs-9": "MuiGrid-grid-xs-9",
                                  "grid-xs-auto": "MuiGrid-grid-xs-auto",
                                  "grid-xs-true": "MuiGrid-grid-xs-true",
                                  "item": "MuiGrid-item",
                                  "justify-xs-center": "MuiGrid-justify-xs-center",
                                  "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                                  "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                                  "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                                  "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                                  "root": "MuiGrid-root",
                                  "spacing-xs-1": "MuiGrid-spacing-xs-1",
                                  "spacing-xs-10": "MuiGrid-spacing-xs-10",
                                  "spacing-xs-2": "MuiGrid-spacing-xs-2",
                                  "spacing-xs-3": "MuiGrid-spacing-xs-3",
                                  "spacing-xs-4": "MuiGrid-spacing-xs-4",
                                  "spacing-xs-5": "MuiGrid-spacing-xs-5",
                                  "spacing-xs-6": "MuiGrid-spacing-xs-6",
                                  "spacing-xs-7": "MuiGrid-spacing-xs-7",
                                  "spacing-xs-8": "MuiGrid-spacing-xs-8",
                                  "spacing-xs-9": "MuiGrid-spacing-xs-9",
                                  "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                                  "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                                  "zeroMinWidth": "MuiGrid-zeroMinWidth",
                                }
                              }
                              item={true}
                              xs={12}
                            >
                              <div
                                className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-12"
                              >
                                <WithStyles(ForwardRef(TextField))
                                  InputProps={
                                    Object {
                                      "classes": Object {
                                        "input": "makeStyles-resize-4",
                                      },
                                    }
                                  }
                                  fullWidth={true}
                                  label="Titulo do meu questionario"
                                  name="title"
                                  onChange={[Function]}
                                  value=""
                                >
                                  <ForwardRef(TextField)
                                    InputProps={
                                      Object {
                                        "classes": Object {
                                          "input": "makeStyles-resize-4",
                                        },
                                      }
                                    }
                                    classes={
                                      Object {
                                        "root": "MuiTextField-root",
                                      }
                                    }
                                    fullWidth={true}
                                    label="Titulo do meu questionario"
                                    name="title"
                                    onChange={[Function]}
                                    value=""
                                  >
                                    <WithStyles(ForwardRef(FormControl))
                                      className="MuiTextField-root"
                                      color="primary"
                                      disabled={false}
                                      error={false}
                                      fullWidth={true}
                                      required={false}
                                      variant="standard"
                                    >
                                      <ForwardRef(FormControl)
                                        className="MuiTextField-root"
                                        classes={
                                          Object {
                                            "fullWidth": "MuiFormControl-fullWidth",
                                            "marginDense": "MuiFormControl-marginDense",
                                            "marginNormal": "MuiFormControl-marginNormal",
                                            "root": "MuiFormControl-root",
                                          }
                                        }
                                        color="primary"
                                        disabled={false}
                                        error={false}
                                        fullWidth={true}
                                        required={false}
                                        variant="standard"
                                      >
                                        <div
                                          className="MuiFormControl-root MuiTextField-root MuiFormControl-fullWidth"
                                        >
                                          <WithStyles(ForwardRef(InputLabel))>
                                            <ForwardRef(InputLabel)
                                              classes={
                                                Object {
                                                  "animated": "MuiInputLabel-animated",
                                                  "asterisk": "MuiInputLabel-asterisk",
                                                  "disabled": "Mui-disabled",
                                                  "error": "Mui-error",
                                                  "filled": "MuiInputLabel-filled",
                                                  "focused": "Mui-focused",
                                                  "formControl": "MuiInputLabel-formControl",
                                                  "marginDense": "MuiInputLabel-marginDense",
                                                  "outlined": "MuiInputLabel-outlined",
                                                  "required": "Mui-required",
                                                  "root": "MuiInputLabel-root",
                                                  "shrink": "MuiInputLabel-shrink",
                                                }
                                              }
                                            >
                                              <WithStyles(ForwardRef(FormLabel))
                                                className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                                                classes={
                                                  Object {
                                                    "asterisk": "MuiInputLabel-asterisk",
                                                    "disabled": "Mui-disabled",
                                                    "error": "Mui-error",
                                                    "focused": "Mui-focused",
                                                    "required": "Mui-required",
                                                  }
                                                }
                                                data-shrink={false}
                                              >
                                                <ForwardRef(FormLabel)
                                                  className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                                                  classes={
                                                    Object {
                                                      "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                                                      "colorSecondary": "MuiFormLabel-colorSecondary",
                                                      "disabled": "Mui-disabled Mui-disabled",
                                                      "error": "Mui-error Mui-error",
                                                      "filled": "MuiFormLabel-filled",
                                                      "focused": "Mui-focused Mui-focused",
                                                      "required": "Mui-required Mui-required",
                                                      "root": "MuiFormLabel-root",
                                                    }
                                                  }
                                                  data-shrink={false}
                                                >
                                                  <label
                                                    className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                                                    data-shrink={false}
                                                  >
                                                    Titulo do meu questionario
                                                  </label>
                                                </ForwardRef(FormLabel)>
                                              </WithStyles(ForwardRef(FormLabel))>
                                            </ForwardRef(InputLabel)>
                                          </WithStyles(ForwardRef(InputLabel))>
                                          <WithStyles(ForwardRef(Input))
                                            autoFocus={false}
                                            classes={
                                              Object {
                                                "input": "makeStyles-resize-4",
                                              }
                                            }
                                            fullWidth={true}
                                            multiline={false}
                                            name="title"
                                            onChange={[Function]}
                                            value=""
                                          >
                                            <ForwardRef(Input)
                                              autoFocus={false}
                                              classes={
                                                Object {
                                                  "colorSecondary": "MuiInput-colorSecondary",
                                                  "disabled": "Mui-disabled",
                                                  "error": "Mui-error",
                                                  "focused": "Mui-focused",
                                                  "formControl": "MuiInput-formControl",
                                                  "fullWidth": "MuiInput-fullWidth",
                                                  "input": "MuiInput-input makeStyles-resize-4",
                                                  "inputMarginDense": "MuiInput-inputMarginDense",
                                                  "inputMultiline": "MuiInput-inputMultiline",
                                                  "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                  "marginDense": "MuiInput-marginDense",
                                                  "multiline": "MuiInput-multiline",
                                                  "root": "MuiInput-root",
                                                  "underline": "MuiInput-underline",
                                                }
                                              }
                                              fullWidth={true}
                                              multiline={false}
                                              name="title"
                                              onChange={[Function]}
                                              value=""
                                            >
                                              <WithStyles(ForwardRef(InputBase))
                                                autoFocus={false}
                                                classes={
                                                  Object {
                                                    "colorSecondary": "MuiInput-colorSecondary",
                                                    "disabled": "Mui-disabled",
                                                    "error": "Mui-error",
                                                    "focused": "Mui-focused",
                                                    "formControl": "MuiInput-formControl",
                                                    "fullWidth": "MuiInput-fullWidth",
                                                    "input": "MuiInput-input makeStyles-resize-4",
                                                    "inputMarginDense": "MuiInput-inputMarginDense",
                                                    "inputMultiline": "MuiInput-inputMultiline",
                                                    "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                    "marginDense": "MuiInput-marginDense",
                                                    "multiline": "MuiInput-multiline",
                                                    "root": "MuiInput-root MuiInput-underline",
                                                    "underline": null,
                                                  }
                                                }
                                                fullWidth={true}
                                                inputComponent="input"
                                                multiline={false}
                                                name="title"
                                                onChange={[Function]}
                                                type="text"
                                                value=""
                                              >
                                                <ForwardRef(InputBase)
                                                  autoFocus={false}
                                                  classes={
                                                    Object {
                                                      "adornedEnd": "MuiInputBase-adornedEnd",
                                                      "adornedStart": "MuiInputBase-adornedStart",
                                                      "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                                      "disabled": "Mui-disabled Mui-disabled",
                                                      "error": "Mui-error Mui-error",
                                                      "focused": "Mui-focused Mui-focused",
                                                      "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                                      "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                                      "input": "MuiInputBase-input MuiInput-input makeStyles-resize-4",
                                                      "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                                      "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                                      "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                      "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                                      "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                                      "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                                      "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                                      "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                                      "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                                    }
                                                  }
                                                  fullWidth={true}
                                                  inputComponent="input"
                                                  multiline={false}
                                                  name="title"
                                                  onChange={[Function]}
                                                  type="text"
                                                  value=""
                                                >
                                                  <div
                                                    className="MuiInputBase-root MuiInput-root MuiInput-underline MuiInputBase-fullWidth MuiInput-fullWidth MuiInputBase-formControl MuiInput-formControl"
                                                    onClick={[Function]}
                                                  >
                                                    <input
                                                      aria-invalid={false}
                                                      autoFocus={false}
                                                      className="MuiInputBase-input MuiInput-input makeStyles-resize-4"
                                                      disabled={false}
                                                      name="title"
                                                      onAnimationStart={[Function]}
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      onFocus={[Function]}
                                                      required={false}
                                                      type="text"
                                                      value=""
                                                    />
                                                  </div>
                                                </ForwardRef(InputBase)>
                                              </WithStyles(ForwardRef(InputBase))>
                                            </ForwardRef(Input)>
                                          </WithStyles(ForwardRef(Input))>
                                        </div>
                                      </ForwardRef(FormControl)>
                                    </WithStyles(ForwardRef(FormControl))>
                                  </ForwardRef(TextField)>
                                </WithStyles(ForwardRef(TextField))>
                              </div>
                            </ForwardRef(Grid)>
                          </WithStyles(ForwardRef(Grid))>
                          <WithStyles(ForwardRef(Grid))
                            item={true}
                            xs={12}
                          >
                            <ForwardRef(Grid)
                              classes={
                                Object {
                                  "align-content-xs-center": "MuiGrid-align-content-xs-center",
                                  "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                                  "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                                  "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                                  "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                                  "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                                  "align-items-xs-center": "MuiGrid-align-items-xs-center",
                                  "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                                  "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                                  "container": "MuiGrid-container",
                                  "direction-xs-column": "MuiGrid-direction-xs-column",
                                  "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                                  "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                                  "grid-lg-1": "MuiGrid-grid-lg-1",
                                  "grid-lg-10": "MuiGrid-grid-lg-10",
                                  "grid-lg-11": "MuiGrid-grid-lg-11",
                                  "grid-lg-12": "MuiGrid-grid-lg-12",
                                  "grid-lg-2": "MuiGrid-grid-lg-2",
                                  "grid-lg-3": "MuiGrid-grid-lg-3",
                                  "grid-lg-4": "MuiGrid-grid-lg-4",
                                  "grid-lg-5": "MuiGrid-grid-lg-5",
                                  "grid-lg-6": "MuiGrid-grid-lg-6",
                                  "grid-lg-7": "MuiGrid-grid-lg-7",
                                  "grid-lg-8": "MuiGrid-grid-lg-8",
                                  "grid-lg-9": "MuiGrid-grid-lg-9",
                                  "grid-lg-auto": "MuiGrid-grid-lg-auto",
                                  "grid-lg-true": "MuiGrid-grid-lg-true",
                                  "grid-md-1": "MuiGrid-grid-md-1",
                                  "grid-md-10": "MuiGrid-grid-md-10",
                                  "grid-md-11": "MuiGrid-grid-md-11",
                                  "grid-md-12": "MuiGrid-grid-md-12",
                                  "grid-md-2": "MuiGrid-grid-md-2",
                                  "grid-md-3": "MuiGrid-grid-md-3",
                                  "grid-md-4": "MuiGrid-grid-md-4",
                                  "grid-md-5": "MuiGrid-grid-md-5",
                                  "grid-md-6": "MuiGrid-grid-md-6",
                                  "grid-md-7": "MuiGrid-grid-md-7",
                                  "grid-md-8": "MuiGrid-grid-md-8",
                                  "grid-md-9": "MuiGrid-grid-md-9",
                                  "grid-md-auto": "MuiGrid-grid-md-auto",
                                  "grid-md-true": "MuiGrid-grid-md-true",
                                  "grid-sm-1": "MuiGrid-grid-sm-1",
                                  "grid-sm-10": "MuiGrid-grid-sm-10",
                                  "grid-sm-11": "MuiGrid-grid-sm-11",
                                  "grid-sm-12": "MuiGrid-grid-sm-12",
                                  "grid-sm-2": "MuiGrid-grid-sm-2",
                                  "grid-sm-3": "MuiGrid-grid-sm-3",
                                  "grid-sm-4": "MuiGrid-grid-sm-4",
                                  "grid-sm-5": "MuiGrid-grid-sm-5",
                                  "grid-sm-6": "MuiGrid-grid-sm-6",
                                  "grid-sm-7": "MuiGrid-grid-sm-7",
                                  "grid-sm-8": "MuiGrid-grid-sm-8",
                                  "grid-sm-9": "MuiGrid-grid-sm-9",
                                  "grid-sm-auto": "MuiGrid-grid-sm-auto",
                                  "grid-sm-true": "MuiGrid-grid-sm-true",
                                  "grid-xl-1": "MuiGrid-grid-xl-1",
                                  "grid-xl-10": "MuiGrid-grid-xl-10",
                                  "grid-xl-11": "MuiGrid-grid-xl-11",
                                  "grid-xl-12": "MuiGrid-grid-xl-12",
                                  "grid-xl-2": "MuiGrid-grid-xl-2",
                                  "grid-xl-3": "MuiGrid-grid-xl-3",
                                  "grid-xl-4": "MuiGrid-grid-xl-4",
                                  "grid-xl-5": "MuiGrid-grid-xl-5",
                                  "grid-xl-6": "MuiGrid-grid-xl-6",
                                  "grid-xl-7": "MuiGrid-grid-xl-7",
                                  "grid-xl-8": "MuiGrid-grid-xl-8",
                                  "grid-xl-9": "MuiGrid-grid-xl-9",
                                  "grid-xl-auto": "MuiGrid-grid-xl-auto",
                                  "grid-xl-true": "MuiGrid-grid-xl-true",
                                  "grid-xs-1": "MuiGrid-grid-xs-1",
                                  "grid-xs-10": "MuiGrid-grid-xs-10",
                                  "grid-xs-11": "MuiGrid-grid-xs-11",
                                  "grid-xs-12": "MuiGrid-grid-xs-12",
                                  "grid-xs-2": "MuiGrid-grid-xs-2",
                                  "grid-xs-3": "MuiGrid-grid-xs-3",
                                  "grid-xs-4": "MuiGrid-grid-xs-4",
                                  "grid-xs-5": "MuiGrid-grid-xs-5",
                                  "grid-xs-6": "MuiGrid-grid-xs-6",
                                  "grid-xs-7": "MuiGrid-grid-xs-7",
                                  "grid-xs-8": "MuiGrid-grid-xs-8",
                                  "grid-xs-9": "MuiGrid-grid-xs-9",
                                  "grid-xs-auto": "MuiGrid-grid-xs-auto",
                                  "grid-xs-true": "MuiGrid-grid-xs-true",
                                  "item": "MuiGrid-item",
                                  "justify-xs-center": "MuiGrid-justify-xs-center",
                                  "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                                  "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                                  "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                                  "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                                  "root": "MuiGrid-root",
                                  "spacing-xs-1": "MuiGrid-spacing-xs-1",
                                  "spacing-xs-10": "MuiGrid-spacing-xs-10",
                                  "spacing-xs-2": "MuiGrid-spacing-xs-2",
                                  "spacing-xs-3": "MuiGrid-spacing-xs-3",
                                  "spacing-xs-4": "MuiGrid-spacing-xs-4",
                                  "spacing-xs-5": "MuiGrid-spacing-xs-5",
                                  "spacing-xs-6": "MuiGrid-spacing-xs-6",
                                  "spacing-xs-7": "MuiGrid-spacing-xs-7",
                                  "spacing-xs-8": "MuiGrid-spacing-xs-8",
                                  "spacing-xs-9": "MuiGrid-spacing-xs-9",
                                  "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                                  "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                                  "zeroMinWidth": "MuiGrid-zeroMinWidth",
                                }
                              }
                              item={true}
                              xs={12}
                            >
                              <div
                                className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-12"
                              >
                                <WithStyles(ForwardRef(TextField))
                                  fullWidth={true}
                                  label="Descricao"
                                  name="description"
                                  onChange={[Function]}
                                  value=""
                                >
                                  <ForwardRef(TextField)
                                    classes={
                                      Object {
                                        "root": "MuiTextField-root",
                                      }
                                    }
                                    fullWidth={true}
                                    label="Descricao"
                                    name="description"
                                    onChange={[Function]}
                                    value=""
                                  >
                                    <WithStyles(ForwardRef(FormControl))
                                      className="MuiTextField-root"
                                      color="primary"
                                      disabled={false}
                                      error={false}
                                      fullWidth={true}
                                      required={false}
                                      variant="standard"
                                    >
                                      <ForwardRef(FormControl)
                                        className="MuiTextField-root"
                                        classes={
                                          Object {
                                            "fullWidth": "MuiFormControl-fullWidth",
                                            "marginDense": "MuiFormControl-marginDense",
                                            "marginNormal": "MuiFormControl-marginNormal",
                                            "root": "MuiFormControl-root",
                                          }
                                        }
                                        color="primary"
                                        disabled={false}
                                        error={false}
                                        fullWidth={true}
                                        required={false}
                                        variant="standard"
                                      >
                                        <div
                                          className="MuiFormControl-root MuiTextField-root MuiFormControl-fullWidth"
                                        >
                                          <WithStyles(ForwardRef(InputLabel))>
                                            <ForwardRef(InputLabel)
                                              classes={
                                                Object {
                                                  "animated": "MuiInputLabel-animated",
                                                  "asterisk": "MuiInputLabel-asterisk",
                                                  "disabled": "Mui-disabled",
                                                  "error": "Mui-error",
                                                  "filled": "MuiInputLabel-filled",
                                                  "focused": "Mui-focused",
                                                  "formControl": "MuiInputLabel-formControl",
                                                  "marginDense": "MuiInputLabel-marginDense",
                                                  "outlined": "MuiInputLabel-outlined",
                                                  "required": "Mui-required",
                                                  "root": "MuiInputLabel-root",
                                                  "shrink": "MuiInputLabel-shrink",
                                                }
                                              }
                                            >
                                              <WithStyles(ForwardRef(FormLabel))
                                                className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                                                classes={
                                                  Object {
                                                    "asterisk": "MuiInputLabel-asterisk",
                                                    "disabled": "Mui-disabled",
                                                    "error": "Mui-error",
                                                    "focused": "Mui-focused",
                                                    "required": "Mui-required",
                                                  }
                                                }
                                                data-shrink={false}
                                              >
                                                <ForwardRef(FormLabel)
                                                  className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                                                  classes={
                                                    Object {
                                                      "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                                                      "colorSecondary": "MuiFormLabel-colorSecondary",
                                                      "disabled": "Mui-disabled Mui-disabled",
                                                      "error": "Mui-error Mui-error",
                                                      "filled": "MuiFormLabel-filled",
                                                      "focused": "Mui-focused Mui-focused",
                                                      "required": "Mui-required Mui-required",
                                                      "root": "MuiFormLabel-root",
                                                    }
                                                  }
                                                  data-shrink={false}
                                                >
                                                  <label
                                                    className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                                                    data-shrink={false}
                                                  >
                                                    Descricao
                                                  </label>
                                                </ForwardRef(FormLabel)>
                                              </WithStyles(ForwardRef(FormLabel))>
                                            </ForwardRef(InputLabel)>
                                          </WithStyles(ForwardRef(InputLabel))>
                                          <WithStyles(ForwardRef(Input))
                                            autoFocus={false}
                                            fullWidth={true}
                                            multiline={false}
                                            name="description"
                                            onChange={[Function]}
                                            value=""
                                          >
                                            <ForwardRef(Input)
                                              autoFocus={false}
                                              classes={
                                                Object {
                                                  "colorSecondary": "MuiInput-colorSecondary",
                                                  "disabled": "Mui-disabled",
                                                  "error": "Mui-error",
                                                  "focused": "Mui-focused",
                                                  "formControl": "MuiInput-formControl",
                                                  "fullWidth": "MuiInput-fullWidth",
                                                  "input": "MuiInput-input",
                                                  "inputMarginDense": "MuiInput-inputMarginDense",
                                                  "inputMultiline": "MuiInput-inputMultiline",
                                                  "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                  "marginDense": "MuiInput-marginDense",
                                                  "multiline": "MuiInput-multiline",
                                                  "root": "MuiInput-root",
                                                  "underline": "MuiInput-underline",
                                                }
                                              }
                                              fullWidth={true}
                                              multiline={false}
                                              name="description"
                                              onChange={[Function]}
                                              value=""
                                            >
                                              <WithStyles(ForwardRef(InputBase))
                                                autoFocus={false}
                                                classes={
                                                  Object {
                                                    "colorSecondary": "MuiInput-colorSecondary",
                                                    "disabled": "Mui-disabled",
                                                    "error": "Mui-error",
                                                    "focused": "Mui-focused",
                                                    "formControl": "MuiInput-formControl",
                                                    "fullWidth": "MuiInput-fullWidth",
                                                    "input": "MuiInput-input",
                                                    "inputMarginDense": "MuiInput-inputMarginDense",
                                                    "inputMultiline": "MuiInput-inputMultiline",
                                                    "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                    "marginDense": "MuiInput-marginDense",
                                                    "multiline": "MuiInput-multiline",
                                                    "root": "MuiInput-root MuiInput-underline",
                                                    "underline": null,
                                                  }
                                                }
                                                fullWidth={true}
                                                inputComponent="input"
                                                multiline={false}
                                                name="description"
                                                onChange={[Function]}
                                                type="text"
                                                value=""
                                              >
                                                <ForwardRef(InputBase)
                                                  autoFocus={false}
                                                  classes={
                                                    Object {
                                                      "adornedEnd": "MuiInputBase-adornedEnd",
                                                      "adornedStart": "MuiInputBase-adornedStart",
                                                      "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                                      "disabled": "Mui-disabled Mui-disabled",
                                                      "error": "Mui-error Mui-error",
                                                      "focused": "Mui-focused Mui-focused",
                                                      "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                                      "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                                      "input": "MuiInputBase-input MuiInput-input",
                                                      "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                                      "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                                      "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                      "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                                      "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                                      "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                                      "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                                      "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                                      "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                                    }
                                                  }
                                                  fullWidth={true}
                                                  inputComponent="input"
                                                  multiline={false}
                                                  name="description"
                                                  onChange={[Function]}
                                                  type="text"
                                                  value=""
                                                >
                                                  <div
                                                    className="MuiInputBase-root MuiInput-root MuiInput-underline MuiInputBase-fullWidth MuiInput-fullWidth MuiInputBase-formControl MuiInput-formControl"
                                                    onClick={[Function]}
                                                  >
                                                    <input
                                                      aria-invalid={false}
                                                      autoFocus={false}
                                                      className="MuiInputBase-input MuiInput-input"
                                                      disabled={false}
                                                      name="description"
                                                      onAnimationStart={[Function]}
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      onFocus={[Function]}
                                                      required={false}
                                                      type="text"
                                                      value=""
                                                    />
                                                  </div>
                                                </ForwardRef(InputBase)>
                                              </WithStyles(ForwardRef(InputBase))>
                                            </ForwardRef(Input)>
                                          </WithStyles(ForwardRef(Input))>
                                        </div>
                                      </ForwardRef(FormControl)>
                                    </WithStyles(ForwardRef(FormControl))>
                                  </ForwardRef(TextField)>
                                </WithStyles(ForwardRef(TextField))>
                              </div>
                            </ForwardRef(Grid)>
                          </WithStyles(ForwardRef(Grid))>
                          <WithStyles(ForwardRef(Grid))
                            item={true}
                            xs={12}
                          >
                            <ForwardRef(Grid)
                              classes={
                                Object {
                                  "align-content-xs-center": "MuiGrid-align-content-xs-center",
                                  "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                                  "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                                  "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                                  "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                                  "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                                  "align-items-xs-center": "MuiGrid-align-items-xs-center",
                                  "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                                  "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                                  "container": "MuiGrid-container",
                                  "direction-xs-column": "MuiGrid-direction-xs-column",
                                  "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                                  "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                                  "grid-lg-1": "MuiGrid-grid-lg-1",
                                  "grid-lg-10": "MuiGrid-grid-lg-10",
                                  "grid-lg-11": "MuiGrid-grid-lg-11",
                                  "grid-lg-12": "MuiGrid-grid-lg-12",
                                  "grid-lg-2": "MuiGrid-grid-lg-2",
                                  "grid-lg-3": "MuiGrid-grid-lg-3",
                                  "grid-lg-4": "MuiGrid-grid-lg-4",
                                  "grid-lg-5": "MuiGrid-grid-lg-5",
                                  "grid-lg-6": "MuiGrid-grid-lg-6",
                                  "grid-lg-7": "MuiGrid-grid-lg-7",
                                  "grid-lg-8": "MuiGrid-grid-lg-8",
                                  "grid-lg-9": "MuiGrid-grid-lg-9",
                                  "grid-lg-auto": "MuiGrid-grid-lg-auto",
                                  "grid-lg-true": "MuiGrid-grid-lg-true",
                                  "grid-md-1": "MuiGrid-grid-md-1",
                                  "grid-md-10": "MuiGrid-grid-md-10",
                                  "grid-md-11": "MuiGrid-grid-md-11",
                                  "grid-md-12": "MuiGrid-grid-md-12",
                                  "grid-md-2": "MuiGrid-grid-md-2",
                                  "grid-md-3": "MuiGrid-grid-md-3",
                                  "grid-md-4": "MuiGrid-grid-md-4",
                                  "grid-md-5": "MuiGrid-grid-md-5",
                                  "grid-md-6": "MuiGrid-grid-md-6",
                                  "grid-md-7": "MuiGrid-grid-md-7",
                                  "grid-md-8": "MuiGrid-grid-md-8",
                                  "grid-md-9": "MuiGrid-grid-md-9",
                                  "grid-md-auto": "MuiGrid-grid-md-auto",
                                  "grid-md-true": "MuiGrid-grid-md-true",
                                  "grid-sm-1": "MuiGrid-grid-sm-1",
                                  "grid-sm-10": "MuiGrid-grid-sm-10",
                                  "grid-sm-11": "MuiGrid-grid-sm-11",
                                  "grid-sm-12": "MuiGrid-grid-sm-12",
                                  "grid-sm-2": "MuiGrid-grid-sm-2",
                                  "grid-sm-3": "MuiGrid-grid-sm-3",
                                  "grid-sm-4": "MuiGrid-grid-sm-4",
                                  "grid-sm-5": "MuiGrid-grid-sm-5",
                                  "grid-sm-6": "MuiGrid-grid-sm-6",
                                  "grid-sm-7": "MuiGrid-grid-sm-7",
                                  "grid-sm-8": "MuiGrid-grid-sm-8",
                                  "grid-sm-9": "MuiGrid-grid-sm-9",
                                  "grid-sm-auto": "MuiGrid-grid-sm-auto",
                                  "grid-sm-true": "MuiGrid-grid-sm-true",
                                  "grid-xl-1": "MuiGrid-grid-xl-1",
                                  "grid-xl-10": "MuiGrid-grid-xl-10",
                                  "grid-xl-11": "MuiGrid-grid-xl-11",
                                  "grid-xl-12": "MuiGrid-grid-xl-12",
                                  "grid-xl-2": "MuiGrid-grid-xl-2",
                                  "grid-xl-3": "MuiGrid-grid-xl-3",
                                  "grid-xl-4": "MuiGrid-grid-xl-4",
                                  "grid-xl-5": "MuiGrid-grid-xl-5",
                                  "grid-xl-6": "MuiGrid-grid-xl-6",
                                  "grid-xl-7": "MuiGrid-grid-xl-7",
                                  "grid-xl-8": "MuiGrid-grid-xl-8",
                                  "grid-xl-9": "MuiGrid-grid-xl-9",
                                  "grid-xl-auto": "MuiGrid-grid-xl-auto",
                                  "grid-xl-true": "MuiGrid-grid-xl-true",
                                  "grid-xs-1": "MuiGrid-grid-xs-1",
                                  "grid-xs-10": "MuiGrid-grid-xs-10",
                                  "grid-xs-11": "MuiGrid-grid-xs-11",
                                  "grid-xs-12": "MuiGrid-grid-xs-12",
                                  "grid-xs-2": "MuiGrid-grid-xs-2",
                                  "grid-xs-3": "MuiGrid-grid-xs-3",
                                  "grid-xs-4": "MuiGrid-grid-xs-4",
                                  "grid-xs-5": "MuiGrid-grid-xs-5",
                                  "grid-xs-6": "MuiGrid-grid-xs-6",
                                  "grid-xs-7": "MuiGrid-grid-xs-7",
                                  "grid-xs-8": "MuiGrid-grid-xs-8",
                                  "grid-xs-9": "MuiGrid-grid-xs-9",
                                  "grid-xs-auto": "MuiGrid-grid-xs-auto",
                                  "grid-xs-true": "MuiGrid-grid-xs-true",
                                  "item": "MuiGrid-item",
                                  "justify-xs-center": "MuiGrid-justify-xs-center",
                                  "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                                  "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                                  "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                                  "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                                  "root": "MuiGrid-root",
                                  "spacing-xs-1": "MuiGrid-spacing-xs-1",
                                  "spacing-xs-10": "MuiGrid-spacing-xs-10",
                                  "spacing-xs-2": "MuiGrid-spacing-xs-2",
                                  "spacing-xs-3": "MuiGrid-spacing-xs-3",
                                  "spacing-xs-4": "MuiGrid-spacing-xs-4",
                                  "spacing-xs-5": "MuiGrid-spacing-xs-5",
                                  "spacing-xs-6": "MuiGrid-spacing-xs-6",
                                  "spacing-xs-7": "MuiGrid-spacing-xs-7",
                                  "spacing-xs-8": "MuiGrid-spacing-xs-8",
                                  "spacing-xs-9": "MuiGrid-spacing-xs-9",
                                  "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                                  "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                                  "zeroMinWidth": "MuiGrid-zeroMinWidth",
                                }
                              }
                              item={true}
                              xs={12}
                            >
                              <div
                                className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-12"
                              >
                                <Styled(MuiBox)>
                                  <div
                                    className="MuiBox-root MuiBox-root-5"
                                  >
                                    <_default
                                      handleQuestion={[Function]}
                                      handleWasSend={[Function]}
                                      wasSend={false}
                                    >
                                      <div
                                        className="makeStyles-root-9"
                                      >
                                        <AlertDialogSlide
                                          error={false}
                                          handleError={[Function]}
                                          text="Preencha o título e pelo menos uma opção em questões que contenham opções."
                                        >
                                          <div>
                                            <WithStyles(ForwardRef(Dialog))
                                              TransitionComponent={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "render": [Function],
                                                }
                                              }
                                              aria-describedby="alert-dialog-slide-description"
                                              aria-labelledby="alert-dialog-slide-title"
                                              keepMounted={true}
                                              onClose={[Function]}
                                              open={false}
                                            >
                                              <ForwardRef(Dialog)
                                                TransitionComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "render": [Function],
                                                  }
                                                }
                                                aria-describedby="alert-dialog-slide-description"
                                                aria-labelledby="alert-dialog-slide-title"
                                                classes={
                                                  Object {
                                                    "container": "MuiDialog-container",
                                                    "paper": "MuiDialog-paper",
                                                    "paperFullScreen": "MuiDialog-paperFullScreen",
                                                    "paperFullWidth": "MuiDialog-paperFullWidth",
                                                    "paperScrollBody": "MuiDialog-paperScrollBody",
                                                    "paperScrollPaper": "MuiDialog-paperScrollPaper",
                                                    "paperWidthFalse": "MuiDialog-paperWidthFalse",
                                                    "paperWidthLg": "MuiDialog-paperWidthLg",
                                                    "paperWidthMd": "MuiDialog-paperWidthMd",
                                                    "paperWidthSm": "MuiDialog-paperWidthSm",
                                                    "paperWidthXl": "MuiDialog-paperWidthXl",
                                                    "paperWidthXs": "MuiDialog-paperWidthXs",
                                                    "root": "MuiDialog-root",
                                                    "scrollBody": "MuiDialog-scrollBody",
                                                    "scrollPaper": "MuiDialog-scrollPaper",
                                                  }
                                                }
                                                keepMounted={true}
                                                onClose={[Function]}
                                                open={false}
                                              >
                                                <ForwardRef(Modal)
                                                  BackdropComponent={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "Naked": Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "propTypes": Object {
                                                          "children": [Function],
                                                          "className": [Function],
                                                          "classes": [Function],
                                                          "invisible": [Function],
                                                          "open": [Function],
                                                          "transitionDuration": [Function],
                                                        },
                                                        "render": [Function],
                                                      },
                                                      "options": Object {
                                                        "defaultTheme": Object {
                                                          "breakpoints": Object {
                                                            "between": [Function],
                                                            "down": [Function],
                                                            "keys": Array [
                                                              "xs",
                                                              "sm",
                                                              "md",
                                                              "lg",
                                                              "xl",
                                                            ],
                                                            "only": [Function],
                                                            "up": [Function],
                                                            "values": Object {
                                                              "lg": 1280,
                                                              "md": 960,
                                                              "sm": 600,
                                                              "xl": 1920,
                                                              "xs": 0,
                                                            },
                                                            "width": [Function],
                                                          },
                                                          "direction": "ltr",
                                                          "mixins": Object {
                                                            "gutters": [Function],
                                                            "toolbar": Object {
                                                              "@media (min-width:0px) and (orientation: landscape)": Object {
                                                                "minHeight": 48,
                                                              },
                                                              "@media (min-width:600px)": Object {
                                                                "minHeight": 64,
                                                              },
                                                              "minHeight": 56,
                                                            },
                                                          },
                                                          "overrides": Object {},
                                                          "palette": Object {
                                                            "action": Object {
                                                              "activatedOpacity": 0.12,
                                                              "active": "rgba(0, 0, 0, 0.54)",
                                                              "disabled": "rgba(0, 0, 0, 0.26)",
                                                              "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                                              "disabledOpacity": 0.38,
                                                              "focus": "rgba(0, 0, 0, 0.12)",
                                                              "focusOpacity": 0.12,
                                                              "hover": "rgba(0, 0, 0, 0.04)",
                                                              "hoverOpacity": 0.04,
                                                              "selected": "rgba(0, 0, 0, 0.08)",
                                                              "selectedOpacity": 0.08,
                                                            },
                                                            "augmentColor": [Function],
                                                            "background": Object {
                                                              "default": "#fafafa",
                                                              "paper": "#fff",
                                                            },
                                                            "common": Object {
                                                              "black": "#000",
                                                              "white": "#fff",
                                                            },
                                                            "contrastThreshold": 3,
                                                            "divider": "rgba(0, 0, 0, 0.12)",
                                                            "error": Object {
                                                              "contrastText": "#fff",
                                                              "dark": "#d32f2f",
                                                              "light": "#e57373",
                                                              "main": "#f44336",
                                                            },
                                                            "getContrastText": [Function],
                                                            "grey": Object {
                                                              "100": "#f5f5f5",
                                                              "200": "#eeeeee",
                                                              "300": "#e0e0e0",
                                                              "400": "#bdbdbd",
                                                              "50": "#fafafa",
                                                              "500": "#9e9e9e",
                                                              "600": "#757575",
                                                              "700": "#616161",
                                                              "800": "#424242",
                                                              "900": "#212121",
                                                              "A100": "#d5d5d5",
                                                              "A200": "#aaaaaa",
                                                              "A400": "#303030",
                                                              "A700": "#616161",
                                                            },
                                                            "info": Object {
                                                              "contrastText": "#fff",
                                                              "dark": "#1976d2",
                                                              "light": "#64b5f6",
                                                              "main": "#2196f3",
                                                            },
                                                            "primary": Object {
                                                              "contrastText": "#fff",
                                                              "dark": "#303f9f",
                                                              "light": "#7986cb",
                                                              "main": "#3f51b5",
                                                            },
                                                            "secondary": Object {
                                                              "contrastText": "#fff",
                                                              "dark": "#c51162",
                                                              "light": "#ff4081",
                                                              "main": "#f50057",
                                                            },
                                                            "success": Object {
                                                              "contrastText": "rgba(0, 0, 0, 0.87)",
                                                              "dark": "#388e3c",
                                                              "light": "#81c784",
                                                              "main": "#4caf50",
                                                            },
                                                            "text": Object {
                                                              "disabled": "rgba(0, 0, 0, 0.38)",
                                                              "hint": "rgba(0, 0, 0, 0.38)",
                                                              "primary": "rgba(0, 0, 0, 0.87)",
                                                              "secondary": "rgba(0, 0, 0, 0.54)",
                                                            },
                                                            "tonalOffset": 0.2,
                                                            "type": "light",
                                                            "warning": Object {
                                                              "contrastText": "rgba(0, 0, 0, 0.87)",
                                                              "dark": "#f57c00",
                                                              "light": "#ffb74d",
                                                              "main": "#ff9800",
                                                            },
                                                          },
                                                          "props": Object {},
                                                          "shadows": Array [
                                                            "none",
                                                            "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                                            "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                                            "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                                            "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                                            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                                            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                                            "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                                            "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                                            "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                                            "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                                            "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                                            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                                            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                                            "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                                            "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                                            "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                                            "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                                            "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                                            "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                                            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                                            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                                            "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                                            "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                                            "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                                          ],
                                                          "shape": Object {
                                                            "borderRadius": 4,
                                                          },
                                                          "spacing": [Function],
                                                          "transitions": Object {
                                                            "create": [Function],
                                                            "duration": Object {
                                                              "complex": 375,
                                                              "enteringScreen": 225,
                                                              "leavingScreen": 195,
                                                              "short": 250,
                                                              "shorter": 200,
                                                              "shortest": 150,
                                                              "standard": 300,
                                                            },
                                                            "easing": Object {
                                                              "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                                              "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                                              "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                                              "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                                            },
                                                            "getAutoHeightDuration": [Function],
                                                          },
                                                          "typography": Object {
                                                            "body1": Object {
                                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                              "fontSize": "1rem",
                                                              "fontWeight": 400,
                                                              "letterSpacing": "0.00938em",
                                                              "lineHeight": 1.5,
                                                            },
                                                            "body2": Object {
                                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                              "fontSize": "0.875rem",
                                                              "fontWeight": 400,
                                                              "letterSpacing": "0.01071em",
                                                              "lineHeight": 1.43,
                                                            },
                                                            "button": Object {
                                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                              "fontSize": "0.875rem",
                                                              "fontWeight": 500,
                                                              "letterSpacing": "0.02857em",
                                                              "lineHeight": 1.75,
                                                              "textTransform": "uppercase",
                                                            },
                                                            "caption": Object {
                                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                              "fontSize": "0.75rem",
                                                              "fontWeight": 400,
                                                              "letterSpacing": "0.03333em",
                                                              "lineHeight": 1.66,
                                                            },
                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                            "fontSize": 14,
                                                            "fontWeightBold": 700,
                                                            "fontWeightLight": 300,
                                                            "fontWeightMedium": 500,
                                                            "fontWeightRegular": 400,
                                                            "h1": Object {
                                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                              "fontSize": "6rem",
                                                              "fontWeight": 300,
                                                              "letterSpacing": "-0.01562em",
                                                              "lineHeight": 1.167,
                                                            },
                                                            "h2": Object {
                                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                              "fontSize": "3.75rem",
                                                              "fontWeight": 300,
                                                              "letterSpacing": "-0.00833em",
                                                              "lineHeight": 1.2,
                                                            },
                                                            "h3": Object {
                                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                              "fontSize": "3rem",
                                                              "fontWeight": 400,
                                                              "letterSpacing": "0em",
                                                              "lineHeight": 1.167,
                                                            },
                                                            "h4": Object {
                                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                              "fontSize": "2.125rem",
                                                              "fontWeight": 400,
                                                              "letterSpacing": "0.00735em",
                                                              "lineHeight": 1.235,
                                                            },
                                                            "h5": Object {
                                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                              "fontSize": "1.5rem",
                                                              "fontWeight": 400,
                                                              "letterSpacing": "0em",
                                                              "lineHeight": 1.334,
                                                            },
                                                            "h6": Object {
                                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                              "fontSize": "1.25rem",
                                                              "fontWeight": 500,
                                                              "letterSpacing": "0.0075em",
                                                              "lineHeight": 1.6,
                                                            },
                                                            "htmlFontSize": 16,
                                                            "overline": Object {
                                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                              "fontSize": "0.75rem",
                                                              "fontWeight": 400,
                                                              "letterSpacing": "0.08333em",
                                                              "lineHeight": 2.66,
                                                              "textTransform": "uppercase",
                                                            },
                                                            "pxToRem": [Function],
                                                            "round": [Function],
                                                            "subtitle1": Object {
                                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                              "fontSize": "1rem",
                                                              "fontWeight": 400,
                                                              "letterSpacing": "0.00938em",
                                                              "lineHeight": 1.75,
                                                            },
                                                            "subtitle2": Object {
                                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                              "fontSize": "0.875rem",
                                                              "fontWeight": 500,
                                                              "letterSpacing": "0.00714em",
                                                              "lineHeight": 1.57,
                                                            },
                                                          },
                                                          "zIndex": Object {
                                                            "appBar": 1100,
                                                            "drawer": 1200,
                                                            "mobileStepper": 1000,
                                                            "modal": 1300,
                                                            "snackbar": 1400,
                                                            "speedDial": 1050,
                                                            "tooltip": 1500,
                                                          },
                                                        },
                                                        "name": "MuiBackdrop",
                                                      },
                                                      "propTypes": Object {
                                                        "classes": [Function],
                                                        "innerRef": [Function],
                                                      },
                                                      "render": [Function],
                                                      "useStyles": [Function],
                                                    }
                                                  }
                                                  BackdropProps={
                                                    Object {
                                                      "transitionDuration": Object {
                                                        "enter": 225,
                                                        "exit": 195,
                                                      },
                                                    }
                                                  }
                                                  className="MuiDialog-root"
                                                  closeAfterTransition={true}
                                                  disableBackdropClick={false}
                                                  disableEscapeKeyDown={false}
                                                  keepMounted={true}
                                                  onClose={[Function]}
                                                  open={false}
                                                >
                                                  <ForwardRef(Portal)
                                                    disablePortal={false}
                                                  >
                                                    <Portal
                                                      containerInfo={
                                                        <body>
                                                          <div
                                                            class="react-toast-notifications__container css-omekjv-ToastContainer"
                                                          />
                                                          <div
                                                            aria-hidden="true"
                                                            class="MuiDialog-root"
                                                            role="presentation"
                                                            style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px; visibility: hidden;"
                                                          >
                                                            <div
                                                              aria-hidden="true"
                                                              class="MuiBackdrop-root"
                                                              style="opacity: 0; visibility: hidden;"
                                                            />
                                                            <div
                                                              data-test="sentinelStart"
                                                              tabindex="0"
                                                            />
                                                            <div
                                                              class="MuiDialog-container MuiDialog-scrollPaper"
                                                              role="none presentation"
                                                              style="visibility: hidden; webkit-transform: translateY(768px) translateY(0px); transform: translateY(768px) translateY(0px);"
                                                              tabindex="-1"
                                                            >
                                                              <div
                                                                aria-describedby="alert-dialog-slide-description"
                                                                aria-labelledby="alert-dialog-slide-title"
                                                                class="MuiPaper-root MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm MuiPaper-elevation24 MuiPaper-rounded"
                                                                role="dialog"
                                                              >
                                                                <div
                                                                  class="MuiDialogTitle-root"
                                                                  id="alert-dialog-slide-title"
                                                                >
                                                                  <h2
                                                                    class="MuiTypography-root MuiTypography-h6"
                                                                  >
                                                                    Atenção
                                                                  </h2>
                                                                </div>
                                                                <div
                                                                  class="MuiDialogContent-root"
                                                                >
                                                                  <p
                                                                    class="MuiTypography-root MuiDialogContentText-root MuiTypography-body1 MuiTypography-colorTextSecondary"
                                                                    id="alert-dialog-slide-description"
                                                                  >
                                                                    Título ou descrição não preenchidos. O questionário deve conter pelo menos uma questão.
                                                                  </p>
                                                                </div>
                                                                <div
                                                                  class="MuiDialogActions-root MuiDialogActions-spacing"
                                                                >
                                                                  <button
                                                                    class="MuiButtonBase-root MuiButton-root MuiButton-text MuiButton-textPrimary"
                                                                    tabindex="0"
                                                                    type="button"
                                                                  >
                                                                    <span
                                                                      class="MuiButton-label"
                                                                    >
                                                                      OK
                                                                    </span>
                                                                    <span
                                                                      class="MuiTouchRipple-root"
                                                                    />
                                                                  </button>
                                                                </div>
                                                              </div>
                                                            </div>
                                                            <div
                                                              data-test="sentinelEnd"
                                                              tabindex="0"
                                                            />
                                                          </div>
                                                          <div
                                                            aria-hidden="true"
                                                            class="MuiDialog-root"
                                                            role="presentation"
                                                            style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px; visibility: hidden;"
                                                          >
                                                            <div
                                                              aria-hidden="true"
                                                              class="MuiBackdrop-root"
                                                              style="opacity: 0; visibility: hidden;"
                                                            />
                                                            <div
                                                              data-test="sentinelStart"
                                                              tabindex="0"
                                                            />
                                                            <div
                                                              class="MuiDialog-container MuiDialog-scrollPaper"
                                                              role="none presentation"
                                                              style="visibility: hidden; webkit-transform: translateY(768px) translateY(0px); transform: translateY(768px) translateY(0px);"
                                                              tabindex="-1"
                                                            >
                                                              <div
                                                                aria-describedby="alert-dialog-slide-description"
                                                                aria-labelledby="alert-dialog-slide-title"
                                                                class="MuiPaper-root MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm MuiPaper-elevation24 MuiPaper-rounded"
                                                                role="dialog"
                                                              >
                                                                <div
                                                                  class="MuiDialogTitle-root"
                                                                  id="alert-dialog-slide-title"
                                                                >
                                                                  <h2
                                                                    class="MuiTypography-root MuiTypography-h6"
                                                                  >
                                                                    Atenção
                                                                  </h2>
                                                                </div>
                                                                <div
                                                                  class="MuiDialogContent-root"
                                                                >
                                                                  <p
                                                                    class="MuiTypography-root MuiDialogContentText-root MuiTypography-body1 MuiTypography-colorTextSecondary"
                                                                    id="alert-dialog-slide-description"
                                                                  >
                                                                    Preencha o título e pelo menos uma opção em questões que contenham opções.
                                                                  </p>
                                                                </div>
                                                                <div
                                                                  class="MuiDialogActions-root MuiDialogActions-spacing"
                                                                >
                                                                  <button
                                                                    class="MuiButtonBase-root MuiButton-root MuiButton-text MuiButton-textPrimary"
                                                                    tabindex="0"
                                                                    type="button"
                                                                  >
                                                                    <span
                                                                      class="MuiButton-label"
                                                                    >
                                                                      OK
                                                                    </span>
                                                                    <span
                                                                      class="MuiTouchRipple-root"
                                                                    />
                                                                  </button>
                                                                </div>
                                                              </div>
                                                            </div>
                                                            <div
                                                              data-test="sentinelEnd"
                                                              tabindex="0"
                                                            />
                                                          </div>
                                                        </body>
                                                      }
                                                    >
                                                      <div
                                                        className="MuiDialog-root"
                                                        onKeyDown={[Function]}
                                                        role="presentation"
                                                        style={
                                                          Object {
                                                            "bottom": 0,
                                                            "left": 0,
                                                            "position": "fixed",
                                                            "right": 0,
                                                            "top": 0,
                                                            "visibility": "hidden",
                                                            "zIndex": 1300,
                                                          }
                                                        }
                                                      >
                                                        <WithStyles(ForwardRef(Backdrop))
                                                          onClick={[Function]}
                                                          open={false}
                                                          transitionDuration={
                                                            Object {
                                                              "enter": 225,
                                                              "exit": 195,
                                                            }
                                                          }
                                                        >
                                                          <ForwardRef(Backdrop)
                                                            classes={
                                                              Object {
                                                                "invisible": "MuiBackdrop-invisible",
                                                                "root": "MuiBackdrop-root",
                                                              }
                                                            }
                                                            onClick={[Function]}
                                                            open={false}
                                                            transitionDuration={
                                                              Object {
                                                                "enter": 225,
                                                                "exit": 195,
                                                              }
                                                            }
                                                          >
                                                            <ForwardRef(Fade)
                                                              in={false}
                                                              onClick={[Function]}
                                                              timeout={
                                                                Object {
                                                                  "enter": 225,
                                                                  "exit": 195,
                                                                }
                                                              }
                                                            >
                                                              <Transition
                                                                appear={true}
                                                                enter={true}
                                                                exit={true}
                                                                in={false}
                                                                mountOnEnter={false}
                                                                onClick={[Function]}
                                                                onEnter={[Function]}
                                                                onEntered={[Function]}
                                                                onEntering={[Function]}
                                                                onExit={[Function]}
                                                                onExited={[Function]}
                                                                onExiting={[Function]}
                                                                timeout={
                                                                  Object {
                                                                    "enter": 225,
                                                                    "exit": 195,
                                                                  }
                                                                }
                                                                unmountOnExit={false}
                                                              >
                                                                <div
                                                                  aria-hidden={true}
                                                                  className="MuiBackdrop-root"
                                                                  onClick={[Function]}
                                                                  style={
                                                                    Object {
                                                                      "opacity": 0,
                                                                      "visibility": "hidden",
                                                                    }
                                                                  }
                                                                />
                                                              </Transition>
                                                            </ForwardRef(Fade)>
                                                          </ForwardRef(Backdrop)>
                                                        </WithStyles(ForwardRef(Backdrop))>
                                                        <Unstable_TrapFocus
                                                          disableAutoFocus={false}
                                                          disableEnforceFocus={false}
                                                          disableRestoreFocus={false}
                                                          getDoc={[Function]}
                                                          isEnabled={[Function]}
                                                          open={false}
                                                        >
                                                          <div
                                                            data-test="sentinelStart"
                                                            tabIndex={0}
                                                          />
                                                          <ForwardRef(Transition)
                                                            appear={true}
                                                            in={false}
                                                            onEnter={[Function]}
                                                            onExited={[Function]}
                                                            role="none presentation"
                                                            tabIndex="-1"
                                                            timeout={
                                                              Object {
                                                                "enter": 225,
                                                                "exit": 195,
                                                              }
                                                            }
                                                          >
                                                            <ForwardRef(Slide)
                                                              appear={true}
                                                              direction="up"
                                                              in={false}
                                                              onEnter={[Function]}
                                                              onExited={[Function]}
                                                              role="none presentation"
                                                              tabIndex="-1"
                                                              timeout={
                                                                Object {
                                                                  "enter": 225,
                                                                  "exit": 195,
                                                                }
                                                              }
                                                            >
                                                              <Transition
                                                                appear={true}
                                                                enter={true}
                                                                exit={true}
                                                                in={false}
                                                                mountOnEnter={false}
                                                                nodeRef={
                                                                  Object {
                                                                    "current": <div
                                                                      class="MuiDialog-container MuiDialog-scrollPaper"
                                                                      role="none presentation"
                                                                      style="visibility: hidden; webkit-transform: translateY(768px) translateY(0px); transform: translateY(768px) translateY(0px);"
                                                                      tabindex="-1"
                                                                    >
                                                                      <div
                                                                        aria-describedby="alert-dialog-slide-description"
                                                                        aria-labelledby="alert-dialog-slide-title"
                                                                        class="MuiPaper-root MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm MuiPaper-elevation24 MuiPaper-rounded"
                                                                        role="dialog"
                                                                      >
                                                                        <div
                                                                          class="MuiDialogTitle-root"
                                                                          id="alert-dialog-slide-title"
                                                                        >
                                                                          <h2
                                                                            class="MuiTypography-root MuiTypography-h6"
                                                                          >
                                                                            Atenção
                                                                          </h2>
                                                                        </div>
                                                                        <div
                                                                          class="MuiDialogContent-root"
                                                                        >
                                                                          <p
                                                                            class="MuiTypography-root MuiDialogContentText-root MuiTypography-body1 MuiTypography-colorTextSecondary"
                                                                            id="alert-dialog-slide-description"
                                                                          >
                                                                            Preencha o título e pelo menos uma opção em questões que contenham opções.
                                                                          </p>
                                                                        </div>
                                                                        <div
                                                                          class="MuiDialogActions-root MuiDialogActions-spacing"
                                                                        >
                                                                          <button
                                                                            class="MuiButtonBase-root MuiButton-root MuiButton-text MuiButton-textPrimary"
                                                                            tabindex="0"
                                                                            type="button"
                                                                          >
                                                                            <span
                                                                              class="MuiButton-label"
                                                                            >
                                                                              OK
                                                                            </span>
                                                                            <span
                                                                              class="MuiTouchRipple-root"
                                                                            />
                                                                          </button>
                                                                        </div>
                                                                      </div>
                                                                    </div>,
                                                                  }
                                                                }
                                                                onEnter={[Function]}
                                                                onEntered={[Function]}
                                                                onEntering={[Function]}
                                                                onExit={[Function]}
                                                                onExited={[Function]}
                                                                onExiting={[Function]}
                                                                role="none presentation"
                                                                tabIndex="-1"
                                                                timeout={
                                                                  Object {
                                                                    "enter": 225,
                                                                    "exit": 195,
                                                                  }
                                                                }
                                                                unmountOnExit={false}
                                                              >
                                                                <div
                                                                  className="MuiDialog-container MuiDialog-scrollPaper"
                                                                  onMouseDown={[Function]}
                                                                  onMouseUp={[Function]}
                                                                  role="none presentation"
                                                                  style={
                                                                    Object {
                                                                      "visibility": "hidden",
                                                                    }
                                                                  }
                                                                  tabIndex="-1"
                                                                >
                                                                  <WithStyles(ForwardRef(Paper))
                                                                    aria-describedby="alert-dialog-slide-description"
                                                                    aria-labelledby="alert-dialog-slide-title"
                                                                    className="MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm"
                                                                    elevation={24}
                                                                    role="dialog"
                                                                  >
                                                                    <ForwardRef(Paper)
                                                                      aria-describedby="alert-dialog-slide-description"
                                                                      aria-labelledby="alert-dialog-slide-title"
                                                                      className="MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm"
                                                                      classes={
                                                                        Object {
                                                                          "elevation0": "MuiPaper-elevation0",
                                                                          "elevation1": "MuiPaper-elevation1",
                                                                          "elevation10": "MuiPaper-elevation10",
                                                                          "elevation11": "MuiPaper-elevation11",
                                                                          "elevation12": "MuiPaper-elevation12",
                                                                          "elevation13": "MuiPaper-elevation13",
                                                                          "elevation14": "MuiPaper-elevation14",
                                                                          "elevation15": "MuiPaper-elevation15",
                                                                          "elevation16": "MuiPaper-elevation16",
                                                                          "elevation17": "MuiPaper-elevation17",
                                                                          "elevation18": "MuiPaper-elevation18",
                                                                          "elevation19": "MuiPaper-elevation19",
                                                                          "elevation2": "MuiPaper-elevation2",
                                                                          "elevation20": "MuiPaper-elevation20",
                                                                          "elevation21": "MuiPaper-elevation21",
                                                                          "elevation22": "MuiPaper-elevation22",
                                                                          "elevation23": "MuiPaper-elevation23",
                                                                          "elevation24": "MuiPaper-elevation24",
                                                                          "elevation3": "MuiPaper-elevation3",
                                                                          "elevation4": "MuiPaper-elevation4",
                                                                          "elevation5": "MuiPaper-elevation5",
                                                                          "elevation6": "MuiPaper-elevation6",
                                                                          "elevation7": "MuiPaper-elevation7",
                                                                          "elevation8": "MuiPaper-elevation8",
                                                                          "elevation9": "MuiPaper-elevation9",
                                                                          "outlined": "MuiPaper-outlined",
                                                                          "root": "MuiPaper-root",
                                                                          "rounded": "MuiPaper-rounded",
                                                                        }
                                                                      }
                                                                      elevation={24}
                                                                      role="dialog"
                                                                    >
                                                                      <div
                                                                        aria-describedby="alert-dialog-slide-description"
                                                                        aria-labelledby="alert-dialog-slide-title"
                                                                        className="MuiPaper-root MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm MuiPaper-elevation24 MuiPaper-rounded"
                                                                        role="dialog"
                                                                      >
                                                                        <WithStyles(ForwardRef(DialogTitle))
                                                                          id="alert-dialog-slide-title"
                                                                        >
                                                                          <ForwardRef(DialogTitle)
                                                                            classes={
                                                                              Object {
                                                                                "root": "MuiDialogTitle-root",
                                                                              }
                                                                            }
                                                                            id="alert-dialog-slide-title"
                                                                          >
                                                                            <div
                                                                              className="MuiDialogTitle-root"
                                                                              id="alert-dialog-slide-title"
                                                                            >
                                                                              <WithStyles(ForwardRef(Typography))
                                                                                component="h2"
                                                                                variant="h6"
                                                                              >
                                                                                <ForwardRef(Typography)
                                                                                  classes={
                                                                                    Object {
                                                                                      "alignCenter": "MuiTypography-alignCenter",
                                                                                      "alignJustify": "MuiTypography-alignJustify",
                                                                                      "alignLeft": "MuiTypography-alignLeft",
                                                                                      "alignRight": "MuiTypography-alignRight",
                                                                                      "body1": "MuiTypography-body1",
                                                                                      "body2": "MuiTypography-body2",
                                                                                      "button": "MuiTypography-button",
                                                                                      "caption": "MuiTypography-caption",
                                                                                      "colorError": "MuiTypography-colorError",
                                                                                      "colorInherit": "MuiTypography-colorInherit",
                                                                                      "colorPrimary": "MuiTypography-colorPrimary",
                                                                                      "colorSecondary": "MuiTypography-colorSecondary",
                                                                                      "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                                      "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                                      "displayBlock": "MuiTypography-displayBlock",
                                                                                      "displayInline": "MuiTypography-displayInline",
                                                                                      "gutterBottom": "MuiTypography-gutterBottom",
                                                                                      "h1": "MuiTypography-h1",
                                                                                      "h2": "MuiTypography-h2",
                                                                                      "h3": "MuiTypography-h3",
                                                                                      "h4": "MuiTypography-h4",
                                                                                      "h5": "MuiTypography-h5",
                                                                                      "h6": "MuiTypography-h6",
                                                                                      "noWrap": "MuiTypography-noWrap",
                                                                                      "overline": "MuiTypography-overline",
                                                                                      "paragraph": "MuiTypography-paragraph",
                                                                                      "root": "MuiTypography-root",
                                                                                      "srOnly": "MuiTypography-srOnly",
                                                                                      "subtitle1": "MuiTypography-subtitle1",
                                                                                      "subtitle2": "MuiTypography-subtitle2",
                                                                                    }
                                                                                  }
                                                                                  component="h2"
                                                                                  variant="h6"
                                                                                >
                                                                                  <h2
                                                                                    className="MuiTypography-root MuiTypography-h6"
                                                                                  >
                                                                                    Atenção
                                                                                  </h2>
                                                                                </ForwardRef(Typography)>
                                                                              </WithStyles(ForwardRef(Typography))>
                                                                            </div>
                                                                          </ForwardRef(DialogTitle)>
                                                                        </WithStyles(ForwardRef(DialogTitle))>
                                                                        <WithStyles(ForwardRef(DialogContent))>
                                                                          <ForwardRef(DialogContent)
                                                                            classes={
                                                                              Object {
                                                                                "dividers": "MuiDialogContent-dividers",
                                                                                "root": "MuiDialogContent-root",
                                                                              }
                                                                            }
                                                                          >
                                                                            <div
                                                                              className="MuiDialogContent-root"
                                                                            >
                                                                              <WithStyles(ForwardRef(DialogContentText))
                                                                                id="alert-dialog-slide-description"
                                                                              >
                                                                                <ForwardRef(DialogContentText)
                                                                                  classes={
                                                                                    Object {
                                                                                      "root": "MuiDialogContentText-root",
                                                                                    }
                                                                                  }
                                                                                  id="alert-dialog-slide-description"
                                                                                >
                                                                                  <WithStyles(ForwardRef(Typography))
                                                                                    classes={
                                                                                      Object {
                                                                                        "root": "MuiDialogContentText-root",
                                                                                      }
                                                                                    }
                                                                                    color="textSecondary"
                                                                                    component="p"
                                                                                    id="alert-dialog-slide-description"
                                                                                    variant="body1"
                                                                                  >
                                                                                    <ForwardRef(Typography)
                                                                                      classes={
                                                                                        Object {
                                                                                          "alignCenter": "MuiTypography-alignCenter",
                                                                                          "alignJustify": "MuiTypography-alignJustify",
                                                                                          "alignLeft": "MuiTypography-alignLeft",
                                                                                          "alignRight": "MuiTypography-alignRight",
                                                                                          "body1": "MuiTypography-body1",
                                                                                          "body2": "MuiTypography-body2",
                                                                                          "button": "MuiTypography-button",
                                                                                          "caption": "MuiTypography-caption",
                                                                                          "colorError": "MuiTypography-colorError",
                                                                                          "colorInherit": "MuiTypography-colorInherit",
                                                                                          "colorPrimary": "MuiTypography-colorPrimary",
                                                                                          "colorSecondary": "MuiTypography-colorSecondary",
                                                                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                                          "displayBlock": "MuiTypography-displayBlock",
                                                                                          "displayInline": "MuiTypography-displayInline",
                                                                                          "gutterBottom": "MuiTypography-gutterBottom",
                                                                                          "h1": "MuiTypography-h1",
                                                                                          "h2": "MuiTypography-h2",
                                                                                          "h3": "MuiTypography-h3",
                                                                                          "h4": "MuiTypography-h4",
                                                                                          "h5": "MuiTypography-h5",
                                                                                          "h6": "MuiTypography-h6",
                                                                                          "noWrap": "MuiTypography-noWrap",
                                                                                          "overline": "MuiTypography-overline",
                                                                                          "paragraph": "MuiTypography-paragraph",
                                                                                          "root": "MuiTypography-root MuiDialogContentText-root",
                                                                                          "srOnly": "MuiTypography-srOnly",
                                                                                          "subtitle1": "MuiTypography-subtitle1",
                                                                                          "subtitle2": "MuiTypography-subtitle2",
                                                                                        }
                                                                                      }
                                                                                      color="textSecondary"
                                                                                      component="p"
                                                                                      id="alert-dialog-slide-description"
                                                                                      variant="body1"
                                                                                    >
                                                                                      <p
                                                                                        className="MuiTypography-root MuiDialogContentText-root MuiTypography-body1 MuiTypography-colorTextSecondary"
                                                                                        id="alert-dialog-slide-description"
                                                                                      >
                                                                                        Preencha o título e pelo menos uma opção em questões que contenham opções.
                                                                                      </p>
                                                                                    </ForwardRef(Typography)>
                                                                                  </WithStyles(ForwardRef(Typography))>
                                                                                </ForwardRef(DialogContentText)>
                                                                              </WithStyles(ForwardRef(DialogContentText))>
                                                                            </div>
                                                                          </ForwardRef(DialogContent)>
                                                                        </WithStyles(ForwardRef(DialogContent))>
                                                                        <WithStyles(ForwardRef(DialogActions))>
                                                                          <ForwardRef(DialogActions)
                                                                            classes={
                                                                              Object {
                                                                                "root": "MuiDialogActions-root",
                                                                                "spacing": "MuiDialogActions-spacing",
                                                                              }
                                                                            }
                                                                          >
                                                                            <div
                                                                              className="MuiDialogActions-root MuiDialogActions-spacing"
                                                                            >
                                                                              <WithStyles(ForwardRef(Button))
                                                                                color="primary"
                                                                                onClick={[Function]}
                                                                              >
                                                                                <ForwardRef(Button)
                                                                                  classes={
                                                                                    Object {
                                                                                      "colorInherit": "MuiButton-colorInherit",
                                                                                      "contained": "MuiButton-contained",
                                                                                      "containedPrimary": "MuiButton-containedPrimary",
                                                                                      "containedSecondary": "MuiButton-containedSecondary",
                                                                                      "containedSizeLarge": "MuiButton-containedSizeLarge",
                                                                                      "containedSizeSmall": "MuiButton-containedSizeSmall",
                                                                                      "disableElevation": "MuiButton-disableElevation",
                                                                                      "disabled": "Mui-disabled",
                                                                                      "endIcon": "MuiButton-endIcon",
                                                                                      "focusVisible": "Mui-focusVisible",
                                                                                      "fullWidth": "MuiButton-fullWidth",
                                                                                      "iconSizeLarge": "MuiButton-iconSizeLarge",
                                                                                      "iconSizeMedium": "MuiButton-iconSizeMedium",
                                                                                      "iconSizeSmall": "MuiButton-iconSizeSmall",
                                                                                      "label": "MuiButton-label",
                                                                                      "outlined": "MuiButton-outlined",
                                                                                      "outlinedPrimary": "MuiButton-outlinedPrimary",
                                                                                      "outlinedSecondary": "MuiButton-outlinedSecondary",
                                                                                      "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                                                                                      "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                                                                                      "root": "MuiButton-root",
                                                                                      "sizeLarge": "MuiButton-sizeLarge",
                                                                                      "sizeSmall": "MuiButton-sizeSmall",
                                                                                      "startIcon": "MuiButton-startIcon",
                                                                                      "text": "MuiButton-text",
                                                                                      "textPrimary": "MuiButton-textPrimary",
                                                                                      "textSecondary": "MuiButton-textSecondary",
                                                                                      "textSizeLarge": "MuiButton-textSizeLarge",
                                                                                      "textSizeSmall": "MuiButton-textSizeSmall",
                                                                                    }
                                                                                  }
                                                                                  color="primary"
                                                                                  onClick={[Function]}
                                                                                >
                                                                                  <WithStyles(ForwardRef(ButtonBase))
                                                                                    className="MuiButton-root MuiButton-text MuiButton-textPrimary"
                                                                                    component="button"
                                                                                    disabled={false}
                                                                                    focusRipple={true}
                                                                                    focusVisibleClassName="Mui-focusVisible"
                                                                                    onClick={[Function]}
                                                                                    type="button"
                                                                                  >
                                                                                    <ForwardRef(ButtonBase)
                                                                                      className="MuiButton-root MuiButton-text MuiButton-textPrimary"
                                                                                      classes={
                                                                                        Object {
                                                                                          "disabled": "Mui-disabled",
                                                                                          "focusVisible": "Mui-focusVisible",
                                                                                          "root": "MuiButtonBase-root",
                                                                                        }
                                                                                      }
                                                                                      component="button"
                                                                                      disabled={false}
                                                                                      focusRipple={true}
                                                                                      focusVisibleClassName="Mui-focusVisible"
                                                                                      onClick={[Function]}
                                                                                      type="button"
                                                                                    >
                                                                                      <button
                                                                                        className="MuiButtonBase-root MuiButton-root MuiButton-text MuiButton-textPrimary"
                                                                                        disabled={false}
                                                                                        onBlur={[Function]}
                                                                                        onClick={[Function]}
                                                                                        onDragLeave={[Function]}
                                                                                        onFocus={[Function]}
                                                                                        onKeyDown={[Function]}
                                                                                        onKeyUp={[Function]}
                                                                                        onMouseDown={[Function]}
                                                                                        onMouseLeave={[Function]}
                                                                                        onMouseUp={[Function]}
                                                                                        onTouchEnd={[Function]}
                                                                                        onTouchMove={[Function]}
                                                                                        onTouchStart={[Function]}
                                                                                        tabIndex={0}
                                                                                        type="button"
                                                                                      >
                                                                                        <span
                                                                                          className="MuiButton-label"
                                                                                        >
                                                                                          OK
                                                                                        </span>
                                                                                        <WithStyles(memo)
                                                                                          center={false}
                                                                                        >
                                                                                          <ForwardRef(TouchRipple)
                                                                                            center={false}
                                                                                            classes={
                                                                                              Object {
                                                                                                "child": "MuiTouchRipple-child",
                                                                                                "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                                "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                                "ripple": "MuiTouchRipple-ripple",
                                                                                                "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                                "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                                "root": "MuiTouchRipple-root",
                                                                                              }
                                                                                            }
                                                                                          >
                                                                                            <span
                                                                                              className="MuiTouchRipple-root"
                                                                                            >
                                                                                              <TransitionGroup
                                                                                                childFactory={[Function]}
                                                                                                component={null}
                                                                                                exit={true}
                                                                                              />
                                                                                            </span>
                                                                                          </ForwardRef(TouchRipple)>
                                                                                        </WithStyles(memo)>
                                                                                      </button>
                                                                                    </ForwardRef(ButtonBase)>
                                                                                  </WithStyles(ForwardRef(ButtonBase))>
                                                                                </ForwardRef(Button)>
                                                                              </WithStyles(ForwardRef(Button))>
                                                                            </div>
                                                                          </ForwardRef(DialogActions)>
                                                                        </WithStyles(ForwardRef(DialogActions))>
                                                                      </div>
                                                                    </ForwardRef(Paper)>
                                                                  </WithStyles(ForwardRef(Paper))>
                                                                </div>
                                                              </Transition>
                                                            </ForwardRef(Slide)>
                                                          </ForwardRef(Transition)>
                                                          <div
                                                            data-test="sentinelEnd"
                                                            tabIndex={0}
                                                          />
                                                        </Unstable_TrapFocus>
                                                      </div>
                                                    </Portal>
                                                  </ForwardRef(Portal)>
                                                </ForwardRef(Modal)>
                                              </ForwardRef(Dialog)>
                                            </WithStyles(ForwardRef(Dialog))>
                                          </div>
                                        </AlertDialogSlide>
                                        <WithStyles(ForwardRef(AppBar))
                                          position="static"
                                        >
                                          <ForwardRef(AppBar)
                                            classes={
                                              Object {
                                                "colorDefault": "MuiAppBar-colorDefault",
                                                "colorInherit": "MuiAppBar-colorInherit",
                                                "colorPrimary": "MuiAppBar-colorPrimary",
                                                "colorSecondary": "MuiAppBar-colorSecondary",
                                                "colorTransparent": "MuiAppBar-colorTransparent",
                                                "positionAbsolute": "MuiAppBar-positionAbsolute",
                                                "positionFixed": "MuiAppBar-positionFixed",
                                                "positionRelative": "MuiAppBar-positionRelative",
                                                "positionStatic": "MuiAppBar-positionStatic",
                                                "positionSticky": "MuiAppBar-positionSticky",
                                                "root": "MuiAppBar-root",
                                              }
                                            }
                                            position="static"
                                          >
                                            <WithStyles(ForwardRef(Paper))
                                              className="MuiAppBar-root MuiAppBar-positionStatic MuiAppBar-colorPrimary"
                                              component="header"
                                              elevation={4}
                                              square={true}
                                            >
                                              <ForwardRef(Paper)
                                                className="MuiAppBar-root MuiAppBar-positionStatic MuiAppBar-colorPrimary"
                                                classes={
                                                  Object {
                                                    "elevation0": "MuiPaper-elevation0",
                                                    "elevation1": "MuiPaper-elevation1",
                                                    "elevation10": "MuiPaper-elevation10",
                                                    "elevation11": "MuiPaper-elevation11",
                                                    "elevation12": "MuiPaper-elevation12",
                                                    "elevation13": "MuiPaper-elevation13",
                                                    "elevation14": "MuiPaper-elevation14",
                                                    "elevation15": "MuiPaper-elevation15",
                                                    "elevation16": "MuiPaper-elevation16",
                                                    "elevation17": "MuiPaper-elevation17",
                                                    "elevation18": "MuiPaper-elevation18",
                                                    "elevation19": "MuiPaper-elevation19",
                                                    "elevation2": "MuiPaper-elevation2",
                                                    "elevation20": "MuiPaper-elevation20",
                                                    "elevation21": "MuiPaper-elevation21",
                                                    "elevation22": "MuiPaper-elevation22",
                                                    "elevation23": "MuiPaper-elevation23",
                                                    "elevation24": "MuiPaper-elevation24",
                                                    "elevation3": "MuiPaper-elevation3",
                                                    "elevation4": "MuiPaper-elevation4",
                                                    "elevation5": "MuiPaper-elevation5",
                                                    "elevation6": "MuiPaper-elevation6",
                                                    "elevation7": "MuiPaper-elevation7",
                                                    "elevation8": "MuiPaper-elevation8",
                                                    "elevation9": "MuiPaper-elevation9",
                                                    "outlined": "MuiPaper-outlined",
                                                    "root": "MuiPaper-root",
                                                    "rounded": "MuiPaper-rounded",
                                                  }
                                                }
                                                component="header"
                                                elevation={4}
                                                square={true}
                                              >
                                                <header
                                                  className="MuiPaper-root MuiAppBar-root MuiAppBar-positionStatic MuiAppBar-colorPrimary MuiPaper-elevation4"
                                                >
                                                  <WithStyles(ForwardRef(Tabs))
                                                    aria-label="nav tabs example"
                                                    onChange={[Function]}
                                                    value={0}
                                                    variant="fullWidth"
                                                  >
                                                    <ForwardRef(Tabs)
                                                      aria-label="nav tabs example"
                                                      classes={
                                                        Object {
                                                          "centered": "MuiTabs-centered",
                                                          "fixed": "MuiTabs-fixed",
                                                          "flexContainer": "MuiTabs-flexContainer",
                                                          "flexContainerVertical": "MuiTabs-flexContainerVertical",
                                                          "indicator": "MuiTabs-indicator",
                                                          "root": "MuiTabs-root",
                                                          "scrollButtons": "MuiTabs-scrollButtons",
                                                          "scrollButtonsDesktop": "MuiTabs-scrollButtonsDesktop",
                                                          "scrollable": "MuiTabs-scrollable",
                                                          "scroller": "MuiTabs-scroller",
                                                          "vertical": "MuiTabs-vertical",
                                                        }
                                                      }
                                                      onChange={[Function]}
                                                      value={0}
                                                      variant="fullWidth"
                                                    >
                                                      <div
                                                        className="MuiTabs-root"
                                                      >
                                                        <div
                                                          className="MuiTabs-scroller MuiTabs-fixed"
                                                          onScroll={[Function]}
                                                          style={
                                                            Object {
                                                              "marginBottom": null,
                                                              "overflow": "hidden",
                                                            }
                                                          }
                                                        >
                                                          <div
                                                            aria-label="nav tabs example"
                                                            className="MuiTabs-flexContainer"
                                                            onKeyDown={[Function]}
                                                            role="tablist"
                                                          >
                                                            <LinkTab
                                                              aria-controls="nav-tabpanel-0"
                                                              fullWidth={true}
                                                              id="nav-tab-0"
                                                              indicator={false}
                                                              key=".0"
                                                              label="Multipla Escolha"
                                                              onChange={[Function]}
                                                              selected={true}
                                                              textColor="inherit"
                                                              value={0}
                                                            >
                                                              <WithStyles(ForwardRef(Tab))
                                                                aria-controls="nav-tabpanel-0"
                                                                component="a"
                                                                fullWidth={true}
                                                                id="nav-tab-0"
                                                                indicator={false}
                                                                label="Multipla Escolha"
                                                                onChange={[Function]}
                                                                onClick={[Function]}
                                                                selected={true}
                                                                textColor="inherit"
                                                                value={0}
                                                              >
                                                                <ForwardRef(Tab)
                                                                  aria-controls="nav-tabpanel-0"
                                                                  classes={
                                                                    Object {
                                                                      "disabled": "Mui-disabled",
                                                                      "fullWidth": "MuiTab-fullWidth",
                                                                      "labelIcon": "MuiTab-labelIcon",
                                                                      "root": "MuiTab-root",
                                                                      "selected": "Mui-selected",
                                                                      "textColorInherit": "MuiTab-textColorInherit",
                                                                      "textColorPrimary": "MuiTab-textColorPrimary",
                                                                      "textColorSecondary": "MuiTab-textColorSecondary",
                                                                      "wrapped": "MuiTab-wrapped",
                                                                      "wrapper": "MuiTab-wrapper",
                                                                    }
                                                                  }
                                                                  component="a"
                                                                  fullWidth={true}
                                                                  id="nav-tab-0"
                                                                  indicator={false}
                                                                  label="Multipla Escolha"
                                                                  onChange={[Function]}
                                                                  onClick={[Function]}
                                                                  selected={true}
                                                                  textColor="inherit"
                                                                  value={0}
                                                                >
                                                                  <WithStyles(ForwardRef(ButtonBase))
                                                                    aria-controls="nav-tabpanel-0"
                                                                    aria-selected={true}
                                                                    className="MuiTab-root MuiTab-textColorInherit Mui-selected MuiTab-fullWidth"
                                                                    component="a"
                                                                    disabled={false}
                                                                    focusRipple={true}
                                                                    id="nav-tab-0"
                                                                    onClick={[Function]}
                                                                    onFocus={[Function]}
                                                                    role="tab"
                                                                    tabIndex={0}
                                                                  >
                                                                    <ForwardRef(ButtonBase)
                                                                      aria-controls="nav-tabpanel-0"
                                                                      aria-selected={true}
                                                                      className="MuiTab-root MuiTab-textColorInherit Mui-selected MuiTab-fullWidth"
                                                                      classes={
                                                                        Object {
                                                                          "disabled": "Mui-disabled",
                                                                          "focusVisible": "Mui-focusVisible",
                                                                          "root": "MuiButtonBase-root",
                                                                        }
                                                                      }
                                                                      component="a"
                                                                      disabled={false}
                                                                      focusRipple={true}
                                                                      id="nav-tab-0"
                                                                      onClick={[Function]}
                                                                      onFocus={[Function]}
                                                                      role="tab"
                                                                      tabIndex={0}
                                                                    >
                                                                      <a
                                                                        aria-controls="nav-tabpanel-0"
                                                                        aria-disabled={false}
                                                                        aria-selected={true}
                                                                        className="MuiButtonBase-root MuiTab-root MuiTab-textColorInherit Mui-selected MuiTab-fullWidth"
                                                                        id="nav-tab-0"
                                                                        onBlur={[Function]}
                                                                        onClick={[Function]}
                                                                        onDragLeave={[Function]}
                                                                        onFocus={[Function]}
                                                                        onKeyDown={[Function]}
                                                                        onKeyUp={[Function]}
                                                                        onMouseDown={[Function]}
                                                                        onMouseLeave={[Function]}
                                                                        onMouseUp={[Function]}
                                                                        onTouchEnd={[Function]}
                                                                        onTouchMove={[Function]}
                                                                        onTouchStart={[Function]}
                                                                        role="tab"
                                                                        tabIndex={0}
                                                                      >
                                                                        <span
                                                                          className="MuiTab-wrapper"
                                                                        >
                                                                          Multipla Escolha
                                                                        </span>
                                                                        <WithStyles(memo)
                                                                          center={false}
                                                                        >
                                                                          <ForwardRef(TouchRipple)
                                                                            center={false}
                                                                            classes={
                                                                              Object {
                                                                                "child": "MuiTouchRipple-child",
                                                                                "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                "ripple": "MuiTouchRipple-ripple",
                                                                                "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                "root": "MuiTouchRipple-root",
                                                                              }
                                                                            }
                                                                          >
                                                                            <span
                                                                              className="MuiTouchRipple-root"
                                                                            >
                                                                              <TransitionGroup
                                                                                childFactory={[Function]}
                                                                                component={null}
                                                                                exit={true}
                                                                              />
                                                                            </span>
                                                                          </ForwardRef(TouchRipple)>
                                                                        </WithStyles(memo)>
                                                                      </a>
                                                                    </ForwardRef(ButtonBase)>
                                                                  </WithStyles(ForwardRef(ButtonBase))>
                                                                </ForwardRef(Tab)>
                                                              </WithStyles(ForwardRef(Tab))>
                                                            </LinkTab>
                                                            <LinkTab
                                                              aria-controls="nav-tabpanel-1"
                                                              fullWidth={true}
                                                              id="nav-tab-1"
                                                              indicator={false}
                                                              key=".1"
                                                              label="Escolha Unica"
                                                              onChange={[Function]}
                                                              selected={false}
                                                              textColor="inherit"
                                                              value={1}
                                                            >
                                                              <WithStyles(ForwardRef(Tab))
                                                                aria-controls="nav-tabpanel-1"
                                                                component="a"
                                                                fullWidth={true}
                                                                id="nav-tab-1"
                                                                indicator={false}
                                                                label="Escolha Unica"
                                                                onChange={[Function]}
                                                                onClick={[Function]}
                                                                selected={false}
                                                                textColor="inherit"
                                                                value={1}
                                                              >
                                                                <ForwardRef(Tab)
                                                                  aria-controls="nav-tabpanel-1"
                                                                  classes={
                                                                    Object {
                                                                      "disabled": "Mui-disabled",
                                                                      "fullWidth": "MuiTab-fullWidth",
                                                                      "labelIcon": "MuiTab-labelIcon",
                                                                      "root": "MuiTab-root",
                                                                      "selected": "Mui-selected",
                                                                      "textColorInherit": "MuiTab-textColorInherit",
                                                                      "textColorPrimary": "MuiTab-textColorPrimary",
                                                                      "textColorSecondary": "MuiTab-textColorSecondary",
                                                                      "wrapped": "MuiTab-wrapped",
                                                                      "wrapper": "MuiTab-wrapper",
                                                                    }
                                                                  }
                                                                  component="a"
                                                                  fullWidth={true}
                                                                  id="nav-tab-1"
                                                                  indicator={false}
                                                                  label="Escolha Unica"
                                                                  onChange={[Function]}
                                                                  onClick={[Function]}
                                                                  selected={false}
                                                                  textColor="inherit"
                                                                  value={1}
                                                                >
                                                                  <WithStyles(ForwardRef(ButtonBase))
                                                                    aria-controls="nav-tabpanel-1"
                                                                    aria-selected={false}
                                                                    className="MuiTab-root MuiTab-textColorInherit MuiTab-fullWidth"
                                                                    component="a"
                                                                    disabled={false}
                                                                    focusRipple={true}
                                                                    id="nav-tab-1"
                                                                    onClick={[Function]}
                                                                    onFocus={[Function]}
                                                                    role="tab"
                                                                    tabIndex={-1}
                                                                  >
                                                                    <ForwardRef(ButtonBase)
                                                                      aria-controls="nav-tabpanel-1"
                                                                      aria-selected={false}
                                                                      className="MuiTab-root MuiTab-textColorInherit MuiTab-fullWidth"
                                                                      classes={
                                                                        Object {
                                                                          "disabled": "Mui-disabled",
                                                                          "focusVisible": "Mui-focusVisible",
                                                                          "root": "MuiButtonBase-root",
                                                                        }
                                                                      }
                                                                      component="a"
                                                                      disabled={false}
                                                                      focusRipple={true}
                                                                      id="nav-tab-1"
                                                                      onClick={[Function]}
                                                                      onFocus={[Function]}
                                                                      role="tab"
                                                                      tabIndex={-1}
                                                                    >
                                                                      <a
                                                                        aria-controls="nav-tabpanel-1"
                                                                        aria-disabled={false}
                                                                        aria-selected={false}
                                                                        className="MuiButtonBase-root MuiTab-root MuiTab-textColorInherit MuiTab-fullWidth"
                                                                        id="nav-tab-1"
                                                                        onBlur={[Function]}
                                                                        onClick={[Function]}
                                                                        onDragLeave={[Function]}
                                                                        onFocus={[Function]}
                                                                        onKeyDown={[Function]}
                                                                        onKeyUp={[Function]}
                                                                        onMouseDown={[Function]}
                                                                        onMouseLeave={[Function]}
                                                                        onMouseUp={[Function]}
                                                                        onTouchEnd={[Function]}
                                                                        onTouchMove={[Function]}
                                                                        onTouchStart={[Function]}
                                                                        role="tab"
                                                                        tabIndex={-1}
                                                                      >
                                                                        <span
                                                                          className="MuiTab-wrapper"
                                                                        >
                                                                          Escolha Unica
                                                                        </span>
                                                                        <WithStyles(memo)
                                                                          center={false}
                                                                        >
                                                                          <ForwardRef(TouchRipple)
                                                                            center={false}
                                                                            classes={
                                                                              Object {
                                                                                "child": "MuiTouchRipple-child",
                                                                                "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                "ripple": "MuiTouchRipple-ripple",
                                                                                "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                "root": "MuiTouchRipple-root",
                                                                              }
                                                                            }
                                                                          >
                                                                            <span
                                                                              className="MuiTouchRipple-root"
                                                                            >
                                                                              <TransitionGroup
                                                                                childFactory={[Function]}
                                                                                component={null}
                                                                                exit={true}
                                                                              />
                                                                            </span>
                                                                          </ForwardRef(TouchRipple)>
                                                                        </WithStyles(memo)>
                                                                      </a>
                                                                    </ForwardRef(ButtonBase)>
                                                                  </WithStyles(ForwardRef(ButtonBase))>
                                                                </ForwardRef(Tab)>
                                                              </WithStyles(ForwardRef(Tab))>
                                                            </LinkTab>
                                                            <LinkTab
                                                              aria-controls="nav-tabpanel-2"
                                                              fullWidth={true}
                                                              id="nav-tab-2"
                                                              indicator={false}
                                                              key=".2"
                                                              label="Textual"
                                                              onChange={[Function]}
                                                              selected={false}
                                                              textColor="inherit"
                                                              value={2}
                                                            >
                                                              <WithStyles(ForwardRef(Tab))
                                                                aria-controls="nav-tabpanel-2"
                                                                component="a"
                                                                fullWidth={true}
                                                                id="nav-tab-2"
                                                                indicator={false}
                                                                label="Textual"
                                                                onChange={[Function]}
                                                                onClick={[Function]}
                                                                selected={false}
                                                                textColor="inherit"
                                                                value={2}
                                                              >
                                                                <ForwardRef(Tab)
                                                                  aria-controls="nav-tabpanel-2"
                                                                  classes={
                                                                    Object {
                                                                      "disabled": "Mui-disabled",
                                                                      "fullWidth": "MuiTab-fullWidth",
                                                                      "labelIcon": "MuiTab-labelIcon",
                                                                      "root": "MuiTab-root",
                                                                      "selected": "Mui-selected",
                                                                      "textColorInherit": "MuiTab-textColorInherit",
                                                                      "textColorPrimary": "MuiTab-textColorPrimary",
                                                                      "textColorSecondary": "MuiTab-textColorSecondary",
                                                                      "wrapped": "MuiTab-wrapped",
                                                                      "wrapper": "MuiTab-wrapper",
                                                                    }
                                                                  }
                                                                  component="a"
                                                                  fullWidth={true}
                                                                  id="nav-tab-2"
                                                                  indicator={false}
                                                                  label="Textual"
                                                                  onChange={[Function]}
                                                                  onClick={[Function]}
                                                                  selected={false}
                                                                  textColor="inherit"
                                                                  value={2}
                                                                >
                                                                  <WithStyles(ForwardRef(ButtonBase))
                                                                    aria-controls="nav-tabpanel-2"
                                                                    aria-selected={false}
                                                                    className="MuiTab-root MuiTab-textColorInherit MuiTab-fullWidth"
                                                                    component="a"
                                                                    disabled={false}
                                                                    focusRipple={true}
                                                                    id="nav-tab-2"
                                                                    onClick={[Function]}
                                                                    onFocus={[Function]}
                                                                    role="tab"
                                                                    tabIndex={-1}
                                                                  >
                                                                    <ForwardRef(ButtonBase)
                                                                      aria-controls="nav-tabpanel-2"
                                                                      aria-selected={false}
                                                                      className="MuiTab-root MuiTab-textColorInherit MuiTab-fullWidth"
                                                                      classes={
                                                                        Object {
                                                                          "disabled": "Mui-disabled",
                                                                          "focusVisible": "Mui-focusVisible",
                                                                          "root": "MuiButtonBase-root",
                                                                        }
                                                                      }
                                                                      component="a"
                                                                      disabled={false}
                                                                      focusRipple={true}
                                                                      id="nav-tab-2"
                                                                      onClick={[Function]}
                                                                      onFocus={[Function]}
                                                                      role="tab"
                                                                      tabIndex={-1}
                                                                    >
                                                                      <a
                                                                        aria-controls="nav-tabpanel-2"
                                                                        aria-disabled={false}
                                                                        aria-selected={false}
                                                                        className="MuiButtonBase-root MuiTab-root MuiTab-textColorInherit MuiTab-fullWidth"
                                                                        id="nav-tab-2"
                                                                        onBlur={[Function]}
                                                                        onClick={[Function]}
                                                                        onDragLeave={[Function]}
                                                                        onFocus={[Function]}
                                                                        onKeyDown={[Function]}
                                                                        onKeyUp={[Function]}
                                                                        onMouseDown={[Function]}
                                                                        onMouseLeave={[Function]}
                                                                        onMouseUp={[Function]}
                                                                        onTouchEnd={[Function]}
                                                                        onTouchMove={[Function]}
                                                                        onTouchStart={[Function]}
                                                                        role="tab"
                                                                        tabIndex={-1}
                                                                      >
                                                                        <span
                                                                          className="MuiTab-wrapper"
                                                                        >
                                                                          Textual
                                                                        </span>
                                                                        <WithStyles(memo)
                                                                          center={false}
                                                                        >
                                                                          <ForwardRef(TouchRipple)
                                                                            center={false}
                                                                            classes={
                                                                              Object {
                                                                                "child": "MuiTouchRipple-child",
                                                                                "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                "ripple": "MuiTouchRipple-ripple",
                                                                                "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                "root": "MuiTouchRipple-root",
                                                                              }
                                                                            }
                                                                          >
                                                                            <span
                                                                              className="MuiTouchRipple-root"
                                                                            >
                                                                              <TransitionGroup
                                                                                childFactory={[Function]}
                                                                                component={null}
                                                                                exit={true}
                                                                              />
                                                                            </span>
                                                                          </ForwardRef(TouchRipple)>
                                                                        </WithStyles(memo)>
                                                                      </a>
                                                                    </ForwardRef(ButtonBase)>
                                                                  </WithStyles(ForwardRef(ButtonBase))>
                                                                </ForwardRef(Tab)>
                                                              </WithStyles(ForwardRef(Tab))>
                                                            </LinkTab>
                                                          </div>
                                                          <WithStyles(ForwardRef(TabIndicator))
                                                            className="MuiTabs-indicator"
                                                            color="secondary"
                                                            orientation="horizontal"
                                                            style={
                                                              Object {
                                                                "left": 0,
                                                                "width": 0,
                                                              }
                                                            }
                                                          >
                                                            <ForwardRef(TabIndicator)
                                                              className="MuiTabs-indicator"
                                                              classes={
                                                                Object {
                                                                  "colorPrimary": "PrivateTabIndicator-colorPrimary-11",
                                                                  "colorSecondary": "PrivateTabIndicator-colorSecondary-12",
                                                                  "root": "PrivateTabIndicator-root-10",
                                                                  "vertical": "PrivateTabIndicator-vertical-13",
                                                                }
                                                              }
                                                              color="secondary"
                                                              orientation="horizontal"
                                                              style={
                                                                Object {
                                                                  "left": 0,
                                                                  "width": 0,
                                                                }
                                                              }
                                                            >
                                                              <span
                                                                className="PrivateTabIndicator-root-10 PrivateTabIndicator-colorSecondary-12 MuiTabs-indicator"
                                                                style={
                                                                  Object {
                                                                    "left": 0,
                                                                    "width": 0,
                                                                  }
                                                                }
                                                              />
                                                            </ForwardRef(TabIndicator)>
                                                          </WithStyles(ForwardRef(TabIndicator))>
                                                        </div>
                                                      </div>
                                                    </ForwardRef(Tabs)>
                                                  </WithStyles(ForwardRef(Tabs))>
                                                </header>
                                              </ForwardRef(Paper)>
                                            </WithStyles(ForwardRef(Paper))>
                                          </ForwardRef(AppBar)>
                                        </WithStyles(ForwardRef(AppBar))>
                                        <TabPanel
                                          index={0}
                                          value={0}
                                        >
                                          <div
                                            aria-labelledby="nav-tab-0"
                                            hidden={false}
                                            id="nav-tabpanel-0"
                                            role="tabpanel"
                                          >
                                            <Styled(MuiBox)
                                              p={3}
                                            >
                                              <div
                                                className="MuiBox-root MuiBox-root-14"
                                              >
                                                <_default
                                                  editing={false}
                                                  erase={false}
                                                  eraseQuestionForm={[Function]}
                                                  questionCheckbox={[Function]}
                                                  questionEditedChange={[Function]}
                                                  questionToEdit={null}
                                                >
                                                  <WithStyles(ForwardRef(Paper))
                                                    className="makeStyles-paper-16 makeStyles-root-15 makeStyles-form-17"
                                                  >
                                                    <ForwardRef(Paper)
                                                      className="makeStyles-paper-16 makeStyles-root-15 makeStyles-form-17"
                                                      classes={
                                                        Object {
                                                          "elevation0": "MuiPaper-elevation0",
                                                          "elevation1": "MuiPaper-elevation1",
                                                          "elevation10": "MuiPaper-elevation10",
                                                          "elevation11": "MuiPaper-elevation11",
                                                          "elevation12": "MuiPaper-elevation12",
                                                          "elevation13": "MuiPaper-elevation13",
                                                          "elevation14": "MuiPaper-elevation14",
                                                          "elevation15": "MuiPaper-elevation15",
                                                          "elevation16": "MuiPaper-elevation16",
                                                          "elevation17": "MuiPaper-elevation17",
                                                          "elevation18": "MuiPaper-elevation18",
                                                          "elevation19": "MuiPaper-elevation19",
                                                          "elevation2": "MuiPaper-elevation2",
                                                          "elevation20": "MuiPaper-elevation20",
                                                          "elevation21": "MuiPaper-elevation21",
                                                          "elevation22": "MuiPaper-elevation22",
                                                          "elevation23": "MuiPaper-elevation23",
                                                          "elevation24": "MuiPaper-elevation24",
                                                          "elevation3": "MuiPaper-elevation3",
                                                          "elevation4": "MuiPaper-elevation4",
                                                          "elevation5": "MuiPaper-elevation5",
                                                          "elevation6": "MuiPaper-elevation6",
                                                          "elevation7": "MuiPaper-elevation7",
                                                          "elevation8": "MuiPaper-elevation8",
                                                          "elevation9": "MuiPaper-elevation9",
                                                          "outlined": "MuiPaper-outlined",
                                                          "root": "MuiPaper-root",
                                                          "rounded": "MuiPaper-rounded",
                                                        }
                                                      }
                                                    >
                                                      <div
                                                        className="MuiPaper-root makeStyles-paper-16 makeStyles-root-15 makeStyles-form-17 MuiPaper-elevation1 MuiPaper-rounded"
                                                      >
                                                        <WithStyles(ForwardRef(Typography))
                                                          className="makeStyles-text-18"
                                                          variant="h6"
                                                        >
                                                          <ForwardRef(Typography)
                                                            className="makeStyles-text-18"
                                                            classes={
                                                              Object {
                                                                "alignCenter": "MuiTypography-alignCenter",
                                                                "alignJustify": "MuiTypography-alignJustify",
                                                                "alignLeft": "MuiTypography-alignLeft",
                                                                "alignRight": "MuiTypography-alignRight",
                                                                "body1": "MuiTypography-body1",
                                                                "body2": "MuiTypography-body2",
                                                                "button": "MuiTypography-button",
                                                                "caption": "MuiTypography-caption",
                                                                "colorError": "MuiTypography-colorError",
                                                                "colorInherit": "MuiTypography-colorInherit",
                                                                "colorPrimary": "MuiTypography-colorPrimary",
                                                                "colorSecondary": "MuiTypography-colorSecondary",
                                                                "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                "displayBlock": "MuiTypography-displayBlock",
                                                                "displayInline": "MuiTypography-displayInline",
                                                                "gutterBottom": "MuiTypography-gutterBottom",
                                                                "h1": "MuiTypography-h1",
                                                                "h2": "MuiTypography-h2",
                                                                "h3": "MuiTypography-h3",
                                                                "h4": "MuiTypography-h4",
                                                                "h5": "MuiTypography-h5",
                                                                "h6": "MuiTypography-h6",
                                                                "noWrap": "MuiTypography-noWrap",
                                                                "overline": "MuiTypography-overline",
                                                                "paragraph": "MuiTypography-paragraph",
                                                                "root": "MuiTypography-root",
                                                                "srOnly": "MuiTypography-srOnly",
                                                                "subtitle1": "MuiTypography-subtitle1",
                                                                "subtitle2": "MuiTypography-subtitle2",
                                                              }
                                                            }
                                                            variant="h6"
                                                          >
                                                            <h6
                                                              className="MuiTypography-root makeStyles-text-18 MuiTypography-h6"
                                                            >
                                                              Nesse tipo de questão pode ser selecionado multiplas respostas.
                                                            </h6>
                                                          </ForwardRef(Typography)>
                                                        </WithStyles(ForwardRef(Typography))>
                                                        <WithStyles(ForwardRef(TextField))
                                                          autoFocus={true}
                                                          fullWidth={true}
                                                          label="Enunciado"
                                                          name="title"
                                                          onChange={[Function]}
                                                          value=""
                                                          variant="outlined"
                                                        >
                                                          <ForwardRef(TextField)
                                                            autoFocus={true}
                                                            classes={
                                                              Object {
                                                                "root": "MuiTextField-root",
                                                              }
                                                            }
                                                            fullWidth={true}
                                                            label="Enunciado"
                                                            name="title"
                                                            onChange={[Function]}
                                                            value=""
                                                            variant="outlined"
                                                          >
                                                            <WithStyles(ForwardRef(FormControl))
                                                              className="MuiTextField-root"
                                                              color="primary"
                                                              disabled={false}
                                                              error={false}
                                                              fullWidth={true}
                                                              required={false}
                                                              variant="outlined"
                                                            >
                                                              <ForwardRef(FormControl)
                                                                className="MuiTextField-root"
                                                                classes={
                                                                  Object {
                                                                    "fullWidth": "MuiFormControl-fullWidth",
                                                                    "marginDense": "MuiFormControl-marginDense",
                                                                    "marginNormal": "MuiFormControl-marginNormal",
                                                                    "root": "MuiFormControl-root",
                                                                  }
                                                                }
                                                                color="primary"
                                                                disabled={false}
                                                                error={false}
                                                                fullWidth={true}
                                                                required={false}
                                                                variant="outlined"
                                                              >
                                                                <div
                                                                  className="MuiFormControl-root MuiTextField-root MuiFormControl-fullWidth"
                                                                >
                                                                  <WithStyles(ForwardRef(InputLabel))>
                                                                    <ForwardRef(InputLabel)
                                                                      classes={
                                                                        Object {
                                                                          "animated": "MuiInputLabel-animated",
                                                                          "asterisk": "MuiInputLabel-asterisk",
                                                                          "disabled": "Mui-disabled",
                                                                          "error": "Mui-error",
                                                                          "filled": "MuiInputLabel-filled",
                                                                          "focused": "Mui-focused",
                                                                          "formControl": "MuiInputLabel-formControl",
                                                                          "marginDense": "MuiInputLabel-marginDense",
                                                                          "outlined": "MuiInputLabel-outlined",
                                                                          "required": "Mui-required",
                                                                          "root": "MuiInputLabel-root",
                                                                          "shrink": "MuiInputLabel-shrink",
                                                                        }
                                                                      }
                                                                    >
                                                                      <WithStyles(ForwardRef(FormLabel))
                                                                        className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                                                                        classes={
                                                                          Object {
                                                                            "asterisk": "MuiInputLabel-asterisk",
                                                                            "disabled": "Mui-disabled",
                                                                            "error": "Mui-error",
                                                                            "focused": "Mui-focused",
                                                                            "required": "Mui-required",
                                                                          }
                                                                        }
                                                                        data-shrink={false}
                                                                      >
                                                                        <ForwardRef(FormLabel)
                                                                          className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                                                                          classes={
                                                                            Object {
                                                                              "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                                                                              "colorSecondary": "MuiFormLabel-colorSecondary",
                                                                              "disabled": "Mui-disabled Mui-disabled",
                                                                              "error": "Mui-error Mui-error",
                                                                              "filled": "MuiFormLabel-filled",
                                                                              "focused": "Mui-focused Mui-focused",
                                                                              "required": "Mui-required Mui-required",
                                                                              "root": "MuiFormLabel-root",
                                                                            }
                                                                          }
                                                                          data-shrink={false}
                                                                        >
                                                                          <label
                                                                            className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                                                                            data-shrink={false}
                                                                          >
                                                                            Enunciado
                                                                          </label>
                                                                        </ForwardRef(FormLabel)>
                                                                      </WithStyles(ForwardRef(FormLabel))>
                                                                    </ForwardRef(InputLabel)>
                                                                  </WithStyles(ForwardRef(InputLabel))>
                                                                  <WithStyles(ForwardRef(OutlinedInput))
                                                                    autoFocus={true}
                                                                    fullWidth={true}
                                                                    label={
                                                                      <React.Fragment>
                                                                        Enunciado
                                                                      </React.Fragment>
                                                                    }
                                                                    multiline={false}
                                                                    name="title"
                                                                    onChange={[Function]}
                                                                    value=""
                                                                  >
                                                                    <ForwardRef(OutlinedInput)
                                                                      autoFocus={true}
                                                                      classes={
                                                                        Object {
                                                                          "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                                                          "adornedStart": "MuiOutlinedInput-adornedStart",
                                                                          "colorSecondary": "MuiOutlinedInput-colorSecondary",
                                                                          "disabled": "Mui-disabled",
                                                                          "error": "Mui-error",
                                                                          "focused": "Mui-focused",
                                                                          "input": "MuiOutlinedInput-input",
                                                                          "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                                                          "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                                                          "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                                                          "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                                                          "marginDense": "MuiOutlinedInput-marginDense",
                                                                          "multiline": "MuiOutlinedInput-multiline",
                                                                          "notchedOutline": "MuiOutlinedInput-notchedOutline",
                                                                          "root": "MuiOutlinedInput-root",
                                                                        }
                                                                      }
                                                                      fullWidth={true}
                                                                      label={
                                                                        <React.Fragment>
                                                                          Enunciado
                                                                        </React.Fragment>
                                                                      }
                                                                      multiline={false}
                                                                      name="title"
                                                                      onChange={[Function]}
                                                                      value=""
                                                                    >
                                                                      <WithStyles(ForwardRef(InputBase))
                                                                        autoFocus={true}
                                                                        classes={
                                                                          Object {
                                                                            "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                                                            "adornedStart": "MuiOutlinedInput-adornedStart",
                                                                            "colorSecondary": "MuiOutlinedInput-colorSecondary",
                                                                            "disabled": "Mui-disabled",
                                                                            "error": "Mui-error",
                                                                            "focused": "Mui-focused",
                                                                            "input": "MuiOutlinedInput-input",
                                                                            "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                                                            "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                                                            "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                                                            "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                                                            "marginDense": "MuiOutlinedInput-marginDense",
                                                                            "multiline": "MuiOutlinedInput-multiline",
                                                                            "notchedOutline": null,
                                                                            "root": "MuiOutlinedInput-root",
                                                                          }
                                                                        }
                                                                        fullWidth={true}
                                                                        inputComponent="input"
                                                                        multiline={false}
                                                                        name="title"
                                                                        onChange={[Function]}
                                                                        renderSuffix={[Function]}
                                                                        type="text"
                                                                        value=""
                                                                      >
                                                                        <ForwardRef(InputBase)
                                                                          autoFocus={true}
                                                                          classes={
                                                                            Object {
                                                                              "adornedEnd": "MuiInputBase-adornedEnd MuiOutlinedInput-adornedEnd",
                                                                              "adornedStart": "MuiInputBase-adornedStart MuiOutlinedInput-adornedStart",
                                                                              "colorSecondary": "MuiInputBase-colorSecondary MuiOutlinedInput-colorSecondary",
                                                                              "disabled": "Mui-disabled Mui-disabled",
                                                                              "error": "Mui-error Mui-error",
                                                                              "focused": "Mui-focused Mui-focused",
                                                                              "formControl": "MuiInputBase-formControl",
                                                                              "fullWidth": "MuiInputBase-fullWidth",
                                                                              "input": "MuiInputBase-input MuiOutlinedInput-input",
                                                                              "inputAdornedEnd": "MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd",
                                                                              "inputAdornedStart": "MuiInputBase-inputAdornedStart MuiOutlinedInput-inputAdornedStart",
                                                                              "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                                              "inputMarginDense": "MuiInputBase-inputMarginDense MuiOutlinedInput-inputMarginDense",
                                                                              "inputMultiline": "MuiInputBase-inputMultiline MuiOutlinedInput-inputMultiline",
                                                                              "inputTypeSearch": "MuiInputBase-inputTypeSearch",
                                                                              "marginDense": "MuiInputBase-marginDense MuiOutlinedInput-marginDense",
                                                                              "multiline": "MuiInputBase-multiline MuiOutlinedInput-multiline",
                                                                              "root": "MuiInputBase-root MuiOutlinedInput-root",
                                                                            }
                                                                          }
                                                                          fullWidth={true}
                                                                          inputComponent="input"
                                                                          multiline={false}
                                                                          name="title"
                                                                          onChange={[Function]}
                                                                          renderSuffix={[Function]}
                                                                          type="text"
                                                                          value=""
                                                                        >
                                                                          <div
                                                                            className="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-fullWidth MuiInputBase-formControl"
                                                                            onClick={[Function]}
                                                                          >
                                                                            <input
                                                                              aria-invalid={false}
                                                                              autoFocus={true}
                                                                              className="MuiInputBase-input MuiOutlinedInput-input"
                                                                              disabled={false}
                                                                              name="title"
                                                                              onAnimationStart={[Function]}
                                                                              onBlur={[Function]}
                                                                              onChange={[Function]}
                                                                              onFocus={[Function]}
                                                                              required={false}
                                                                              type="text"
                                                                              value=""
                                                                            />
                                                                            <WithStyles(ForwardRef(NotchedOutline))
                                                                              className="MuiOutlinedInput-notchedOutline"
                                                                              label={
                                                                                <React.Fragment>
                                                                                  Enunciado
                                                                                </React.Fragment>
                                                                              }
                                                                              labelWidth={0}
                                                                              notched={false}
                                                                            >
                                                                              <ForwardRef(NotchedOutline)
                                                                                className="MuiOutlinedInput-notchedOutline"
                                                                                classes={
                                                                                  Object {
                                                                                    "legend": "PrivateNotchedOutline-legend-20",
                                                                                    "legendLabelled": "PrivateNotchedOutline-legendLabelled-21",
                                                                                    "legendNotched": "PrivateNotchedOutline-legendNotched-22",
                                                                                    "root": "PrivateNotchedOutline-root-19",
                                                                                  }
                                                                                }
                                                                                label={
                                                                                  <React.Fragment>
                                                                                    Enunciado
                                                                                  </React.Fragment>
                                                                                }
                                                                                labelWidth={0}
                                                                                notched={false}
                                                                              >
                                                                                <fieldset
                                                                                  aria-hidden={true}
                                                                                  className="PrivateNotchedOutline-root-19 MuiOutlinedInput-notchedOutline"
                                                                                >
                                                                                  <legend
                                                                                    className="PrivateNotchedOutline-legendLabelled-21"
                                                                                  >
                                                                                    <span>
                                                                                      Enunciado
                                                                                    </span>
                                                                                  </legend>
                                                                                </fieldset>
                                                                              </ForwardRef(NotchedOutline)>
                                                                            </WithStyles(ForwardRef(NotchedOutline))>
                                                                          </div>
                                                                        </ForwardRef(InputBase)>
                                                                      </WithStyles(ForwardRef(InputBase))>
                                                                    </ForwardRef(OutlinedInput)>
                                                                  </WithStyles(ForwardRef(OutlinedInput))>
                                                                </div>
                                                              </ForwardRef(FormControl)>
                                                            </WithStyles(ForwardRef(FormControl))>
                                                          </ForwardRef(TextField)>
                                                        </WithStyles(ForwardRef(TextField))>
                                                        <WithStyles(ForwardRef(TextField))
                                                          fullWidth={true}
                                                          label="Opção 1"
                                                          name="1"
                                                          onChange={[Function]}
                                                          value=""
                                                          variant="filled"
                                                        >
                                                          <ForwardRef(TextField)
                                                            classes={
                                                              Object {
                                                                "root": "MuiTextField-root",
                                                              }
                                                            }
                                                            fullWidth={true}
                                                            label="Opção 1"
                                                            name="1"
                                                            onChange={[Function]}
                                                            value=""
                                                            variant="filled"
                                                          >
                                                            <WithStyles(ForwardRef(FormControl))
                                                              className="MuiTextField-root"
                                                              color="primary"
                                                              disabled={false}
                                                              error={false}
                                                              fullWidth={true}
                                                              required={false}
                                                              variant="filled"
                                                            >
                                                              <ForwardRef(FormControl)
                                                                className="MuiTextField-root"
                                                                classes={
                                                                  Object {
                                                                    "fullWidth": "MuiFormControl-fullWidth",
                                                                    "marginDense": "MuiFormControl-marginDense",
                                                                    "marginNormal": "MuiFormControl-marginNormal",
                                                                    "root": "MuiFormControl-root",
                                                                  }
                                                                }
                                                                color="primary"
                                                                disabled={false}
                                                                error={false}
                                                                fullWidth={true}
                                                                required={false}
                                                                variant="filled"
                                                              >
                                                                <div
                                                                  className="MuiFormControl-root MuiTextField-root MuiFormControl-fullWidth"
                                                                >
                                                                  <WithStyles(ForwardRef(InputLabel))>
                                                                    <ForwardRef(InputLabel)
                                                                      classes={
                                                                        Object {
                                                                          "animated": "MuiInputLabel-animated",
                                                                          "asterisk": "MuiInputLabel-asterisk",
                                                                          "disabled": "Mui-disabled",
                                                                          "error": "Mui-error",
                                                                          "filled": "MuiInputLabel-filled",
                                                                          "focused": "Mui-focused",
                                                                          "formControl": "MuiInputLabel-formControl",
                                                                          "marginDense": "MuiInputLabel-marginDense",
                                                                          "outlined": "MuiInputLabel-outlined",
                                                                          "required": "Mui-required",
                                                                          "root": "MuiInputLabel-root",
                                                                          "shrink": "MuiInputLabel-shrink",
                                                                        }
                                                                      }
                                                                    >
                                                                      <WithStyles(ForwardRef(FormLabel))
                                                                        className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-filled"
                                                                        classes={
                                                                          Object {
                                                                            "asterisk": "MuiInputLabel-asterisk",
                                                                            "disabled": "Mui-disabled",
                                                                            "error": "Mui-error",
                                                                            "focused": "Mui-focused",
                                                                            "required": "Mui-required",
                                                                          }
                                                                        }
                                                                        data-shrink={false}
                                                                      >
                                                                        <ForwardRef(FormLabel)
                                                                          className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-filled"
                                                                          classes={
                                                                            Object {
                                                                              "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                                                                              "colorSecondary": "MuiFormLabel-colorSecondary",
                                                                              "disabled": "Mui-disabled Mui-disabled",
                                                                              "error": "Mui-error Mui-error",
                                                                              "filled": "MuiFormLabel-filled",
                                                                              "focused": "Mui-focused Mui-focused",
                                                                              "required": "Mui-required Mui-required",
                                                                              "root": "MuiFormLabel-root",
                                                                            }
                                                                          }
                                                                          data-shrink={false}
                                                                        >
                                                                          <label
                                                                            className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-filled"
                                                                            data-shrink={false}
                                                                          >
                                                                            Opção 1
                                                                          </label>
                                                                        </ForwardRef(FormLabel)>
                                                                      </WithStyles(ForwardRef(FormLabel))>
                                                                    </ForwardRef(InputLabel)>
                                                                  </WithStyles(ForwardRef(InputLabel))>
                                                                  <WithStyles(ForwardRef(FilledInput))
                                                                    autoFocus={false}
                                                                    fullWidth={true}
                                                                    multiline={false}
                                                                    name="1"
                                                                    onChange={[Function]}
                                                                    value=""
                                                                  >
                                                                    <ForwardRef(FilledInput)
                                                                      autoFocus={false}
                                                                      classes={
                                                                        Object {
                                                                          "adornedEnd": "MuiFilledInput-adornedEnd",
                                                                          "adornedStart": "MuiFilledInput-adornedStart",
                                                                          "colorSecondary": "MuiFilledInput-colorSecondary",
                                                                          "disabled": "Mui-disabled",
                                                                          "error": "Mui-error",
                                                                          "focused": "Mui-focused",
                                                                          "input": "MuiFilledInput-input",
                                                                          "inputAdornedEnd": "MuiFilledInput-inputAdornedEnd",
                                                                          "inputAdornedStart": "MuiFilledInput-inputAdornedStart",
                                                                          "inputHiddenLabel": "MuiFilledInput-inputHiddenLabel",
                                                                          "inputMarginDense": "MuiFilledInput-inputMarginDense",
                                                                          "inputMultiline": "MuiFilledInput-inputMultiline",
                                                                          "marginDense": "MuiFilledInput-marginDense",
                                                                          "multiline": "MuiFilledInput-multiline",
                                                                          "root": "MuiFilledInput-root",
                                                                          "underline": "MuiFilledInput-underline",
                                                                        }
                                                                      }
                                                                      fullWidth={true}
                                                                      multiline={false}
                                                                      name="1"
                                                                      onChange={[Function]}
                                                                      value=""
                                                                    >
                                                                      <WithStyles(ForwardRef(InputBase))
                                                                        autoFocus={false}
                                                                        classes={
                                                                          Object {
                                                                            "adornedEnd": "MuiFilledInput-adornedEnd",
                                                                            "adornedStart": "MuiFilledInput-adornedStart",
                                                                            "colorSecondary": "MuiFilledInput-colorSecondary",
                                                                            "disabled": "Mui-disabled",
                                                                            "error": "Mui-error",
                                                                            "focused": "Mui-focused",
                                                                            "input": "MuiFilledInput-input",
                                                                            "inputAdornedEnd": "MuiFilledInput-inputAdornedEnd",
                                                                            "inputAdornedStart": "MuiFilledInput-inputAdornedStart",
                                                                            "inputHiddenLabel": "MuiFilledInput-inputHiddenLabel",
                                                                            "inputMarginDense": "MuiFilledInput-inputMarginDense",
                                                                            "inputMultiline": "MuiFilledInput-inputMultiline",
                                                                            "marginDense": "MuiFilledInput-marginDense",
                                                                            "multiline": "MuiFilledInput-multiline",
                                                                            "root": "MuiFilledInput-root MuiFilledInput-underline",
                                                                            "underline": null,
                                                                          }
                                                                        }
                                                                        fullWidth={true}
                                                                        inputComponent="input"
                                                                        multiline={false}
                                                                        name="1"
                                                                        onChange={[Function]}
                                                                        type="text"
                                                                        value=""
                                                                      >
                                                                        <ForwardRef(InputBase)
                                                                          autoFocus={false}
                                                                          classes={
                                                                            Object {
                                                                              "adornedEnd": "MuiInputBase-adornedEnd MuiFilledInput-adornedEnd",
                                                                              "adornedStart": "MuiInputBase-adornedStart MuiFilledInput-adornedStart",
                                                                              "colorSecondary": "MuiInputBase-colorSecondary MuiFilledInput-colorSecondary",
                                                                              "disabled": "Mui-disabled Mui-disabled",
                                                                              "error": "Mui-error Mui-error",
                                                                              "focused": "Mui-focused Mui-focused",
                                                                              "formControl": "MuiInputBase-formControl",
                                                                              "fullWidth": "MuiInputBase-fullWidth",
                                                                              "input": "MuiInputBase-input MuiFilledInput-input",
                                                                              "inputAdornedEnd": "MuiInputBase-inputAdornedEnd MuiFilledInput-inputAdornedEnd",
                                                                              "inputAdornedStart": "MuiInputBase-inputAdornedStart MuiFilledInput-inputAdornedStart",
                                                                              "inputHiddenLabel": "MuiInputBase-inputHiddenLabel MuiFilledInput-inputHiddenLabel",
                                                                              "inputMarginDense": "MuiInputBase-inputMarginDense MuiFilledInput-inputMarginDense",
                                                                              "inputMultiline": "MuiInputBase-inputMultiline MuiFilledInput-inputMultiline",
                                                                              "inputTypeSearch": "MuiInputBase-inputTypeSearch",
                                                                              "marginDense": "MuiInputBase-marginDense MuiFilledInput-marginDense",
                                                                              "multiline": "MuiInputBase-multiline MuiFilledInput-multiline",
                                                                              "root": "MuiInputBase-root MuiFilledInput-root MuiFilledInput-underline",
                                                                            }
                                                                          }
                                                                          fullWidth={true}
                                                                          inputComponent="input"
                                                                          multiline={false}
                                                                          name="1"
                                                                          onChange={[Function]}
                                                                          type="text"
                                                                          value=""
                                                                        >
                                                                          <div
                                                                            className="MuiInputBase-root MuiFilledInput-root MuiFilledInput-underline MuiInputBase-fullWidth MuiInputBase-formControl"
                                                                            onClick={[Function]}
                                                                          >
                                                                            <input
                                                                              aria-invalid={false}
                                                                              autoFocus={false}
                                                                              className="MuiInputBase-input MuiFilledInput-input"
                                                                              disabled={false}
                                                                              name="1"
                                                                              onAnimationStart={[Function]}
                                                                              onBlur={[Function]}
                                                                              onChange={[Function]}
                                                                              onFocus={[Function]}
                                                                              required={false}
                                                                              type="text"
                                                                              value=""
                                                                            />
                                                                          </div>
                                                                        </ForwardRef(InputBase)>
                                                                      </WithStyles(ForwardRef(InputBase))>
                                                                    </ForwardRef(FilledInput)>
                                                                  </WithStyles(ForwardRef(FilledInput))>
                                                                </div>
                                                              </ForwardRef(FormControl)>
                                                            </WithStyles(ForwardRef(FormControl))>
                                                          </ForwardRef(TextField)>
                                                        </WithStyles(ForwardRef(TextField))>
                                                        <WithStyles(ForwardRef(TextField))
                                                          fullWidth={true}
                                                          label="Opção 2"
                                                          name="2"
                                                          onChange={[Function]}
                                                          value=""
                                                          variant="filled"
                                                        >
                                                          <ForwardRef(TextField)
                                                            classes={
                                                              Object {
                                                                "root": "MuiTextField-root",
                                                              }
                                                            }
                                                            fullWidth={true}
                                                            label="Opção 2"
                                                            name="2"
                                                            onChange={[Function]}
                                                            value=""
                                                            variant="filled"
                                                          >
                                                            <WithStyles(ForwardRef(FormControl))
                                                              className="MuiTextField-root"
                                                              color="primary"
                                                              disabled={false}
                                                              error={false}
                                                              fullWidth={true}
                                                              required={false}
                                                              variant="filled"
                                                            >
                                                              <ForwardRef(FormControl)
                                                                className="MuiTextField-root"
                                                                classes={
                                                                  Object {
                                                                    "fullWidth": "MuiFormControl-fullWidth",
                                                                    "marginDense": "MuiFormControl-marginDense",
                                                                    "marginNormal": "MuiFormControl-marginNormal",
                                                                    "root": "MuiFormControl-root",
                                                                  }
                                                                }
                                                                color="primary"
                                                                disabled={false}
                                                                error={false}
                                                                fullWidth={true}
                                                                required={false}
                                                                variant="filled"
                                                              >
                                                                <div
                                                                  className="MuiFormControl-root MuiTextField-root MuiFormControl-fullWidth"
                                                                >
                                                                  <WithStyles(ForwardRef(InputLabel))>
                                                                    <ForwardRef(InputLabel)
                                                                      classes={
                                                                        Object {
                                                                          "animated": "MuiInputLabel-animated",
                                                                          "asterisk": "MuiInputLabel-asterisk",
                                                                          "disabled": "Mui-disabled",
                                                                          "error": "Mui-error",
                                                                          "filled": "MuiInputLabel-filled",
                                                                          "focused": "Mui-focused",
                                                                          "formControl": "MuiInputLabel-formControl",
                                                                          "marginDense": "MuiInputLabel-marginDense",
                                                                          "outlined": "MuiInputLabel-outlined",
                                                                          "required": "Mui-required",
                                                                          "root": "MuiInputLabel-root",
                                                                          "shrink": "MuiInputLabel-shrink",
                                                                        }
                                                                      }
                                                                    >
                                                                      <WithStyles(ForwardRef(FormLabel))
                                                                        className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-filled"
                                                                        classes={
                                                                          Object {
                                                                            "asterisk": "MuiInputLabel-asterisk",
                                                                            "disabled": "Mui-disabled",
                                                                            "error": "Mui-error",
                                                                            "focused": "Mui-focused",
                                                                            "required": "Mui-required",
                                                                          }
                                                                        }
                                                                        data-shrink={false}
                                                                      >
                                                                        <ForwardRef(FormLabel)
                                                                          className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-filled"
                                                                          classes={
                                                                            Object {
                                                                              "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                                                                              "colorSecondary": "MuiFormLabel-colorSecondary",
                                                                              "disabled": "Mui-disabled Mui-disabled",
                                                                              "error": "Mui-error Mui-error",
                                                                              "filled": "MuiFormLabel-filled",
                                                                              "focused": "Mui-focused Mui-focused",
                                                                              "required": "Mui-required Mui-required",
                                                                              "root": "MuiFormLabel-root",
                                                                            }
                                                                          }
                                                                          data-shrink={false}
                                                                        >
                                                                          <label
                                                                            className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-filled"
                                                                            data-shrink={false}
                                                                          >
                                                                            Opção 2
                                                                          </label>
                                                                        </ForwardRef(FormLabel)>
                                                                      </WithStyles(ForwardRef(FormLabel))>
                                                                    </ForwardRef(InputLabel)>
                                                                  </WithStyles(ForwardRef(InputLabel))>
                                                                  <WithStyles(ForwardRef(FilledInput))
                                                                    autoFocus={false}
                                                                    fullWidth={true}
                                                                    multiline={false}
                                                                    name="2"
                                                                    onChange={[Function]}
                                                                    value=""
                                                                  >
                                                                    <ForwardRef(FilledInput)
                                                                      autoFocus={false}
                                                                      classes={
                                                                        Object {
                                                                          "adornedEnd": "MuiFilledInput-adornedEnd",
                                                                          "adornedStart": "MuiFilledInput-adornedStart",
                                                                          "colorSecondary": "MuiFilledInput-colorSecondary",
                                                                          "disabled": "Mui-disabled",
                                                                          "error": "Mui-error",
                                                                          "focused": "Mui-focused",
                                                                          "input": "MuiFilledInput-input",
                                                                          "inputAdornedEnd": "MuiFilledInput-inputAdornedEnd",
                                                                          "inputAdornedStart": "MuiFilledInput-inputAdornedStart",
                                                                          "inputHiddenLabel": "MuiFilledInput-inputHiddenLabel",
                                                                          "inputMarginDense": "MuiFilledInput-inputMarginDense",
                                                                          "inputMultiline": "MuiFilledInput-inputMultiline",
                                                                          "marginDense": "MuiFilledInput-marginDense",
                                                                          "multiline": "MuiFilledInput-multiline",
                                                                          "root": "MuiFilledInput-root",
                                                                          "underline": "MuiFilledInput-underline",
                                                                        }
                                                                      }
                                                                      fullWidth={true}
                                                                      multiline={false}
                                                                      name="2"
                                                                      onChange={[Function]}
                                                                      value=""
                                                                    >
                                                                      <WithStyles(ForwardRef(InputBase))
                                                                        autoFocus={false}
                                                                        classes={
                                                                          Object {
                                                                            "adornedEnd": "MuiFilledInput-adornedEnd",
                                                                            "adornedStart": "MuiFilledInput-adornedStart",
                                                                            "colorSecondary": "MuiFilledInput-colorSecondary",
                                                                            "disabled": "Mui-disabled",
                                                                            "error": "Mui-error",
                                                                            "focused": "Mui-focused",
                                                                            "input": "MuiFilledInput-input",
                                                                            "inputAdornedEnd": "MuiFilledInput-inputAdornedEnd",
                                                                            "inputAdornedStart": "MuiFilledInput-inputAdornedStart",
                                                                            "inputHiddenLabel": "MuiFilledInput-inputHiddenLabel",
                                                                            "inputMarginDense": "MuiFilledInput-inputMarginDense",
                                                                            "inputMultiline": "MuiFilledInput-inputMultiline",
                                                                            "marginDense": "MuiFilledInput-marginDense",
                                                                            "multiline": "MuiFilledInput-multiline",
                                                                            "root": "MuiFilledInput-root MuiFilledInput-underline",
                                                                            "underline": null,
                                                                          }
                                                                        }
                                                                        fullWidth={true}
                                                                        inputComponent="input"
                                                                        multiline={false}
                                                                        name="2"
                                                                        onChange={[Function]}
                                                                        type="text"
                                                                        value=""
                                                                      >
                                                                        <ForwardRef(InputBase)
                                                                          autoFocus={false}
                                                                          classes={
                                                                            Object {
                                                                              "adornedEnd": "MuiInputBase-adornedEnd MuiFilledInput-adornedEnd",
                                                                              "adornedStart": "MuiInputBase-adornedStart MuiFilledInput-adornedStart",
                                                                              "colorSecondary": "MuiInputBase-colorSecondary MuiFilledInput-colorSecondary",
                                                                              "disabled": "Mui-disabled Mui-disabled",
                                                                              "error": "Mui-error Mui-error",
                                                                              "focused": "Mui-focused Mui-focused",
                                                                              "formControl": "MuiInputBase-formControl",
                                                                              "fullWidth": "MuiInputBase-fullWidth",
                                                                              "input": "MuiInputBase-input MuiFilledInput-input",
                                                                              "inputAdornedEnd": "MuiInputBase-inputAdornedEnd MuiFilledInput-inputAdornedEnd",
                                                                              "inputAdornedStart": "MuiInputBase-inputAdornedStart MuiFilledInput-inputAdornedStart",
                                                                              "inputHiddenLabel": "MuiInputBase-inputHiddenLabel MuiFilledInput-inputHiddenLabel",
                                                                              "inputMarginDense": "MuiInputBase-inputMarginDense MuiFilledInput-inputMarginDense",
                                                                              "inputMultiline": "MuiInputBase-inputMultiline MuiFilledInput-inputMultiline",
                                                                              "inputTypeSearch": "MuiInputBase-inputTypeSearch",
                                                                              "marginDense": "MuiInputBase-marginDense MuiFilledInput-marginDense",
                                                                              "multiline": "MuiInputBase-multiline MuiFilledInput-multiline",
                                                                              "root": "MuiInputBase-root MuiFilledInput-root MuiFilledInput-underline",
                                                                            }
                                                                          }
                                                                          fullWidth={true}
                                                                          inputComponent="input"
                                                                          multiline={false}
                                                                          name="2"
                                                                          onChange={[Function]}
                                                                          type="text"
                                                                          value=""
                                                                        >
                                                                          <div
                                                                            className="MuiInputBase-root MuiFilledInput-root MuiFilledInput-underline MuiInputBase-fullWidth MuiInputBase-formControl"
                                                                            onClick={[Function]}
                                                                          >
                                                                            <input
                                                                              aria-invalid={false}
                                                                              autoFocus={false}
                                                                              className="MuiInputBase-input MuiFilledInput-input"
                                                                              disabled={false}
                                                                              name="2"
                                                                              onAnimationStart={[Function]}
                                                                              onBlur={[Function]}
                                                                              onChange={[Function]}
                                                                              onFocus={[Function]}
                                                                              required={false}
                                                                              type="text"
                                                                              value=""
                                                                            />
                                                                          </div>
                                                                        </ForwardRef(InputBase)>
                                                                      </WithStyles(ForwardRef(InputBase))>
                                                                    </ForwardRef(FilledInput)>
                                                                  </WithStyles(ForwardRef(FilledInput))>
                                                                </div>
                                                              </ForwardRef(FormControl)>
                                                            </WithStyles(ForwardRef(FormControl))>
                                                          </ForwardRef(TextField)>
                                                        </WithStyles(ForwardRef(TextField))>
                                                        <WithStyles(ForwardRef(TextField))
                                                          fullWidth={true}
                                                          label="Opção 3"
                                                          name="3"
                                                          onChange={[Function]}
                                                          value=""
                                                          variant="filled"
                                                        >
                                                          <ForwardRef(TextField)
                                                            classes={
                                                              Object {
                                                                "root": "MuiTextField-root",
                                                              }
                                                            }
                                                            fullWidth={true}
                                                            label="Opção 3"
                                                            name="3"
                                                            onChange={[Function]}
                                                            value=""
                                                            variant="filled"
                                                          >
                                                            <WithStyles(ForwardRef(FormControl))
                                                              className="MuiTextField-root"
                                                              color="primary"
                                                              disabled={false}
                                                              error={false}
                                                              fullWidth={true}
                                                              required={false}
                                                              variant="filled"
                                                            >
                                                              <ForwardRef(FormControl)
                                                                className="MuiTextField-root"
                                                                classes={
                                                                  Object {
                                                                    "fullWidth": "MuiFormControl-fullWidth",
                                                                    "marginDense": "MuiFormControl-marginDense",
                                                                    "marginNormal": "MuiFormControl-marginNormal",
                                                                    "root": "MuiFormControl-root",
                                                                  }
                                                                }
                                                                color="primary"
                                                                disabled={false}
                                                                error={false}
                                                                fullWidth={true}
                                                                required={false}
                                                                variant="filled"
                                                              >
                                                                <div
                                                                  className="MuiFormControl-root MuiTextField-root MuiFormControl-fullWidth"
                                                                >
                                                                  <WithStyles(ForwardRef(InputLabel))>
                                                                    <ForwardRef(InputLabel)
                                                                      classes={
                                                                        Object {
                                                                          "animated": "MuiInputLabel-animated",
                                                                          "asterisk": "MuiInputLabel-asterisk",
                                                                          "disabled": "Mui-disabled",
                                                                          "error": "Mui-error",
                                                                          "filled": "MuiInputLabel-filled",
                                                                          "focused": "Mui-focused",
                                                                          "formControl": "MuiInputLabel-formControl",
                                                                          "marginDense": "MuiInputLabel-marginDense",
                                                                          "outlined": "MuiInputLabel-outlined",
                                                                          "required": "Mui-required",
                                                                          "root": "MuiInputLabel-root",
                                                                          "shrink": "MuiInputLabel-shrink",
                                                                        }
                                                                      }
                                                                    >
                                                                      <WithStyles(ForwardRef(FormLabel))
                                                                        className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-filled"
                                                                        classes={
                                                                          Object {
                                                                            "asterisk": "MuiInputLabel-asterisk",
                                                                            "disabled": "Mui-disabled",
                                                                            "error": "Mui-error",
                                                                            "focused": "Mui-focused",
                                                                            "required": "Mui-required",
                                                                          }
                                                                        }
                                                                        data-shrink={false}
                                                                      >
                                                                        <ForwardRef(FormLabel)
                                                                          className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-filled"
                                                                          classes={
                                                                            Object {
                                                                              "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                                                                              "colorSecondary": "MuiFormLabel-colorSecondary",
                                                                              "disabled": "Mui-disabled Mui-disabled",
                                                                              "error": "Mui-error Mui-error",
                                                                              "filled": "MuiFormLabel-filled",
                                                                              "focused": "Mui-focused Mui-focused",
                                                                              "required": "Mui-required Mui-required",
                                                                              "root": "MuiFormLabel-root",
                                                                            }
                                                                          }
                                                                          data-shrink={false}
                                                                        >
                                                                          <label
                                                                            className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-filled"
                                                                            data-shrink={false}
                                                                          >
                                                                            Opção 3
                                                                          </label>
                                                                        </ForwardRef(FormLabel)>
                                                                      </WithStyles(ForwardRef(FormLabel))>
                                                                    </ForwardRef(InputLabel)>
                                                                  </WithStyles(ForwardRef(InputLabel))>
                                                                  <WithStyles(ForwardRef(FilledInput))
                                                                    autoFocus={false}
                                                                    fullWidth={true}
                                                                    multiline={false}
                                                                    name="3"
                                                                    onChange={[Function]}
                                                                    value=""
                                                                  >
                                                                    <ForwardRef(FilledInput)
                                                                      autoFocus={false}
                                                                      classes={
                                                                        Object {
                                                                          "adornedEnd": "MuiFilledInput-adornedEnd",
                                                                          "adornedStart": "MuiFilledInput-adornedStart",
                                                                          "colorSecondary": "MuiFilledInput-colorSecondary",
                                                                          "disabled": "Mui-disabled",
                                                                          "error": "Mui-error",
                                                                          "focused": "Mui-focused",
                                                                          "input": "MuiFilledInput-input",
                                                                          "inputAdornedEnd": "MuiFilledInput-inputAdornedEnd",
                                                                          "inputAdornedStart": "MuiFilledInput-inputAdornedStart",
                                                                          "inputHiddenLabel": "MuiFilledInput-inputHiddenLabel",
                                                                          "inputMarginDense": "MuiFilledInput-inputMarginDense",
                                                                          "inputMultiline": "MuiFilledInput-inputMultiline",
                                                                          "marginDense": "MuiFilledInput-marginDense",
                                                                          "multiline": "MuiFilledInput-multiline",
                                                                          "root": "MuiFilledInput-root",
                                                                          "underline": "MuiFilledInput-underline",
                                                                        }
                                                                      }
                                                                      fullWidth={true}
                                                                      multiline={false}
                                                                      name="3"
                                                                      onChange={[Function]}
                                                                      value=""
                                                                    >
                                                                      <WithStyles(ForwardRef(InputBase))
                                                                        autoFocus={false}
                                                                        classes={
                                                                          Object {
                                                                            "adornedEnd": "MuiFilledInput-adornedEnd",
                                                                            "adornedStart": "MuiFilledInput-adornedStart",
                                                                            "colorSecondary": "MuiFilledInput-colorSecondary",
                                                                            "disabled": "Mui-disabled",
                                                                            "error": "Mui-error",
                                                                            "focused": "Mui-focused",
                                                                            "input": "MuiFilledInput-input",
                                                                            "inputAdornedEnd": "MuiFilledInput-inputAdornedEnd",
                                                                            "inputAdornedStart": "MuiFilledInput-inputAdornedStart",
                                                                            "inputHiddenLabel": "MuiFilledInput-inputHiddenLabel",
                                                                            "inputMarginDense": "MuiFilledInput-inputMarginDense",
                                                                            "inputMultiline": "MuiFilledInput-inputMultiline",
                                                                            "marginDense": "MuiFilledInput-marginDense",
                                                                            "multiline": "MuiFilledInput-multiline",
                                                                            "root": "MuiFilledInput-root MuiFilledInput-underline",
                                                                            "underline": null,
                                                                          }
                                                                        }
                                                                        fullWidth={true}
                                                                        inputComponent="input"
                                                                        multiline={false}
                                                                        name="3"
                                                                        onChange={[Function]}
                                                                        type="text"
                                                                        value=""
                                                                      >
                                                                        <ForwardRef(InputBase)
                                                                          autoFocus={false}
                                                                          classes={
                                                                            Object {
                                                                              "adornedEnd": "MuiInputBase-adornedEnd MuiFilledInput-adornedEnd",
                                                                              "adornedStart": "MuiInputBase-adornedStart MuiFilledInput-adornedStart",
                                                                              "colorSecondary": "MuiInputBase-colorSecondary MuiFilledInput-colorSecondary",
                                                                              "disabled": "Mui-disabled Mui-disabled",
                                                                              "error": "Mui-error Mui-error",
                                                                              "focused": "Mui-focused Mui-focused",
                                                                              "formControl": "MuiInputBase-formControl",
                                                                              "fullWidth": "MuiInputBase-fullWidth",
                                                                              "input": "MuiInputBase-input MuiFilledInput-input",
                                                                              "inputAdornedEnd": "MuiInputBase-inputAdornedEnd MuiFilledInput-inputAdornedEnd",
                                                                              "inputAdornedStart": "MuiInputBase-inputAdornedStart MuiFilledInput-inputAdornedStart",
                                                                              "inputHiddenLabel": "MuiInputBase-inputHiddenLabel MuiFilledInput-inputHiddenLabel",
                                                                              "inputMarginDense": "MuiInputBase-inputMarginDense MuiFilledInput-inputMarginDense",
                                                                              "inputMultiline": "MuiInputBase-inputMultiline MuiFilledInput-inputMultiline",
                                                                              "inputTypeSearch": "MuiInputBase-inputTypeSearch",
                                                                              "marginDense": "MuiInputBase-marginDense MuiFilledInput-marginDense",
                                                                              "multiline": "MuiInputBase-multiline MuiFilledInput-multiline",
                                                                              "root": "MuiInputBase-root MuiFilledInput-root MuiFilledInput-underline",
                                                                            }
                                                                          }
                                                                          fullWidth={true}
                                                                          inputComponent="input"
                                                                          multiline={false}
                                                                          name="3"
                                                                          onChange={[Function]}
                                                                          type="text"
                                                                          value=""
                                                                        >
                                                                          <div
                                                                            className="MuiInputBase-root MuiFilledInput-root MuiFilledInput-underline MuiInputBase-fullWidth MuiInputBase-formControl"
                                                                            onClick={[Function]}
                                                                          >
                                                                            <input
                                                                              aria-invalid={false}
                                                                              autoFocus={false}
                                                                              className="MuiInputBase-input MuiFilledInput-input"
                                                                              disabled={false}
                                                                              name="3"
                                                                              onAnimationStart={[Function]}
                                                                              onBlur={[Function]}
                                                                              onChange={[Function]}
                                                                              onFocus={[Function]}
                                                                              required={false}
                                                                              type="text"
                                                                              value=""
                                                                            />
                                                                          </div>
                                                                        </ForwardRef(InputBase)>
                                                                      </WithStyles(ForwardRef(InputBase))>
                                                                    </ForwardRef(FilledInput)>
                                                                  </WithStyles(ForwardRef(FilledInput))>
                                                                </div>
                                                              </ForwardRef(FormControl)>
                                                            </WithStyles(ForwardRef(FormControl))>
                                                          </ForwardRef(TextField)>
                                                        </WithStyles(ForwardRef(TextField))>
                                                        <WithStyles(ForwardRef(TextField))
                                                          fullWidth={true}
                                                          label="Opção 4"
                                                          name="4"
                                                          onChange={[Function]}
                                                          value=""
                                                          variant="filled"
                                                        >
                                                          <ForwardRef(TextField)
                                                            classes={
                                                              Object {
                                                                "root": "MuiTextField-root",
                                                              }
                                                            }
                                                            fullWidth={true}
                                                            label="Opção 4"
                                                            name="4"
                                                            onChange={[Function]}
                                                            value=""
                                                            variant="filled"
                                                          >
                                                            <WithStyles(ForwardRef(FormControl))
                                                              className="MuiTextField-root"
                                                              color="primary"
                                                              disabled={false}
                                                              error={false}
                                                              fullWidth={true}
                                                              required={false}
                                                              variant="filled"
                                                            >
                                                              <ForwardRef(FormControl)
                                                                className="MuiTextField-root"
                                                                classes={
                                                                  Object {
                                                                    "fullWidth": "MuiFormControl-fullWidth",
                                                                    "marginDense": "MuiFormControl-marginDense",
                                                                    "marginNormal": "MuiFormControl-marginNormal",
                                                                    "root": "MuiFormControl-root",
                                                                  }
                                                                }
                                                                color="primary"
                                                                disabled={false}
                                                                error={false}
                                                                fullWidth={true}
                                                                required={false}
                                                                variant="filled"
                                                              >
                                                                <div
                                                                  className="MuiFormControl-root MuiTextField-root MuiFormControl-fullWidth"
                                                                >
                                                                  <WithStyles(ForwardRef(InputLabel))>
                                                                    <ForwardRef(InputLabel)
                                                                      classes={
                                                                        Object {
                                                                          "animated": "MuiInputLabel-animated",
                                                                          "asterisk": "MuiInputLabel-asterisk",
                                                                          "disabled": "Mui-disabled",
                                                                          "error": "Mui-error",
                                                                          "filled": "MuiInputLabel-filled",
                                                                          "focused": "Mui-focused",
                                                                          "formControl": "MuiInputLabel-formControl",
                                                                          "marginDense": "MuiInputLabel-marginDense",
                                                                          "outlined": "MuiInputLabel-outlined",
                                                                          "required": "Mui-required",
                                                                          "root": "MuiInputLabel-root",
                                                                          "shrink": "MuiInputLabel-shrink",
                                                                        }
                                                                      }
                                                                    >
                                                                      <WithStyles(ForwardRef(FormLabel))
                                                                        className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-filled"
                                                                        classes={
                                                                          Object {
                                                                            "asterisk": "MuiInputLabel-asterisk",
                                                                            "disabled": "Mui-disabled",
                                                                            "error": "Mui-error",
                                                                            "focused": "Mui-focused",
                                                                            "required": "Mui-required",
                                                                          }
                                                                        }
                                                                        data-shrink={false}
                                                                      >
                                                                        <ForwardRef(FormLabel)
                                                                          className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-filled"
                                                                          classes={
                                                                            Object {
                                                                              "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                                                                              "colorSecondary": "MuiFormLabel-colorSecondary",
                                                                              "disabled": "Mui-disabled Mui-disabled",
                                                                              "error": "Mui-error Mui-error",
                                                                              "filled": "MuiFormLabel-filled",
                                                                              "focused": "Mui-focused Mui-focused",
                                                                              "required": "Mui-required Mui-required",
                                                                              "root": "MuiFormLabel-root",
                                                                            }
                                                                          }
                                                                          data-shrink={false}
                                                                        >
                                                                          <label
                                                                            className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-filled"
                                                                            data-shrink={false}
                                                                          >
                                                                            Opção 4
                                                                          </label>
                                                                        </ForwardRef(FormLabel)>
                                                                      </WithStyles(ForwardRef(FormLabel))>
                                                                    </ForwardRef(InputLabel)>
                                                                  </WithStyles(ForwardRef(InputLabel))>
                                                                  <WithStyles(ForwardRef(FilledInput))
                                                                    autoFocus={false}
                                                                    fullWidth={true}
                                                                    multiline={false}
                                                                    name="4"
                                                                    onChange={[Function]}
                                                                    value=""
                                                                  >
                                                                    <ForwardRef(FilledInput)
                                                                      autoFocus={false}
                                                                      classes={
                                                                        Object {
                                                                          "adornedEnd": "MuiFilledInput-adornedEnd",
                                                                          "adornedStart": "MuiFilledInput-adornedStart",
                                                                          "colorSecondary": "MuiFilledInput-colorSecondary",
                                                                          "disabled": "Mui-disabled",
                                                                          "error": "Mui-error",
                                                                          "focused": "Mui-focused",
                                                                          "input": "MuiFilledInput-input",
                                                                          "inputAdornedEnd": "MuiFilledInput-inputAdornedEnd",
                                                                          "inputAdornedStart": "MuiFilledInput-inputAdornedStart",
                                                                          "inputHiddenLabel": "MuiFilledInput-inputHiddenLabel",
                                                                          "inputMarginDense": "MuiFilledInput-inputMarginDense",
                                                                          "inputMultiline": "MuiFilledInput-inputMultiline",
                                                                          "marginDense": "MuiFilledInput-marginDense",
                                                                          "multiline": "MuiFilledInput-multiline",
                                                                          "root": "MuiFilledInput-root",
                                                                          "underline": "MuiFilledInput-underline",
                                                                        }
                                                                      }
                                                                      fullWidth={true}
                                                                      multiline={false}
                                                                      name="4"
                                                                      onChange={[Function]}
                                                                      value=""
                                                                    >
                                                                      <WithStyles(ForwardRef(InputBase))
                                                                        autoFocus={false}
                                                                        classes={
                                                                          Object {
                                                                            "adornedEnd": "MuiFilledInput-adornedEnd",
                                                                            "adornedStart": "MuiFilledInput-adornedStart",
                                                                            "colorSecondary": "MuiFilledInput-colorSecondary",
                                                                            "disabled": "Mui-disabled",
                                                                            "error": "Mui-error",
                                                                            "focused": "Mui-focused",
                                                                            "input": "MuiFilledInput-input",
                                                                            "inputAdornedEnd": "MuiFilledInput-inputAdornedEnd",
                                                                            "inputAdornedStart": "MuiFilledInput-inputAdornedStart",
                                                                            "inputHiddenLabel": "MuiFilledInput-inputHiddenLabel",
                                                                            "inputMarginDense": "MuiFilledInput-inputMarginDense",
                                                                            "inputMultiline": "MuiFilledInput-inputMultiline",
                                                                            "marginDense": "MuiFilledInput-marginDense",
                                                                            "multiline": "MuiFilledInput-multiline",
                                                                            "root": "MuiFilledInput-root MuiFilledInput-underline",
                                                                            "underline": null,
                                                                          }
                                                                        }
                                                                        fullWidth={true}
                                                                        inputComponent="input"
                                                                        multiline={false}
                                                                        name="4"
                                                                        onChange={[Function]}
                                                                        type="text"
                                                                        value=""
                                                                      >
                                                                        <ForwardRef(InputBase)
                                                                          autoFocus={false}
                                                                          classes={
                                                                            Object {
                                                                              "adornedEnd": "MuiInputBase-adornedEnd MuiFilledInput-adornedEnd",
                                                                              "adornedStart": "MuiInputBase-adornedStart MuiFilledInput-adornedStart",
                                                                              "colorSecondary": "MuiInputBase-colorSecondary MuiFilledInput-colorSecondary",
                                                                              "disabled": "Mui-disabled Mui-disabled",
                                                                              "error": "Mui-error Mui-error",
                                                                              "focused": "Mui-focused Mui-focused",
                                                                              "formControl": "MuiInputBase-formControl",
                                                                              "fullWidth": "MuiInputBase-fullWidth",
                                                                              "input": "MuiInputBase-input MuiFilledInput-input",
                                                                              "inputAdornedEnd": "MuiInputBase-inputAdornedEnd MuiFilledInput-inputAdornedEnd",
                                                                              "inputAdornedStart": "MuiInputBase-inputAdornedStart MuiFilledInput-inputAdornedStart",
                                                                              "inputHiddenLabel": "MuiInputBase-inputHiddenLabel MuiFilledInput-inputHiddenLabel",
                                                                              "inputMarginDense": "MuiInputBase-inputMarginDense MuiFilledInput-inputMarginDense",
                                                                              "inputMultiline": "MuiInputBase-inputMultiline MuiFilledInput-inputMultiline",
                                                                              "inputTypeSearch": "MuiInputBase-inputTypeSearch",
                                                                              "marginDense": "MuiInputBase-marginDense MuiFilledInput-marginDense",
                                                                              "multiline": "MuiInputBase-multiline MuiFilledInput-multiline",
                                                                              "root": "MuiInputBase-root MuiFilledInput-root MuiFilledInput-underline",
                                                                            }
                                                                          }
                                                                          fullWidth={true}
                                                                          inputComponent="input"
                                                                          multiline={false}
                                                                          name="4"
                                                                          onChange={[Function]}
                                                                          type="text"
                                                                          value=""
                                                                        >
                                                                          <div
                                                                            className="MuiInputBase-root MuiFilledInput-root MuiFilledInput-underline MuiInputBase-fullWidth MuiInputBase-formControl"
                                                                            onClick={[Function]}
                                                                          >
                                                                            <input
                                                                              aria-invalid={false}
                                                                              autoFocus={false}
                                                                              className="MuiInputBase-input MuiFilledInput-input"
                                                                              disabled={false}
                                                                              name="4"
                                                                              onAnimationStart={[Function]}
                                                                              onBlur={[Function]}
                                                                              onChange={[Function]}
                                                                              onFocus={[Function]}
                                                                              required={false}
                                                                              type="text"
                                                                              value=""
                                                                            />
                                                                          </div>
                                                                        </ForwardRef(InputBase)>
                                                                      </WithStyles(ForwardRef(InputBase))>
                                                                    </ForwardRef(FilledInput)>
                                                                  </WithStyles(ForwardRef(FilledInput))>
                                                                </div>
                                                              </ForwardRef(FormControl)>
                                                            </WithStyles(ForwardRef(FormControl))>
                                                          </ForwardRef(TextField)>
                                                        </WithStyles(ForwardRef(TextField))>
                                                        <WithStyles(ForwardRef(TextField))
                                                          fullWidth={true}
                                                          label="Opção 5"
                                                          name="5"
                                                          onChange={[Function]}
                                                          value=""
                                                          variant="filled"
                                                        >
                                                          <ForwardRef(TextField)
                                                            classes={
                                                              Object {
                                                                "root": "MuiTextField-root",
                                                              }
                                                            }
                                                            fullWidth={true}
                                                            label="Opção 5"
                                                            name="5"
                                                            onChange={[Function]}
                                                            value=""
                                                            variant="filled"
                                                          >
                                                            <WithStyles(ForwardRef(FormControl))
                                                              className="MuiTextField-root"
                                                              color="primary"
                                                              disabled={false}
                                                              error={false}
                                                              fullWidth={true}
                                                              required={false}
                                                              variant="filled"
                                                            >
                                                              <ForwardRef(FormControl)
                                                                className="MuiTextField-root"
                                                                classes={
                                                                  Object {
                                                                    "fullWidth": "MuiFormControl-fullWidth",
                                                                    "marginDense": "MuiFormControl-marginDense",
                                                                    "marginNormal": "MuiFormControl-marginNormal",
                                                                    "root": "MuiFormControl-root",
                                                                  }
                                                                }
                                                                color="primary"
                                                                disabled={false}
                                                                error={false}
                                                                fullWidth={true}
                                                                required={false}
                                                                variant="filled"
                                                              >
                                                                <div
                                                                  className="MuiFormControl-root MuiTextField-root MuiFormControl-fullWidth"
                                                                >
                                                                  <WithStyles(ForwardRef(InputLabel))>
                                                                    <ForwardRef(InputLabel)
                                                                      classes={
                                                                        Object {
                                                                          "animated": "MuiInputLabel-animated",
                                                                          "asterisk": "MuiInputLabel-asterisk",
                                                                          "disabled": "Mui-disabled",
                                                                          "error": "Mui-error",
                                                                          "filled": "MuiInputLabel-filled",
                                                                          "focused": "Mui-focused",
                                                                          "formControl": "MuiInputLabel-formControl",
                                                                          "marginDense": "MuiInputLabel-marginDense",
                                                                          "outlined": "MuiInputLabel-outlined",
                                                                          "required": "Mui-required",
                                                                          "root": "MuiInputLabel-root",
                                                                          "shrink": "MuiInputLabel-shrink",
                                                                        }
                                                                      }
                                                                    >
                                                                      <WithStyles(ForwardRef(FormLabel))
                                                                        className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-filled"
                                                                        classes={
                                                                          Object {
                                                                            "asterisk": "MuiInputLabel-asterisk",
                                                                            "disabled": "Mui-disabled",
                                                                            "error": "Mui-error",
                                                                            "focused": "Mui-focused",
                                                                            "required": "Mui-required",
                                                                          }
                                                                        }
                                                                        data-shrink={false}
                                                                      >
                                                                        <ForwardRef(FormLabel)
                                                                          className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-filled"
                                                                          classes={
                                                                            Object {
                                                                              "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                                                                              "colorSecondary": "MuiFormLabel-colorSecondary",
                                                                              "disabled": "Mui-disabled Mui-disabled",
                                                                              "error": "Mui-error Mui-error",
                                                                              "filled": "MuiFormLabel-filled",
                                                                              "focused": "Mui-focused Mui-focused",
                                                                              "required": "Mui-required Mui-required",
                                                                              "root": "MuiFormLabel-root",
                                                                            }
                                                                          }
                                                                          data-shrink={false}
                                                                        >
                                                                          <label
                                                                            className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-filled"
                                                                            data-shrink={false}
                                                                          >
                                                                            Opção 5
                                                                          </label>
                                                                        </ForwardRef(FormLabel)>
                                                                      </WithStyles(ForwardRef(FormLabel))>
                                                                    </ForwardRef(InputLabel)>
                                                                  </WithStyles(ForwardRef(InputLabel))>
                                                                  <WithStyles(ForwardRef(FilledInput))
                                                                    autoFocus={false}
                                                                    fullWidth={true}
                                                                    multiline={false}
                                                                    name="5"
                                                                    onChange={[Function]}
                                                                    value=""
                                                                  >
                                                                    <ForwardRef(FilledInput)
                                                                      autoFocus={false}
                                                                      classes={
                                                                        Object {
                                                                          "adornedEnd": "MuiFilledInput-adornedEnd",
                                                                          "adornedStart": "MuiFilledInput-adornedStart",
                                                                          "colorSecondary": "MuiFilledInput-colorSecondary",
                                                                          "disabled": "Mui-disabled",
                                                                          "error": "Mui-error",
                                                                          "focused": "Mui-focused",
                                                                          "input": "MuiFilledInput-input",
                                                                          "inputAdornedEnd": "MuiFilledInput-inputAdornedEnd",
                                                                          "inputAdornedStart": "MuiFilledInput-inputAdornedStart",
                                                                          "inputHiddenLabel": "MuiFilledInput-inputHiddenLabel",
                                                                          "inputMarginDense": "MuiFilledInput-inputMarginDense",
                                                                          "inputMultiline": "MuiFilledInput-inputMultiline",
                                                                          "marginDense": "MuiFilledInput-marginDense",
                                                                          "multiline": "MuiFilledInput-multiline",
                                                                          "root": "MuiFilledInput-root",
                                                                          "underline": "MuiFilledInput-underline",
                                                                        }
                                                                      }
                                                                      fullWidth={true}
                                                                      multiline={false}
                                                                      name="5"
                                                                      onChange={[Function]}
                                                                      value=""
                                                                    >
                                                                      <WithStyles(ForwardRef(InputBase))
                                                                        autoFocus={false}
                                                                        classes={
                                                                          Object {
                                                                            "adornedEnd": "MuiFilledInput-adornedEnd",
                                                                            "adornedStart": "MuiFilledInput-adornedStart",
                                                                            "colorSecondary": "MuiFilledInput-colorSecondary",
                                                                            "disabled": "Mui-disabled",
                                                                            "error": "Mui-error",
                                                                            "focused": "Mui-focused",
                                                                            "input": "MuiFilledInput-input",
                                                                            "inputAdornedEnd": "MuiFilledInput-inputAdornedEnd",
                                                                            "inputAdornedStart": "MuiFilledInput-inputAdornedStart",
                                                                            "inputHiddenLabel": "MuiFilledInput-inputHiddenLabel",
                                                                            "inputMarginDense": "MuiFilledInput-inputMarginDense",
                                                                            "inputMultiline": "MuiFilledInput-inputMultiline",
                                                                            "marginDense": "MuiFilledInput-marginDense",
                                                                            "multiline": "MuiFilledInput-multiline",
                                                                            "root": "MuiFilledInput-root MuiFilledInput-underline",
                                                                            "underline": null,
                                                                          }
                                                                        }
                                                                        fullWidth={true}
                                                                        inputComponent="input"
                                                                        multiline={false}
                                                                        name="5"
                                                                        onChange={[Function]}
                                                                        type="text"
                                                                        value=""
                                                                      >
                                                                        <ForwardRef(InputBase)
                                                                          autoFocus={false}
                                                                          classes={
                                                                            Object {
                                                                              "adornedEnd": "MuiInputBase-adornedEnd MuiFilledInput-adornedEnd",
                                                                              "adornedStart": "MuiInputBase-adornedStart MuiFilledInput-adornedStart",
                                                                              "colorSecondary": "MuiInputBase-colorSecondary MuiFilledInput-colorSecondary",
                                                                              "disabled": "Mui-disabled Mui-disabled",
                                                                              "error": "Mui-error Mui-error",
                                                                              "focused": "Mui-focused Mui-focused",
                                                                              "formControl": "MuiInputBase-formControl",
                                                                              "fullWidth": "MuiInputBase-fullWidth",
                                                                              "input": "MuiInputBase-input MuiFilledInput-input",
                                                                              "inputAdornedEnd": "MuiInputBase-inputAdornedEnd MuiFilledInput-inputAdornedEnd",
                                                                              "inputAdornedStart": "MuiInputBase-inputAdornedStart MuiFilledInput-inputAdornedStart",
                                                                              "inputHiddenLabel": "MuiInputBase-inputHiddenLabel MuiFilledInput-inputHiddenLabel",
                                                                              "inputMarginDense": "MuiInputBase-inputMarginDense MuiFilledInput-inputMarginDense",
                                                                              "inputMultiline": "MuiInputBase-inputMultiline MuiFilledInput-inputMultiline",
                                                                              "inputTypeSearch": "MuiInputBase-inputTypeSearch",
                                                                              "marginDense": "MuiInputBase-marginDense MuiFilledInput-marginDense",
                                                                              "multiline": "MuiInputBase-multiline MuiFilledInput-multiline",
                                                                              "root": "MuiInputBase-root MuiFilledInput-root MuiFilledInput-underline",
                                                                            }
                                                                          }
                                                                          fullWidth={true}
                                                                          inputComponent="input"
                                                                          multiline={false}
                                                                          name="5"
                                                                          onChange={[Function]}
                                                                          type="text"
                                                                          value=""
                                                                        >
                                                                          <div
                                                                            className="MuiInputBase-root MuiFilledInput-root MuiFilledInput-underline MuiInputBase-fullWidth MuiInputBase-formControl"
                                                                            onClick={[Function]}
                                                                          >
                                                                            <input
                                                                              aria-invalid={false}
                                                                              autoFocus={false}
                                                                              className="MuiInputBase-input MuiFilledInput-input"
                                                                              disabled={false}
                                                                              name="5"
                                                                              onAnimationStart={[Function]}
                                                                              onBlur={[Function]}
                                                                              onChange={[Function]}
                                                                              onFocus={[Function]}
                                                                              required={false}
                                                                              type="text"
                                                                              value=""
                                                                            />
                                                                          </div>
                                                                        </ForwardRef(InputBase)>
                                                                      </WithStyles(ForwardRef(InputBase))>
                                                                    </ForwardRef(FilledInput)>
                                                                  </WithStyles(ForwardRef(FilledInput))>
                                                                </div>
                                                              </ForwardRef(FormControl)>
                                                            </WithStyles(ForwardRef(FormControl))>
                                                          </ForwardRef(TextField)>
                                                        </WithStyles(ForwardRef(TextField))>
                                                        <WithStyles(ForwardRef(FormControlLabel))
                                                          control={
                                                            <WithStyles(ForwardRef(Checkbox))
                                                              checked={false}
                                                              color="primary"
                                                              inputProps={
                                                                Object {
                                                                  "aria-label": "secondary checkbox",
                                                                }
                                                              }
                                                              name="hasResponse"
                                                              onChange={[Function]}
                                                            />
                                                          }
                                                          label="Clique aqui para adicionar resposta."
                                                          labelPlacement="end"
                                                        >
                                                          <ForwardRef(FormControlLabel)
                                                            classes={
                                                              Object {
                                                                "disabled": "Mui-disabled",
                                                                "label": "MuiFormControlLabel-label",
                                                                "labelPlacementBottom": "MuiFormControlLabel-labelPlacementBottom",
                                                                "labelPlacementStart": "MuiFormControlLabel-labelPlacementStart",
                                                                "labelPlacementTop": "MuiFormControlLabel-labelPlacementTop",
                                                                "root": "MuiFormControlLabel-root",
                                                              }
                                                            }
                                                            control={
                                                              <WithStyles(ForwardRef(Checkbox))
                                                                checked={false}
                                                                color="primary"
                                                                inputProps={
                                                                  Object {
                                                                    "aria-label": "secondary checkbox",
                                                                  }
                                                                }
                                                                name="hasResponse"
                                                                onChange={[Function]}
                                                              />
                                                            }
                                                            label="Clique aqui para adicionar resposta."
                                                            labelPlacement="end"
                                                          >
                                                            <label
                                                              className="MuiFormControlLabel-root"
                                                            >
                                                              <WithStyles(ForwardRef(Checkbox))
                                                                checked={false}
                                                                color="primary"
                                                                inputProps={
                                                                  Object {
                                                                    "aria-label": "secondary checkbox",
                                                                  }
                                                                }
                                                                name="hasResponse"
                                                                onChange={[Function]}
                                                              >
                                                                <ForwardRef(Checkbox)
                                                                  checked={false}
                                                                  classes={
                                                                    Object {
                                                                      "checked": "Mui-checked",
                                                                      "colorPrimary": "MuiCheckbox-colorPrimary",
                                                                      "colorSecondary": "MuiCheckbox-colorSecondary",
                                                                      "disabled": "Mui-disabled",
                                                                      "indeterminate": "MuiCheckbox-indeterminate",
                                                                      "root": "MuiCheckbox-root",
                                                                    }
                                                                  }
                                                                  color="primary"
                                                                  inputProps={
                                                                    Object {
                                                                      "aria-label": "secondary checkbox",
                                                                    }
                                                                  }
                                                                  name="hasResponse"
                                                                  onChange={[Function]}
                                                                >
                                                                  <WithStyles(ForwardRef(SwitchBase))
                                                                    checked={false}
                                                                    checkedIcon={<Memo />}
                                                                    classes={
                                                                      Object {
                                                                        "checked": "Mui-checked",
                                                                        "disabled": "Mui-disabled",
                                                                        "root": "MuiCheckbox-root MuiCheckbox-colorPrimary",
                                                                      }
                                                                    }
                                                                    color="primary"
                                                                    icon={<Memo />}
                                                                    inputProps={
                                                                      Object {
                                                                        "aria-label": "secondary checkbox",
                                                                        "data-indeterminate": false,
                                                                      }
                                                                    }
                                                                    name="hasResponse"
                                                                    onChange={[Function]}
                                                                    type="checkbox"
                                                                  >
                                                                    <ForwardRef(SwitchBase)
                                                                      checked={false}
                                                                      checkedIcon={<Memo />}
                                                                      classes={
                                                                        Object {
                                                                          "checked": "PrivateSwitchBase-checked-24 Mui-checked",
                                                                          "disabled": "PrivateSwitchBase-disabled-25 Mui-disabled",
                                                                          "input": "PrivateSwitchBase-input-26",
                                                                          "root": "PrivateSwitchBase-root-23 MuiCheckbox-root MuiCheckbox-colorPrimary",
                                                                        }
                                                                      }
                                                                      color="primary"
                                                                      icon={<Memo />}
                                                                      inputProps={
                                                                        Object {
                                                                          "aria-label": "secondary checkbox",
                                                                          "data-indeterminate": false,
                                                                        }
                                                                      }
                                                                      name="hasResponse"
                                                                      onChange={[Function]}
                                                                      type="checkbox"
                                                                    >
                                                                      <WithStyles(ForwardRef(IconButton))
                                                                        className="PrivateSwitchBase-root-23 MuiCheckbox-root MuiCheckbox-colorPrimary"
                                                                        color="primary"
                                                                        component="span"
                                                                        onBlur={[Function]}
                                                                        onFocus={[Function]}
                                                                        tabIndex={null}
                                                                      >
                                                                        <ForwardRef(IconButton)
                                                                          className="PrivateSwitchBase-root-23 MuiCheckbox-root MuiCheckbox-colorPrimary"
                                                                          classes={
                                                                            Object {
                                                                              "colorInherit": "MuiIconButton-colorInherit",
                                                                              "colorPrimary": "MuiIconButton-colorPrimary",
                                                                              "colorSecondary": "MuiIconButton-colorSecondary",
                                                                              "disabled": "Mui-disabled",
                                                                              "edgeEnd": "MuiIconButton-edgeEnd",
                                                                              "edgeStart": "MuiIconButton-edgeStart",
                                                                              "label": "MuiIconButton-label",
                                                                              "root": "MuiIconButton-root",
                                                                              "sizeSmall": "MuiIconButton-sizeSmall",
                                                                            }
                                                                          }
                                                                          color="primary"
                                                                          component="span"
                                                                          onBlur={[Function]}
                                                                          onFocus={[Function]}
                                                                          tabIndex={null}
                                                                        >
                                                                          <WithStyles(ForwardRef(ButtonBase))
                                                                            centerRipple={true}
                                                                            className="MuiIconButton-root PrivateSwitchBase-root-23 MuiCheckbox-root MuiCheckbox-colorPrimary MuiIconButton-colorPrimary"
                                                                            component="span"
                                                                            disabled={false}
                                                                            focusRipple={true}
                                                                            onBlur={[Function]}
                                                                            onFocus={[Function]}
                                                                            tabIndex={null}
                                                                          >
                                                                            <ForwardRef(ButtonBase)
                                                                              centerRipple={true}
                                                                              className="MuiIconButton-root PrivateSwitchBase-root-23 MuiCheckbox-root MuiCheckbox-colorPrimary MuiIconButton-colorPrimary"
                                                                              classes={
                                                                                Object {
                                                                                  "disabled": "Mui-disabled",
                                                                                  "focusVisible": "Mui-focusVisible",
                                                                                  "root": "MuiButtonBase-root",
                                                                                }
                                                                              }
                                                                              component="span"
                                                                              disabled={false}
                                                                              focusRipple={true}
                                                                              onBlur={[Function]}
                                                                              onFocus={[Function]}
                                                                              tabIndex={null}
                                                                            >
                                                                              <span
                                                                                aria-disabled={false}
                                                                                className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-23 MuiCheckbox-root MuiCheckbox-colorPrimary MuiIconButton-colorPrimary"
                                                                                onBlur={[Function]}
                                                                                onDragLeave={[Function]}
                                                                                onFocus={[Function]}
                                                                                onKeyDown={[Function]}
                                                                                onKeyUp={[Function]}
                                                                                onMouseDown={[Function]}
                                                                                onMouseLeave={[Function]}
                                                                                onMouseUp={[Function]}
                                                                                onTouchEnd={[Function]}
                                                                                onTouchMove={[Function]}
                                                                                onTouchStart={[Function]}
                                                                                tabIndex={null}
                                                                              >
                                                                                <span
                                                                                  className="MuiIconButton-label"
                                                                                >
                                                                                  <input
                                                                                    aria-label="secondary checkbox"
                                                                                    checked={false}
                                                                                    className="PrivateSwitchBase-input-26"
                                                                                    data-indeterminate={false}
                                                                                    name="hasResponse"
                                                                                    onChange={[Function]}
                                                                                    type="checkbox"
                                                                                  />
                                                                                  <ForwardRef(CheckBoxOutlineBlankIcon)>
                                                                                    <WithStyles(ForwardRef(SvgIcon))>
                                                                                      <ForwardRef(SvgIcon)
                                                                                        classes={
                                                                                          Object {
                                                                                            "colorAction": "MuiSvgIcon-colorAction",
                                                                                            "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                                            "colorError": "MuiSvgIcon-colorError",
                                                                                            "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                                            "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                                            "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                                            "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                                            "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                                            "root": "MuiSvgIcon-root",
                                                                                          }
                                                                                        }
                                                                                      >
                                                                                        <svg
                                                                                          aria-hidden={true}
                                                                                          className="MuiSvgIcon-root"
                                                                                          focusable="false"
                                                                                          viewBox="0 0 24 24"
                                                                                        >
                                                                                          <path
                                                                                            d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                                                                          />
                                                                                        </svg>
                                                                                      </ForwardRef(SvgIcon)>
                                                                                    </WithStyles(ForwardRef(SvgIcon))>
                                                                                  </ForwardRef(CheckBoxOutlineBlankIcon)>
                                                                                </span>
                                                                                <WithStyles(memo)
                                                                                  center={true}
                                                                                >
                                                                                  <ForwardRef(TouchRipple)
                                                                                    center={true}
                                                                                    classes={
                                                                                      Object {
                                                                                        "child": "MuiTouchRipple-child",
                                                                                        "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                        "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                        "ripple": "MuiTouchRipple-ripple",
                                                                                        "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                        "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                        "root": "MuiTouchRipple-root",
                                                                                      }
                                                                                    }
                                                                                  >
                                                                                    <span
                                                                                      className="MuiTouchRipple-root"
                                                                                    >
                                                                                      <TransitionGroup
                                                                                        childFactory={[Function]}
                                                                                        component={null}
                                                                                        exit={true}
                                                                                      />
                                                                                    </span>
                                                                                  </ForwardRef(TouchRipple)>
                                                                                </WithStyles(memo)>
                                                                              </span>
                                                                            </ForwardRef(ButtonBase)>
                                                                          </WithStyles(ForwardRef(ButtonBase))>
                                                                        </ForwardRef(IconButton)>
                                                                      </WithStyles(ForwardRef(IconButton))>
                                                                    </ForwardRef(SwitchBase)>
                                                                  </WithStyles(ForwardRef(SwitchBase))>
                                                                </ForwardRef(Checkbox)>
                                                              </WithStyles(ForwardRef(Checkbox))>
                                                              <WithStyles(ForwardRef(Typography))
                                                                className="MuiFormControlLabel-label"
                                                                component="span"
                                                              >
                                                                <ForwardRef(Typography)
                                                                  className="MuiFormControlLabel-label"
                                                                  classes={
                                                                    Object {
                                                                      "alignCenter": "MuiTypography-alignCenter",
                                                                      "alignJustify": "MuiTypography-alignJustify",
                                                                      "alignLeft": "MuiTypography-alignLeft",
                                                                      "alignRight": "MuiTypography-alignRight",
                                                                      "body1": "MuiTypography-body1",
                                                                      "body2": "MuiTypography-body2",
                                                                      "button": "MuiTypography-button",
                                                                      "caption": "MuiTypography-caption",
                                                                      "colorError": "MuiTypography-colorError",
                                                                      "colorInherit": "MuiTypography-colorInherit",
                                                                      "colorPrimary": "MuiTypography-colorPrimary",
                                                                      "colorSecondary": "MuiTypography-colorSecondary",
                                                                      "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                      "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                      "displayBlock": "MuiTypography-displayBlock",
                                                                      "displayInline": "MuiTypography-displayInline",
                                                                      "gutterBottom": "MuiTypography-gutterBottom",
                                                                      "h1": "MuiTypography-h1",
                                                                      "h2": "MuiTypography-h2",
                                                                      "h3": "MuiTypography-h3",
                                                                      "h4": "MuiTypography-h4",
                                                                      "h5": "MuiTypography-h5",
                                                                      "h6": "MuiTypography-h6",
                                                                      "noWrap": "MuiTypography-noWrap",
                                                                      "overline": "MuiTypography-overline",
                                                                      "paragraph": "MuiTypography-paragraph",
                                                                      "root": "MuiTypography-root",
                                                                      "srOnly": "MuiTypography-srOnly",
                                                                      "subtitle1": "MuiTypography-subtitle1",
                                                                      "subtitle2": "MuiTypography-subtitle2",
                                                                    }
                                                                  }
                                                                  component="span"
                                                                >
                                                                  <span
                                                                    className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                                                  >
                                                                    Clique aqui para adicionar resposta.
                                                                  </span>
                                                                </ForwardRef(Typography)>
                                                              </WithStyles(ForwardRef(Typography))>
                                                            </label>
                                                          </ForwardRef(FormControlLabel)>
                                                        </WithStyles(ForwardRef(FormControlLabel))>
                                                      </div>
                                                    </ForwardRef(Paper)>
                                                  </WithStyles(ForwardRef(Paper))>
                                                </_default>
                                              </div>
                                            </Styled(MuiBox)>
                                          </div>
                                        </TabPanel>
                                        <TabPanel
                                          index={1}
                                          value={0}
                                        >
                                          <div
                                            aria-labelledby="nav-tab-1"
                                            hidden={true}
                                            id="nav-tabpanel-1"
                                            role="tabpanel"
                                          />
                                        </TabPanel>
                                        <TabPanel
                                          index={2}
                                          value={0}
                                        >
                                          <div
                                            aria-labelledby="nav-tab-2"
                                            hidden={true}
                                            id="nav-tabpanel-2"
                                            role="tabpanel"
                                          />
                                        </TabPanel>
                                        <div
                                          className="makeStyles-cardActions-6"
                                        >
                                          <WithStyles(ForwardRef(Fab))
                                            aria-label="add"
                                            className="makeStyles-fabGreen-7"
                                            disabled={false}
                                            onClick={[Function]}
                                          >
                                            <ForwardRef(Fab)
                                              aria-label="add"
                                              className="makeStyles-fabGreen-7"
                                              classes={
                                                Object {
                                                  "colorInherit": "MuiFab-colorInherit",
                                                  "disabled": "Mui-disabled",
                                                  "extended": "MuiFab-extended",
                                                  "focusVisible": "Mui-focusVisible",
                                                  "label": "MuiFab-label",
                                                  "primary": "MuiFab-primary",
                                                  "root": "MuiFab-root",
                                                  "secondary": "MuiFab-secondary",
                                                  "sizeMedium": "MuiFab-sizeMedium",
                                                  "sizeSmall": "MuiFab-sizeSmall",
                                                }
                                              }
                                              disabled={false}
                                              onClick={[Function]}
                                            >
                                              <WithStyles(ForwardRef(ButtonBase))
                                                aria-label="add"
                                                className="MuiFab-root makeStyles-fabGreen-7"
                                                component="button"
                                                disabled={false}
                                                focusRipple={true}
                                                focusVisibleClassName="Mui-focusVisible"
                                                onClick={[Function]}
                                              >
                                                <ForwardRef(ButtonBase)
                                                  aria-label="add"
                                                  className="MuiFab-root makeStyles-fabGreen-7"
                                                  classes={
                                                    Object {
                                                      "disabled": "Mui-disabled",
                                                      "focusVisible": "Mui-focusVisible",
                                                      "root": "MuiButtonBase-root",
                                                    }
                                                  }
                                                  component="button"
                                                  disabled={false}
                                                  focusRipple={true}
                                                  focusVisibleClassName="Mui-focusVisible"
                                                  onClick={[Function]}
                                                >
                                                  <button
                                                    aria-label="add"
                                                    className="MuiButtonBase-root MuiFab-root makeStyles-fabGreen-7"
                                                    disabled={false}
                                                    onBlur={[Function]}
                                                    onClick={[Function]}
                                                    onDragLeave={[Function]}
                                                    onFocus={[Function]}
                                                    onKeyDown={[Function]}
                                                    onKeyUp={[Function]}
                                                    onMouseDown={[Function]}
                                                    onMouseLeave={[Function]}
                                                    onMouseUp={[Function]}
                                                    onTouchEnd={[Function]}
                                                    onTouchMove={[Function]}
                                                    onTouchStart={[Function]}
                                                    tabIndex={0}
                                                    type="button"
                                                  >
                                                    <span
                                                      className="MuiFab-label"
                                                    >
                                                      <WithStyles(ForwardRef(Tooltip))
                                                        aria-label="Add"
                                                        arrow={true}
                                                        placement="top-start"
                                                        title="Criar Questão"
                                                      >
                                                        <ForwardRef(Tooltip)
                                                          aria-label="Add"
                                                          arrow={true}
                                                          classes={
                                                            Object {
                                                              "arrow": "MuiTooltip-arrow",
                                                              "popper": "MuiTooltip-popper",
                                                              "popperArrow": "MuiTooltip-popperArrow",
                                                              "popperInteractive": "MuiTooltip-popperInteractive",
                                                              "tooltip": "MuiTooltip-tooltip",
                                                              "tooltipArrow": "MuiTooltip-tooltipArrow",
                                                              "tooltipPlacementBottom": "MuiTooltip-tooltipPlacementBottom",
                                                              "tooltipPlacementLeft": "MuiTooltip-tooltipPlacementLeft",
                                                              "tooltipPlacementRight": "MuiTooltip-tooltipPlacementRight",
                                                              "tooltipPlacementTop": "MuiTooltip-tooltipPlacementTop",
                                                              "touch": "MuiTooltip-touch",
                                                            }
                                                          }
                                                          placement="top-start"
                                                          title="Criar Questão"
                                                        >
                                                          <ForwardRef(AddIcon)
                                                            aria-describedby={null}
                                                            aria-label="Add"
                                                            className=""
                                                            onBlur={[Function]}
                                                            onFocus={[Function]}
                                                            onMouseLeave={[Function]}
                                                            onMouseOver={[Function]}
                                                            onTouchEnd={[Function]}
                                                            onTouchStart={[Function]}
                                                            title="Criar Questão"
                                                          >
                                                            <WithStyles(ForwardRef(SvgIcon))
                                                              aria-describedby={null}
                                                              aria-label="Add"
                                                              className=""
                                                              onBlur={[Function]}
                                                              onFocus={[Function]}
                                                              onMouseLeave={[Function]}
                                                              onMouseOver={[Function]}
                                                              onTouchEnd={[Function]}
                                                              onTouchStart={[Function]}
                                                              title="Criar Questão"
                                                            >
                                                              <ForwardRef(SvgIcon)
                                                                aria-describedby={null}
                                                                aria-label="Add"
                                                                className=""
                                                                classes={
                                                                  Object {
                                                                    "colorAction": "MuiSvgIcon-colorAction",
                                                                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                    "colorError": "MuiSvgIcon-colorError",
                                                                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                    "root": "MuiSvgIcon-root",
                                                                  }
                                                                }
                                                                onBlur={[Function]}
                                                                onFocus={[Function]}
                                                                onMouseLeave={[Function]}
                                                                onMouseOver={[Function]}
                                                                onTouchEnd={[Function]}
                                                                onTouchStart={[Function]}
                                                                title="Criar Questão"
                                                              >
                                                                <svg
                                                                  aria-describedby={null}
                                                                  aria-hidden={true}
                                                                  aria-label="Add"
                                                                  className="MuiSvgIcon-root"
                                                                  focusable="false"
                                                                  onBlur={[Function]}
                                                                  onFocus={[Function]}
                                                                  onMouseLeave={[Function]}
                                                                  onMouseOver={[Function]}
                                                                  onTouchEnd={[Function]}
                                                                  onTouchStart={[Function]}
                                                                  title="Criar Questão"
                                                                  viewBox="0 0 24 24"
                                                                >
                                                                  <path
                                                                    d="M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z"
                                                                  />
                                                                </svg>
                                                              </ForwardRef(SvgIcon)>
                                                            </WithStyles(ForwardRef(SvgIcon))>
                                                          </ForwardRef(AddIcon)>
                                                          <ForwardRef(Popper)
                                                            anchorEl={
                                                              <svg
                                                                aria-hidden="true"
                                                                aria-label="Add"
                                                                class="MuiSvgIcon-root"
                                                                focusable="false"
                                                                title="Criar Questão"
                                                                viewBox="0 0 24 24"
                                                              >
                                                                <path
                                                                  d="M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z"
                                                                />
                                                              </svg>
                                                            }
                                                            className="MuiTooltip-popper MuiTooltip-popperArrow"
                                                            id={null}
                                                            open={false}
                                                            placement="top-start"
                                                            popperOptions={
                                                              Object {
                                                                "modifiers": Object {
                                                                  "arrow": Object {
                                                                    "element": null,
                                                                    "enabled": false,
                                                                  },
                                                                },
                                                              }
                                                            }
                                                            transition={true}
                                                          />
                                                        </ForwardRef(Tooltip)>
                                                      </WithStyles(ForwardRef(Tooltip))>
                                                    </span>
                                                    <WithStyles(memo)
                                                      center={false}
                                                    >
                                                      <ForwardRef(TouchRipple)
                                                        center={false}
                                                        classes={
                                                          Object {
                                                            "child": "MuiTouchRipple-child",
                                                            "childLeaving": "MuiTouchRipple-childLeaving",
                                                            "childPulsate": "MuiTouchRipple-childPulsate",
                                                            "ripple": "MuiTouchRipple-ripple",
                                                            "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                            "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                            "root": "MuiTouchRipple-root",
                                                          }
                                                        }
                                                      >
                                                        <span
                                                          className="MuiTouchRipple-root"
                                                        >
                                                          <TransitionGroup
                                                            childFactory={[Function]}
                                                            component={null}
                                                            exit={true}
                                                          />
                                                        </span>
                                                      </ForwardRef(TouchRipple)>
                                                    </WithStyles(memo)>
                                                  </button>
                                                </ForwardRef(ButtonBase)>
                                              </WithStyles(ForwardRef(ButtonBase))>
                                            </ForwardRef(Fab)>
                                          </WithStyles(ForwardRef(Fab))>
                                          <WithStyles(ForwardRef(Pagination))
                                            color="primary"
                                            count={0}
                                            hideNextButton={true}
                                            hidePrevButton={true}
                                            onChange={[Function]}
                                            page={0}
                                            siblingCount={5}
                                            size="large"
                                            variant="text"
                                          >
                                            <ForwardRef(Pagination)
                                              classes={
                                                Object {
                                                  "root": "MuiPagination-root",
                                                  "ul": "MuiPagination-ul",
                                                }
                                              }
                                              color="primary"
                                              count={0}
                                              hideNextButton={true}
                                              hidePrevButton={true}
                                              onChange={[Function]}
                                              page={0}
                                              siblingCount={5}
                                              size="large"
                                              variant="text"
                                            >
                                              <nav
                                                aria-label="pagination navigation"
                                                className="MuiPagination-root"
                                              >
                                                <ul
                                                  className="MuiPagination-ul"
                                                />
                                              </nav>
                                            </ForwardRef(Pagination)>
                                          </WithStyles(ForwardRef(Pagination))>
                                          <WithStyles(ForwardRef(Fab))
                                            aria-label=""
                                            className="makeStyles-fabRed-8"
                                            disabled={true}
                                            onClick={[Function]}
                                          >
                                            <ForwardRef(Fab)
                                              aria-label=""
                                              className="makeStyles-fabRed-8"
                                              classes={
                                                Object {
                                                  "colorInherit": "MuiFab-colorInherit",
                                                  "disabled": "Mui-disabled",
                                                  "extended": "MuiFab-extended",
                                                  "focusVisible": "Mui-focusVisible",
                                                  "label": "MuiFab-label",
                                                  "primary": "MuiFab-primary",
                                                  "root": "MuiFab-root",
                                                  "secondary": "MuiFab-secondary",
                                                  "sizeMedium": "MuiFab-sizeMedium",
                                                  "sizeSmall": "MuiFab-sizeSmall",
                                                }
                                              }
                                              disabled={true}
                                              onClick={[Function]}
                                            >
                                              <WithStyles(ForwardRef(ButtonBase))
                                                aria-label=""
                                                className="MuiFab-root makeStyles-fabRed-8 Mui-disabled"
                                                component="button"
                                                disabled={true}
                                                focusRipple={true}
                                                focusVisibleClassName="Mui-focusVisible"
                                                onClick={[Function]}
                                              >
                                                <ForwardRef(ButtonBase)
                                                  aria-label=""
                                                  className="MuiFab-root makeStyles-fabRed-8 Mui-disabled"
                                                  classes={
                                                    Object {
                                                      "disabled": "Mui-disabled",
                                                      "focusVisible": "Mui-focusVisible",
                                                      "root": "MuiButtonBase-root",
                                                    }
                                                  }
                                                  component="button"
                                                  disabled={true}
                                                  focusRipple={true}
                                                  focusVisibleClassName="Mui-focusVisible"
                                                  onClick={[Function]}
                                                >
                                                  <button
                                                    aria-label=""
                                                    className="MuiButtonBase-root MuiFab-root makeStyles-fabRed-8 Mui-disabled Mui-disabled"
                                                    disabled={true}
                                                    onBlur={[Function]}
                                                    onClick={[Function]}
                                                    onDragLeave={[Function]}
                                                    onFocus={[Function]}
                                                    onKeyDown={[Function]}
                                                    onKeyUp={[Function]}
                                                    onMouseDown={[Function]}
                                                    onMouseLeave={[Function]}
                                                    onMouseUp={[Function]}
                                                    onTouchEnd={[Function]}
                                                    onTouchMove={[Function]}
                                                    onTouchStart={[Function]}
                                                    tabIndex={-1}
                                                    type="button"
                                                  >
                                                    <span
                                                      className="MuiFab-label"
                                                    >
                                                      <WithStyles(ForwardRef(Tooltip))
                                                        aria-label="Delete"
                                                        arrow={true}
                                                        placement="top-start"
                                                        title="Deletar Questão"
                                                      >
                                                        <ForwardRef(Tooltip)
                                                          aria-label="Delete"
                                                          arrow={true}
                                                          classes={
                                                            Object {
                                                              "arrow": "MuiTooltip-arrow",
                                                              "popper": "MuiTooltip-popper",
                                                              "popperArrow": "MuiTooltip-popperArrow",
                                                              "popperInteractive": "MuiTooltip-popperInteractive",
                                                              "tooltip": "MuiTooltip-tooltip",
                                                              "tooltipArrow": "MuiTooltip-tooltipArrow",
                                                              "tooltipPlacementBottom": "MuiTooltip-tooltipPlacementBottom",
                                                              "tooltipPlacementLeft": "MuiTooltip-tooltipPlacementLeft",
                                                              "tooltipPlacementRight": "MuiTooltip-tooltipPlacementRight",
                                                              "tooltipPlacementTop": "MuiTooltip-tooltipPlacementTop",
                                                              "touch": "MuiTooltip-touch",
                                                            }
                                                          }
                                                          placement="top-start"
                                                          title="Deletar Questão"
                                                        >
                                                          <ForwardRef(ClearIcon)
                                                            aria-describedby={null}
                                                            aria-label="Delete"
                                                            className=""
                                                            onBlur={[Function]}
                                                            onFocus={[Function]}
                                                            onMouseLeave={[Function]}
                                                            onMouseOver={[Function]}
                                                            onTouchEnd={[Function]}
                                                            onTouchStart={[Function]}
                                                            title="Deletar Questão"
                                                          >
                                                            <WithStyles(ForwardRef(SvgIcon))
                                                              aria-describedby={null}
                                                              aria-label="Delete"
                                                              className=""
                                                              onBlur={[Function]}
                                                              onFocus={[Function]}
                                                              onMouseLeave={[Function]}
                                                              onMouseOver={[Function]}
                                                              onTouchEnd={[Function]}
                                                              onTouchStart={[Function]}
                                                              title="Deletar Questão"
                                                            >
                                                              <ForwardRef(SvgIcon)
                                                                aria-describedby={null}
                                                                aria-label="Delete"
                                                                className=""
                                                                classes={
                                                                  Object {
                                                                    "colorAction": "MuiSvgIcon-colorAction",
                                                                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                    "colorError": "MuiSvgIcon-colorError",
                                                                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                    "root": "MuiSvgIcon-root",
                                                                  }
                                                                }
                                                                onBlur={[Function]}
                                                                onFocus={[Function]}
                                                                onMouseLeave={[Function]}
                                                                onMouseOver={[Function]}
                                                                onTouchEnd={[Function]}
                                                                onTouchStart={[Function]}
                                                                title="Deletar Questão"
                                                              >
                                                                <svg
                                                                  aria-describedby={null}
                                                                  aria-hidden={true}
                                                                  aria-label="Delete"
                                                                  className="MuiSvgIcon-root"
                                                                  focusable="false"
                                                                  onBlur={[Function]}
                                                                  onFocus={[Function]}
                                                                  onMouseLeave={[Function]}
                                                                  onMouseOver={[Function]}
                                                                  onTouchEnd={[Function]}
                                                                  onTouchStart={[Function]}
                                                                  title="Deletar Questão"
                                                                  viewBox="0 0 24 24"
                                                                >
                                                                  <path
                                                                    d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
                                                                  />
                                                                </svg>
                                                              </ForwardRef(SvgIcon)>
                                                            </WithStyles(ForwardRef(SvgIcon))>
                                                          </ForwardRef(ClearIcon)>
                                                          <ForwardRef(Popper)
                                                            anchorEl={
                                                              <svg
                                                                aria-hidden="true"
                                                                aria-label="Delete"
                                                                class="MuiSvgIcon-root"
                                                                focusable="false"
                                                                title="Deletar Questão"
                                                                viewBox="0 0 24 24"
                                                              >
                                                                <path
                                                                  d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
                                                                />
                                                              </svg>
                                                            }
                                                            className="MuiTooltip-popper MuiTooltip-popperArrow"
                                                            id={null}
                                                            open={false}
                                                            placement="top-start"
                                                            popperOptions={
                                                              Object {
                                                                "modifiers": Object {
                                                                  "arrow": Object {
                                                                    "element": null,
                                                                    "enabled": false,
                                                                  },
                                                                },
                                                              }
                                                            }
                                                            transition={true}
                                                          />
                                                        </ForwardRef(Tooltip)>
                                                      </WithStyles(ForwardRef(Tooltip))>
                                                    </span>
                                                  </button>
                                                </ForwardRef(ButtonBase)>
                                              </WithStyles(ForwardRef(ButtonBase))>
                                            </ForwardRef(Fab)>
                                          </WithStyles(ForwardRef(Fab))>
                                        </div>
                                      </div>
                                    </_default>
                                  </div>
                                </Styled(MuiBox)>
                              </div>
                            </ForwardRef(Grid)>
                          </WithStyles(ForwardRef(Grid))>
                          <WithStyles(ForwardRef(Grid))
                            item={true}
                            xs={12}
                          >
                            <ForwardRef(Grid)
                              classes={
                                Object {
                                  "align-content-xs-center": "MuiGrid-align-content-xs-center",
                                  "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                                  "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                                  "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                                  "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                                  "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                                  "align-items-xs-center": "MuiGrid-align-items-xs-center",
                                  "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                                  "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                                  "container": "MuiGrid-container",
                                  "direction-xs-column": "MuiGrid-direction-xs-column",
                                  "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                                  "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                                  "grid-lg-1": "MuiGrid-grid-lg-1",
                                  "grid-lg-10": "MuiGrid-grid-lg-10",
                                  "grid-lg-11": "MuiGrid-grid-lg-11",
                                  "grid-lg-12": "MuiGrid-grid-lg-12",
                                  "grid-lg-2": "MuiGrid-grid-lg-2",
                                  "grid-lg-3": "MuiGrid-grid-lg-3",
                                  "grid-lg-4": "MuiGrid-grid-lg-4",
                                  "grid-lg-5": "MuiGrid-grid-lg-5",
                                  "grid-lg-6": "MuiGrid-grid-lg-6",
                                  "grid-lg-7": "MuiGrid-grid-lg-7",
                                  "grid-lg-8": "MuiGrid-grid-lg-8",
                                  "grid-lg-9": "MuiGrid-grid-lg-9",
                                  "grid-lg-auto": "MuiGrid-grid-lg-auto",
                                  "grid-lg-true": "MuiGrid-grid-lg-true",
                                  "grid-md-1": "MuiGrid-grid-md-1",
                                  "grid-md-10": "MuiGrid-grid-md-10",
                                  "grid-md-11": "MuiGrid-grid-md-11",
                                  "grid-md-12": "MuiGrid-grid-md-12",
                                  "grid-md-2": "MuiGrid-grid-md-2",
                                  "grid-md-3": "MuiGrid-grid-md-3",
                                  "grid-md-4": "MuiGrid-grid-md-4",
                                  "grid-md-5": "MuiGrid-grid-md-5",
                                  "grid-md-6": "MuiGrid-grid-md-6",
                                  "grid-md-7": "MuiGrid-grid-md-7",
                                  "grid-md-8": "MuiGrid-grid-md-8",
                                  "grid-md-9": "MuiGrid-grid-md-9",
                                  "grid-md-auto": "MuiGrid-grid-md-auto",
                                  "grid-md-true": "MuiGrid-grid-md-true",
                                  "grid-sm-1": "MuiGrid-grid-sm-1",
                                  "grid-sm-10": "MuiGrid-grid-sm-10",
                                  "grid-sm-11": "MuiGrid-grid-sm-11",
                                  "grid-sm-12": "MuiGrid-grid-sm-12",
                                  "grid-sm-2": "MuiGrid-grid-sm-2",
                                  "grid-sm-3": "MuiGrid-grid-sm-3",
                                  "grid-sm-4": "MuiGrid-grid-sm-4",
                                  "grid-sm-5": "MuiGrid-grid-sm-5",
                                  "grid-sm-6": "MuiGrid-grid-sm-6",
                                  "grid-sm-7": "MuiGrid-grid-sm-7",
                                  "grid-sm-8": "MuiGrid-grid-sm-8",
                                  "grid-sm-9": "MuiGrid-grid-sm-9",
                                  "grid-sm-auto": "MuiGrid-grid-sm-auto",
                                  "grid-sm-true": "MuiGrid-grid-sm-true",
                                  "grid-xl-1": "MuiGrid-grid-xl-1",
                                  "grid-xl-10": "MuiGrid-grid-xl-10",
                                  "grid-xl-11": "MuiGrid-grid-xl-11",
                                  "grid-xl-12": "MuiGrid-grid-xl-12",
                                  "grid-xl-2": "MuiGrid-grid-xl-2",
                                  "grid-xl-3": "MuiGrid-grid-xl-3",
                                  "grid-xl-4": "MuiGrid-grid-xl-4",
                                  "grid-xl-5": "MuiGrid-grid-xl-5",
                                  "grid-xl-6": "MuiGrid-grid-xl-6",
                                  "grid-xl-7": "MuiGrid-grid-xl-7",
                                  "grid-xl-8": "MuiGrid-grid-xl-8",
                                  "grid-xl-9": "MuiGrid-grid-xl-9",
                                  "grid-xl-auto": "MuiGrid-grid-xl-auto",
                                  "grid-xl-true": "MuiGrid-grid-xl-true",
                                  "grid-xs-1": "MuiGrid-grid-xs-1",
                                  "grid-xs-10": "MuiGrid-grid-xs-10",
                                  "grid-xs-11": "MuiGrid-grid-xs-11",
                                  "grid-xs-12": "MuiGrid-grid-xs-12",
                                  "grid-xs-2": "MuiGrid-grid-xs-2",
                                  "grid-xs-3": "MuiGrid-grid-xs-3",
                                  "grid-xs-4": "MuiGrid-grid-xs-4",
                                  "grid-xs-5": "MuiGrid-grid-xs-5",
                                  "grid-xs-6": "MuiGrid-grid-xs-6",
                                  "grid-xs-7": "MuiGrid-grid-xs-7",
                                  "grid-xs-8": "MuiGrid-grid-xs-8",
                                  "grid-xs-9": "MuiGrid-grid-xs-9",
                                  "grid-xs-auto": "MuiGrid-grid-xs-auto",
                                  "grid-xs-true": "MuiGrid-grid-xs-true",
                                  "item": "MuiGrid-item",
                                  "justify-xs-center": "MuiGrid-justify-xs-center",
                                  "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                                  "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                                  "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                                  "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                                  "root": "MuiGrid-root",
                                  "spacing-xs-1": "MuiGrid-spacing-xs-1",
                                  "spacing-xs-10": "MuiGrid-spacing-xs-10",
                                  "spacing-xs-2": "MuiGrid-spacing-xs-2",
                                  "spacing-xs-3": "MuiGrid-spacing-xs-3",
                                  "spacing-xs-4": "MuiGrid-spacing-xs-4",
                                  "spacing-xs-5": "MuiGrid-spacing-xs-5",
                                  "spacing-xs-6": "MuiGrid-spacing-xs-6",
                                  "spacing-xs-7": "MuiGrid-spacing-xs-7",
                                  "spacing-xs-8": "MuiGrid-spacing-xs-8",
                                  "spacing-xs-9": "MuiGrid-spacing-xs-9",
                                  "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                                  "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                                  "zeroMinWidth": "MuiGrid-zeroMinWidth",
                                }
                              }
                              item={true}
                              xs={12}
                            >
                              <div
                                className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-12"
                              >
                                <WithStyles(ForwardRef(FormControlLabel))
                                  control={
                                    <WithStyles(ForwardRef(Checkbox))
                                      checked={false}
                                      color="primary"
                                      name="public"
                                      onChange={[Function]}
                                    />
                                  }
                                  label="Quero que este questionário seja visível para pessoas anonimas(que não possuem conta neste site)."
                                >
                                  <ForwardRef(FormControlLabel)
                                    classes={
                                      Object {
                                        "disabled": "Mui-disabled",
                                        "label": "MuiFormControlLabel-label",
                                        "labelPlacementBottom": "MuiFormControlLabel-labelPlacementBottom",
                                        "labelPlacementStart": "MuiFormControlLabel-labelPlacementStart",
                                        "labelPlacementTop": "MuiFormControlLabel-labelPlacementTop",
                                        "root": "MuiFormControlLabel-root",
                                      }
                                    }
                                    control={
                                      <WithStyles(ForwardRef(Checkbox))
                                        checked={false}
                                        color="primary"
                                        name="public"
                                        onChange={[Function]}
                                      />
                                    }
                                    label="Quero que este questionário seja visível para pessoas anonimas(que não possuem conta neste site)."
                                  >
                                    <label
                                      className="MuiFormControlLabel-root"
                                    >
                                      <WithStyles(ForwardRef(Checkbox))
                                        checked={false}
                                        color="primary"
                                        name="public"
                                        onChange={[Function]}
                                      >
                                        <ForwardRef(Checkbox)
                                          checked={false}
                                          classes={
                                            Object {
                                              "checked": "Mui-checked",
                                              "colorPrimary": "MuiCheckbox-colorPrimary",
                                              "colorSecondary": "MuiCheckbox-colorSecondary",
                                              "disabled": "Mui-disabled",
                                              "indeterminate": "MuiCheckbox-indeterminate",
                                              "root": "MuiCheckbox-root",
                                            }
                                          }
                                          color="primary"
                                          name="public"
                                          onChange={[Function]}
                                        >
                                          <WithStyles(ForwardRef(SwitchBase))
                                            checked={false}
                                            checkedIcon={<Memo />}
                                            classes={
                                              Object {
                                                "checked": "Mui-checked",
                                                "disabled": "Mui-disabled",
                                                "root": "MuiCheckbox-root MuiCheckbox-colorPrimary",
                                              }
                                            }
                                            color="primary"
                                            icon={<Memo />}
                                            inputProps={
                                              Object {
                                                "data-indeterminate": false,
                                              }
                                            }
                                            name="public"
                                            onChange={[Function]}
                                            type="checkbox"
                                          >
                                            <ForwardRef(SwitchBase)
                                              checked={false}
                                              checkedIcon={<Memo />}
                                              classes={
                                                Object {
                                                  "checked": "PrivateSwitchBase-checked-24 Mui-checked",
                                                  "disabled": "PrivateSwitchBase-disabled-25 Mui-disabled",
                                                  "input": "PrivateSwitchBase-input-26",
                                                  "root": "PrivateSwitchBase-root-23 MuiCheckbox-root MuiCheckbox-colorPrimary",
                                                }
                                              }
                                              color="primary"
                                              icon={<Memo />}
                                              inputProps={
                                                Object {
                                                  "data-indeterminate": false,
                                                }
                                              }
                                              name="public"
                                              onChange={[Function]}
                                              type="checkbox"
                                            >
                                              <WithStyles(ForwardRef(IconButton))
                                                className="PrivateSwitchBase-root-23 MuiCheckbox-root MuiCheckbox-colorPrimary"
                                                color="primary"
                                                component="span"
                                                onBlur={[Function]}
                                                onFocus={[Function]}
                                                tabIndex={null}
                                              >
                                                <ForwardRef(IconButton)
                                                  className="PrivateSwitchBase-root-23 MuiCheckbox-root MuiCheckbox-colorPrimary"
                                                  classes={
                                                    Object {
                                                      "colorInherit": "MuiIconButton-colorInherit",
                                                      "colorPrimary": "MuiIconButton-colorPrimary",
                                                      "colorSecondary": "MuiIconButton-colorSecondary",
                                                      "disabled": "Mui-disabled",
                                                      "edgeEnd": "MuiIconButton-edgeEnd",
                                                      "edgeStart": "MuiIconButton-edgeStart",
                                                      "label": "MuiIconButton-label",
                                                      "root": "MuiIconButton-root",
                                                      "sizeSmall": "MuiIconButton-sizeSmall",
                                                    }
                                                  }
                                                  color="primary"
                                                  component="span"
                                                  onBlur={[Function]}
                                                  onFocus={[Function]}
                                                  tabIndex={null}
                                                >
                                                  <WithStyles(ForwardRef(ButtonBase))
                                                    centerRipple={true}
                                                    className="MuiIconButton-root PrivateSwitchBase-root-23 MuiCheckbox-root MuiCheckbox-colorPrimary MuiIconButton-colorPrimary"
                                                    component="span"
                                                    disabled={false}
                                                    focusRipple={true}
                                                    onBlur={[Function]}
                                                    onFocus={[Function]}
                                                    tabIndex={null}
                                                  >
                                                    <ForwardRef(ButtonBase)
                                                      centerRipple={true}
                                                      className="MuiIconButton-root PrivateSwitchBase-root-23 MuiCheckbox-root MuiCheckbox-colorPrimary MuiIconButton-colorPrimary"
                                                      classes={
                                                        Object {
                                                          "disabled": "Mui-disabled",
                                                          "focusVisible": "Mui-focusVisible",
                                                          "root": "MuiButtonBase-root",
                                                        }
                                                      }
                                                      component="span"
                                                      disabled={false}
                                                      focusRipple={true}
                                                      onBlur={[Function]}
                                                      onFocus={[Function]}
                                                      tabIndex={null}
                                                    >
                                                      <span
                                                        aria-disabled={false}
                                                        className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-23 MuiCheckbox-root MuiCheckbox-colorPrimary MuiIconButton-colorPrimary"
                                                        onBlur={[Function]}
                                                        onDragLeave={[Function]}
                                                        onFocus={[Function]}
                                                        onKeyDown={[Function]}
                                                        onKeyUp={[Function]}
                                                        onMouseDown={[Function]}
                                                        onMouseLeave={[Function]}
                                                        onMouseUp={[Function]}
                                                        onTouchEnd={[Function]}
                                                        onTouchMove={[Function]}
                                                        onTouchStart={[Function]}
                                                        tabIndex={null}
                                                      >
                                                        <span
                                                          className="MuiIconButton-label"
                                                        >
                                                          <input
                                                            checked={false}
                                                            className="PrivateSwitchBase-input-26"
                                                            data-indeterminate={false}
                                                            name="public"
                                                            onChange={[Function]}
                                                            type="checkbox"
                                                          />
                                                          <ForwardRef(CheckBoxOutlineBlankIcon)>
                                                            <WithStyles(ForwardRef(SvgIcon))>
                                                              <ForwardRef(SvgIcon)
                                                                classes={
                                                                  Object {
                                                                    "colorAction": "MuiSvgIcon-colorAction",
                                                                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                    "colorError": "MuiSvgIcon-colorError",
                                                                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                    "root": "MuiSvgIcon-root",
                                                                  }
                                                                }
                                                              >
                                                                <svg
                                                                  aria-hidden={true}
                                                                  className="MuiSvgIcon-root"
                                                                  focusable="false"
                                                                  viewBox="0 0 24 24"
                                                                >
                                                                  <path
                                                                    d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                                                  />
                                                                </svg>
                                                              </ForwardRef(SvgIcon)>
                                                            </WithStyles(ForwardRef(SvgIcon))>
                                                          </ForwardRef(CheckBoxOutlineBlankIcon)>
                                                        </span>
                                                        <WithStyles(memo)
                                                          center={true}
                                                        >
                                                          <ForwardRef(TouchRipple)
                                                            center={true}
                                                            classes={
                                                              Object {
                                                                "child": "MuiTouchRipple-child",
                                                                "childLeaving": "MuiTouchRipple-childLeaving",
                                                                "childPulsate": "MuiTouchRipple-childPulsate",
                                                                "ripple": "MuiTouchRipple-ripple",
                                                                "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                "root": "MuiTouchRipple-root",
                                                              }
                                                            }
                                                          >
                                                            <span
                                                              className="MuiTouchRipple-root"
                                                            >
                                                              <TransitionGroup
                                                                childFactory={[Function]}
                                                                component={null}
                                                                exit={true}
                                                              />
                                                            </span>
                                                          </ForwardRef(TouchRipple)>
                                                        </WithStyles(memo)>
                                                      </span>
                                                    </ForwardRef(ButtonBase)>
                                                  </WithStyles(ForwardRef(ButtonBase))>
                                                </ForwardRef(IconButton)>
                                              </WithStyles(ForwardRef(IconButton))>
                                            </ForwardRef(SwitchBase)>
                                          </WithStyles(ForwardRef(SwitchBase))>
                                        </ForwardRef(Checkbox)>
                                      </WithStyles(ForwardRef(Checkbox))>
                                      <WithStyles(ForwardRef(Typography))
                                        className="MuiFormControlLabel-label"
                                        component="span"
                                      >
                                        <ForwardRef(Typography)
                                          className="MuiFormControlLabel-label"
                                          classes={
                                            Object {
                                              "alignCenter": "MuiTypography-alignCenter",
                                              "alignJustify": "MuiTypography-alignJustify",
                                              "alignLeft": "MuiTypography-alignLeft",
                                              "alignRight": "MuiTypography-alignRight",
                                              "body1": "MuiTypography-body1",
                                              "body2": "MuiTypography-body2",
                                              "button": "MuiTypography-button",
                                              "caption": "MuiTypography-caption",
                                              "colorError": "MuiTypography-colorError",
                                              "colorInherit": "MuiTypography-colorInherit",
                                              "colorPrimary": "MuiTypography-colorPrimary",
                                              "colorSecondary": "MuiTypography-colorSecondary",
                                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                              "displayBlock": "MuiTypography-displayBlock",
                                              "displayInline": "MuiTypography-displayInline",
                                              "gutterBottom": "MuiTypography-gutterBottom",
                                              "h1": "MuiTypography-h1",
                                              "h2": "MuiTypography-h2",
                                              "h3": "MuiTypography-h3",
                                              "h4": "MuiTypography-h4",
                                              "h5": "MuiTypography-h5",
                                              "h6": "MuiTypography-h6",
                                              "noWrap": "MuiTypography-noWrap",
                                              "overline": "MuiTypography-overline",
                                              "paragraph": "MuiTypography-paragraph",
                                              "root": "MuiTypography-root",
                                              "srOnly": "MuiTypography-srOnly",
                                              "subtitle1": "MuiTypography-subtitle1",
                                              "subtitle2": "MuiTypography-subtitle2",
                                            }
                                          }
                                          component="span"
                                        >
                                          <span
                                            className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                          >
                                            Quero que este questionário seja visível para pessoas anonimas(que não possuem conta neste site).
                                          </span>
                                        </ForwardRef(Typography)>
                                      </WithStyles(ForwardRef(Typography))>
                                    </label>
                                  </ForwardRef(FormControlLabel)>
                                </WithStyles(ForwardRef(FormControlLabel))>
                              </div>
                            </ForwardRef(Grid)>
                          </WithStyles(ForwardRef(Grid))>
                        </div>
                      </ForwardRef(Grid)>
                    </WithStyles(ForwardRef(Grid))>
                    <WithStyles(ForwardRef(Button))
                      className="makeStyles-submit-3"
                      color="primary"
                      fullWidth={true}
                      type="submit"
                      variant="contained"
                    >
                      <ForwardRef(Button)
                        className="makeStyles-submit-3"
                        classes={
                          Object {
                            "colorInherit": "MuiButton-colorInherit",
                            "contained": "MuiButton-contained",
                            "containedPrimary": "MuiButton-containedPrimary",
                            "containedSecondary": "MuiButton-containedSecondary",
                            "containedSizeLarge": "MuiButton-containedSizeLarge",
                            "containedSizeSmall": "MuiButton-containedSizeSmall",
                            "disableElevation": "MuiButton-disableElevation",
                            "disabled": "Mui-disabled",
                            "endIcon": "MuiButton-endIcon",
                            "focusVisible": "Mui-focusVisible",
                            "fullWidth": "MuiButton-fullWidth",
                            "iconSizeLarge": "MuiButton-iconSizeLarge",
                            "iconSizeMedium": "MuiButton-iconSizeMedium",
                            "iconSizeSmall": "MuiButton-iconSizeSmall",
                            "label": "MuiButton-label",
                            "outlined": "MuiButton-outlined",
                            "outlinedPrimary": "MuiButton-outlinedPrimary",
                            "outlinedSecondary": "MuiButton-outlinedSecondary",
                            "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                            "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                            "root": "MuiButton-root",
                            "sizeLarge": "MuiButton-sizeLarge",
                            "sizeSmall": "MuiButton-sizeSmall",
                            "startIcon": "MuiButton-startIcon",
                            "text": "MuiButton-text",
                            "textPrimary": "MuiButton-textPrimary",
                            "textSecondary": "MuiButton-textSecondary",
                            "textSizeLarge": "MuiButton-textSizeLarge",
                            "textSizeSmall": "MuiButton-textSizeSmall",
                          }
                        }
                        color="primary"
                        fullWidth={true}
                        type="submit"
                        variant="contained"
                      >
                        <WithStyles(ForwardRef(ButtonBase))
                          className="MuiButton-root MuiButton-contained makeStyles-submit-3 MuiButton-containedPrimary MuiButton-fullWidth"
                          component="button"
                          disabled={false}
                          focusRipple={true}
                          focusVisibleClassName="Mui-focusVisible"
                          type="submit"
                        >
                          <ForwardRef(ButtonBase)
                            className="MuiButton-root MuiButton-contained makeStyles-submit-3 MuiButton-containedPrimary MuiButton-fullWidth"
                            classes={
                              Object {
                                "disabled": "Mui-disabled",
                                "focusVisible": "Mui-focusVisible",
                                "root": "MuiButtonBase-root",
                              }
                            }
                            component="button"
                            disabled={false}
                            focusRipple={true}
                            focusVisibleClassName="Mui-focusVisible"
                            type="submit"
                          >
                            <button
                              className="MuiButtonBase-root MuiButton-root MuiButton-contained makeStyles-submit-3 MuiButton-containedPrimary MuiButton-fullWidth"
                              disabled={false}
                              onBlur={[Function]}
                              onDragLeave={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              onMouseDown={[Function]}
                              onMouseLeave={[Function]}
                              onMouseUp={[Function]}
                              onTouchEnd={[Function]}
                              onTouchMove={[Function]}
                              onTouchStart={[Function]}
                              tabIndex={0}
                              type="submit"
                            >
                              <span
                                className="MuiButton-label"
                              >
                                CRIAR
                              </span>
                              <WithStyles(memo)
                                center={false}
                              >
                                <ForwardRef(TouchRipple)
                                  center={false}
                                  classes={
                                    Object {
                                      "child": "MuiTouchRipple-child",
                                      "childLeaving": "MuiTouchRipple-childLeaving",
                                      "childPulsate": "MuiTouchRipple-childPulsate",
                                      "ripple": "MuiTouchRipple-ripple",
                                      "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                      "rippleVisible": "MuiTouchRipple-rippleVisible",
                                      "root": "MuiTouchRipple-root",
                                    }
                                  }
                                >
                                  <span
                                    className="MuiTouchRipple-root"
                                  >
                                    <TransitionGroup
                                      childFactory={[Function]}
                                      component={null}
                                      exit={true}
                                    />
                                  </span>
                                </ForwardRef(TouchRipple)>
                              </WithStyles(memo)>
                            </button>
                          </ForwardRef(ButtonBase)>
                        </WithStyles(ForwardRef(ButtonBase))>
                      </ForwardRef(Button)>
                    </WithStyles(ForwardRef(Button))>
                  </div>
                </ForwardRef(Paper)>
              </WithStyles(ForwardRef(Paper))>
            </main>
          </ForwardRef(Container)>
        </WithStyles(ForwardRef(Container))>
      </form>
    </CreateQuiz>
    <Portal
      containerInfo={
        <body>
          <div
            class="react-toast-notifications__container css-omekjv-ToastContainer"
          />
          <div
            aria-hidden="true"
            class="MuiDialog-root"
            role="presentation"
            style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px; visibility: hidden;"
          >
            <div
              aria-hidden="true"
              class="MuiBackdrop-root"
              style="opacity: 0; visibility: hidden;"
            />
            <div
              data-test="sentinelStart"
              tabindex="0"
            />
            <div
              class="MuiDialog-container MuiDialog-scrollPaper"
              role="none presentation"
              style="visibility: hidden; webkit-transform: translateY(768px) translateY(0px); transform: translateY(768px) translateY(0px);"
              tabindex="-1"
            >
              <div
                aria-describedby="alert-dialog-slide-description"
                aria-labelledby="alert-dialog-slide-title"
                class="MuiPaper-root MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm MuiPaper-elevation24 MuiPaper-rounded"
                role="dialog"
              >
                <div
                  class="MuiDialogTitle-root"
                  id="alert-dialog-slide-title"
                >
                  <h2
                    class="MuiTypography-root MuiTypography-h6"
                  >
                    Atenção
                  </h2>
                </div>
                <div
                  class="MuiDialogContent-root"
                >
                  <p
                    class="MuiTypography-root MuiDialogContentText-root MuiTypography-body1 MuiTypography-colorTextSecondary"
                    id="alert-dialog-slide-description"
                  >
                    Título ou descrição não preenchidos. O questionário deve conter pelo menos uma questão.
                  </p>
                </div>
                <div
                  class="MuiDialogActions-root MuiDialogActions-spacing"
                >
                  <button
                    class="MuiButtonBase-root MuiButton-root MuiButton-text MuiButton-textPrimary"
                    tabindex="0"
                    type="button"
                  >
                    <span
                      class="MuiButton-label"
                    >
                      OK
                    </span>
                    <span
                      class="MuiTouchRipple-root"
                    />
                  </button>
                </div>
              </div>
            </div>
            <div
              data-test="sentinelEnd"
              tabindex="0"
            />
          </div>
          <div
            aria-hidden="true"
            class="MuiDialog-root"
            role="presentation"
            style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px; visibility: hidden;"
          >
            <div
              aria-hidden="true"
              class="MuiBackdrop-root"
              style="opacity: 0; visibility: hidden;"
            />
            <div
              data-test="sentinelStart"
              tabindex="0"
            />
            <div
              class="MuiDialog-container MuiDialog-scrollPaper"
              role="none presentation"
              style="visibility: hidden; webkit-transform: translateY(768px) translateY(0px); transform: translateY(768px) translateY(0px);"
              tabindex="-1"
            >
              <div
                aria-describedby="alert-dialog-slide-description"
                aria-labelledby="alert-dialog-slide-title"
                class="MuiPaper-root MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm MuiPaper-elevation24 MuiPaper-rounded"
                role="dialog"
              >
                <div
                  class="MuiDialogTitle-root"
                  id="alert-dialog-slide-title"
                >
                  <h2
                    class="MuiTypography-root MuiTypography-h6"
                  >
                    Atenção
                  </h2>
                </div>
                <div
                  class="MuiDialogContent-root"
                >
                  <p
                    class="MuiTypography-root MuiDialogContentText-root MuiTypography-body1 MuiTypography-colorTextSecondary"
                    id="alert-dialog-slide-description"
                  >
                    Preencha o título e pelo menos uma opção em questões que contenham opções.
                  </p>
                </div>
                <div
                  class="MuiDialogActions-root MuiDialogActions-spacing"
                >
                  <button
                    class="MuiButtonBase-root MuiButton-root MuiButton-text MuiButton-textPrimary"
                    tabindex="0"
                    type="button"
                  >
                    <span
                      class="MuiButton-label"
                    >
                      OK
                    </span>
                    <span
                      class="MuiTouchRipple-root"
                    />
                  </button>
                </div>
              </div>
            </div>
            <div
              data-test="sentinelEnd"
              tabindex="0"
            />
          </div>
        </body>
      }
    >
      <ToastContainer
        hasToasts={false}
        placement="bottom-right"
      >
        <EmotionCssPropInternal
          __EMOTION_LABEL_PLEASE_DO_NOT_USE__="ToastContainer"
          __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
          className="react-toast-notifications__container"
          css={
            Object {
              "bottom": 0,
              "boxSizing": "border-box",
              "maxHeight": "100%",
              "maxWidth": "100%",
              "overflow": "hidden",
              "padding": 8,
              "pointerEvents": "none",
              "position": "fixed",
              "right": 0,
              "zIndex": 1000,
            }
          }
        >
          <div
            className="react-toast-notifications__container css-omekjv-ToastContainer"
          >
            <TransitionGroup
              childFactory={[Function]}
              component={null}
            />
          </div>
        </EmotionCssPropInternal>
      </ToastContainer>
    </Portal>
  </ToastProvider>
</Provider>
`;
